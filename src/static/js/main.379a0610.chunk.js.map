{"version":3,"sources":["assets/settings_check.svg","assets/icons/google.svg","assets/icons/facebook.svg","assets/icons/messages.svg","assets/icons/success.svg","assets/icons/checkbox.svg","assets/icons/off.svg","assets/icons/edit.svg","components/media/media_helpers.js","components/containers/container.js","components/navbar/navbar_styles/navbar_styles.js","components/navbar/navbar_styles/navbar_options.js","axios.js","services/auth_header_services.js","redux/constants/login_action_types.js","redux/reducers/login_reducers.js","redux/constants/session_action_types.js","redux/reducers/session_reducer.js","redux/constants/create_post_action_types.js","redux/reducers/create_post_reducers.js","redux/constants/navbar_action_types.js","redux/reducers/navbar_reducers.js","redux/constants/settings_action_types.js","redux/reducers/settings_reducers.js","redux/constants/user_action_types.js","redux/reducers/user_reducers.js","redux/constants/message_action_types.js","redux/reducers/message_reducers.js","redux/constants/home_action_types.js","redux/reducers/home_reducers.js","redux/reducers/asset_reducers.js","redux/constants/asset_action_types.js","redux/constants/app_action_types.js","redux/reducers/app_reducer.js","redux/reducers/combined_reducers.js","redux/store/store.js","redux/actions/navbar_actions.js","redux/actions/asset_actions.js","services/reset_redux_store.js","services/logout.js","components/navbar/NavOptionsItems.jsx","components/navbar/NavbarProfileOptions.jsx","components/notifications/navbar_notification_styles.js","components/navbar/LoggedInOptions.jsx","components/buttons/button_styles.js","components/buttons/HollowButton.jsx","redux/actions/login_actions.js","components/navbar/NotLoggedInOptions.jsx","components/navbar/navbar_styles/mobile_nav_styles.js","components/modals/helpers/modal_helpers.js","components/navbar/MobileNav.jsx","components/loading/loading_styles.js","components/loading/LoadingButtonSpinner.jsx","components/buttons/FilledButton.jsx","components/navbar/Navbar.jsx","redux/actions/message_actions.js","redux/actions/user_actions.js","services/socket_services.js","services/load_data_services.js","redux/actions/sessions_actions.js","components/app/app_helper.js","components/login_signup/styles/login_sign_up_styles.js","components/inputs/InputLabel.jsx","components/inputs/InputError.jsx","components/inputs/InputCSS.jsx","components/inputs/TextInput.jsx","components/login_signup/login_methods/FormSubmitContainer.jsx","components/login_signup/helpers/login_signup_helpers.js","services/validators/validators.js","components/forms/form_helpers.js","components/login_signup/login_methods/LoginForm.jsx","config/validatorLengths.js","services/validators/validator_helpers.js","components/login_signup/login_methods/SignupForm.jsx","components/notices/notice_styles.js","components/alignment/Center.jsx","components/login_signup/login_methods/EmailLoginSignupController.jsx","components/login_signup/LoginSignUpButton.jsx","config/constants.js","components/login_signup/login_methods/GoogleLogin.jsx","components/login_signup/login_methods/FacebookLogin.jsx","components/login_signup/LoginSignUpTermsPrivacyContainer.jsx","components/login_signup/LoginSignUpButtonsContainer.jsx","components/alerts/alert_styles.js","components/alerts/SuccessMessage.jsx","components/login_signup/forogotPassword/ForgotPasswordForm.jsx","components/login_signup/forogotPassword/ResetPasswordForm.jsx","components/login_signup/LoginSignUpControls.jsx","components/login_signup/LoginSignUp.jsx","components/app/styles/app_styles.js","components/modals/styles/modal_styles.js","redux/actions/app_actions.js","components/modals/Modal.jsx","components/page_nav/sideNav.jsx","components/pages/create_post/CreatePostNavItems.jsx","components/headings/ViewBoxHeading.jsx","components/inputs/TextArea.jsx","components/inputs/NumberInput.jsx","components/inputs/InputRange.jsx","components/pages/home/styles/search_styles.js","components/inputs/location/InputLocationPopup.jsx","components/inputs/location/InputLocationSuggestions.jsx","components/inputs/location/InputLocation.jsx","components/text/text.js","components/pages/create_post/CreatePostSummary.jsx","components/inputs/CheckBox.jsx","components/inputs/InputOptions.jsx","redux/actions/create_post_actions.js","components/pages/create_post/CreatePostButtons.jsx","components/pages/create_post/helpers/create_post_helpers.js","components/pages/create_post/CreatePostInput.jsx","components/loading/Loading.jsx","components/containers/FullScreenBox.jsx","components/notices/VerifyEmailNotice.jsx","components/pages/create_post/CreatePost.jsx","components/pages/settings/SettingsNotice.jsx","components/pages/settings/UpdateSuccessful.jsx","components/pages/settings/settings_security/SettingsSecurityInfo.jsx","components/forms/form_styles.js","redux/actions/settings_actions.js","components/pages/settings/SettingsSubmitButtons.jsx","components/pages/settings/settings_helpers.js","components/pages/settings/settings_security/styles/settings_security_styles.js","components/pages/settings/settings_security/SettingsSecurityEdit.jsx","components/pages/settings/styles/settings_styles.js","components/pages/settings/settings_info/SettingsInfoEdit.jsx","components/pages/settings/settings_security/SettingsSecurity.jsx","components/pages/settings/SettingsNav.jsx","components/headings/IconHeadingBox.jsx","components/pages/settings/settings_info/SettingsInfoShow.jsx","helpers/image_helpers.js","components/pages/settings/settings_info/SettingsProfilePicture/styles/change_profile_picture_styles.js","components/pages/settings/settings_info/SettingsProfilePicture/ChangeProfileImagePreview.jsx","components/pages/settings/settings_info/SettingsProfilePicture/profile_image_preview_helper.js","components/pages/settings/settings_info/SettingsProfilePicture/ChangeProfileImageSubmit.jsx","components/pages/settings/settings_info/SettingsProfilePicture/profile_image_submit_helpers.js","components/pages/settings/settings_info/SettingsProfilePicture/ChangeProfileImage.jsx","components/pages/settings/settings_info/SettingsProfilePicture/styles/settings_info_styles.js","components/pages/settings/settings_info/SettingsInfo.jsx","components/pages/settings/settings_notifications/SettingsNotificationsInfo.jsx","components/inputs/Switch.jsx","components/pages/settings/settings_notifications/SettingsNotificationsEdit.jsx","components/pages/settings/settings_notifications/SettingsNotifications.jsx","components/pages/settings/settings_account/settings_account_styles.js","components/pages/settings/settings_account/SettingsAccountItem.jsx","components/pages/settings/settings_account/SendVerificationEmail.jsx","components/modals/ConfirmAlertWithText.jsx","components/notices/Notice.jsx","components/pages/settings/settings_account/SettingsDeleteAccount.jsx","components/pages/settings/settings_account/blocked_user_styles.js","components/pages/settings/settings_account/BlockedUsersDetails.jsx","components/pages/settings/settings_account/SettingsAccount.jsx","components/pages/settings/Settings.jsx","components/pages/messages/conversation_list_components/styles/conversation_list_styles.js","components/pages/messages/helpers/timestamp_helpers.js","components/options/option_styles.js","components/modals/ConfirmAlert.jsx","components/modals/BlockUserModal.jsx","components/pages/messages/conversation_list_components/ConversationItemOptions.jsx","components/icons/icon_styles.js","components/icons/Icon.jsx","components/pages/messages/conversation_list_components/styles/conversation_options_styles.js","components/pages/messages/conversation_list_components/ConversationOptionsIcon.jsx","components/pages/messages/conversation_list_components/styles/conversation_item_styles.js","components/pages/messages/conversation_list_components/ConversationListItem.jsx","components/pages/messages/helpers/conversation_submit_images_helpers.js","components/pages/messages/conversation_list_components/helpers/conversation_list_items_update_helper.js","components/pages/messages/conversation_list_components/ConversationListItems.jsx","components/pages/messages/conversation_list_components/helpers/conversation_list_items_conversation_ui_helpers.js","components/pages/messages/conversation_list_components/ConversationsList.jsx","components/pages/messages/conversation_message_components/helpers/conversation_message_display_helpers.js","components/pages/messages/conversation_message_components/styles/conversation_button_styles.js","components/pages/messages/conversation_message_components/MessageInputAttachedImages.jsx","components/pages/messages/conversation_message_components/styles/emoji_option_styles.js","components/pages/messages/conversation_message_components/EmojiContainer.jsx","components/pages/messages/conversation_message_components/ConversationButtons.jsx","components/pages/messages/conversation_message_components/styles/message_container_styles.js","components/pages/messages/conversation_message_components/Message/styles/message_styles.js","components/pages/messages/conversation_message_components/Message/styles/message_image_styles.js","components/pages/messages/conversation_list_components/NewConversationGreeting.jsx","components/pages/messages/conversation_message_components/Message/MessageOptionsBox.jsx","components/pages/messages/conversation_message_components/Message/MessageOptions.jsx","components/pages/messages/conversation_message_components/Message/MessageImages.jsx","components/pages/messages/conversation_message_components/Message/Message.jsx","components/pages/messages/conversation_message_components/ConversationRenderMessage.jsx","components/pages/messages/conversation_message_components/ConversationMessageDisplay.jsx","components/pages/messages/conversation_message_components/styles/conversation_heading_styles.js","components/pages/messages/conversation_message_components/ConversationHeading.jsx","components/pages/messages/conversation_message_components/ConversationDetails.jsx","components/pages/messages/Messages.jsx","components/post/styles/postDetailsStyles.jsx","components/modals/ReportModal.jsx","components/post/PostOptions.jsx","components/post/styles/requirements.js","components/post/PostRequirements.jsx","components/post/helpers/post_details_helpers.js","components/post/PostDetailsItem.jsx","components/pages/user_posts/styles/styles.jsx","components/pages/user_posts/NoPosts.jsx","components/pages/user_posts/UserPosts.jsx","components/post/styles/side_profile_styles.js","components/post/UserOptions.jsx","components/post/PostProfileInfo.jsx","components/post/PostProfileBio.jsx","components/pages/home/helpers/home_profile_helpers.jsx","components/post/PostProfileInfoModal.jsx","components/post/SideProfileInfo.jsx","components/post/PostDetails.jsx","components/pages/terms_privacy/terms_privacy_styles.js","components/pages/terms_privacy/TermsOfService.jsx","components/pages/home/HomeSearch.jsx","components/pages/home/styles/home_styles.js","components/pages/home/HomeFilters.jsx","components/pages/home/HomePostOptions.jsx","redux/actions/home_actions.js","components/pages/home/styles/post_styles.js","components/pages/home/HomePostListItem.jsx","components/pages/home/HomePostsList.jsx","components/pages/home/Home.jsx","components/errors/VerifyEmail.jsx","components/images/images.js","components/pages/about/about_styles.js","components/pages/about/About.jsx","components/pages/errors/error_styles.js","components/pages/errors/NoMatch.jsx","components/pages/terms_privacy/PrivacyPolicy.jsx","components/router/AppRouter.jsx","components/app/App.jsx","index.jsx"],"names":["module","exports","tabLandUp","mediaQueries","createMediaQuery","query","showMedea","StandardContainer","styled","section","is","props","navbarHeight","OverflowContainer","div","SideNavContainer","ContentSection","InputBoxBase","css","InputBox","width","height","RelativePositionContainer","FlexContainer","TextContainerInner","FullHeightContainer","InnerNavContainer","ProfileImage","img","LoggedInContainer","NavLinkContainer","ReactSVG","NavButton","button","NavLogo","NavbarContainerBase","NavbarProfileOptionsContainer","NavbarProfileOption","NavbarProfileImage","NavbarProfileContainer","NavbarProfileName","NavbarOptionsContainer","NavbarSubOptionsContainer","SubLinkText","instance","axios","create","baseURL","process","REACT_APP_BACKEND_URL","getAuthHeader","headers","retrieveToken","getAuthHeaderWithData","data","params","Authorization","localStorage","getItem","initialUIState","isSignUpOpen","isLoginOpen","isEmailLoginOpen","isEmailSignUpOpen","isForgotPasswordOpen","isResetPasswordOpen","loginSignUpState","state","action","type","initialSessionState","isLoggedIn","undefined","appDataLoaded","sessionState","Object","assign","initialCreatePostState","activeNavIndex","loading","createPostState","currentPageIsValid","formType","editPostId","isNavProfileOptionsOpen","navbarState","initialSettingsState","settingsEditActive","settingsEditComplete","settingsState","settingsLoading","initialState","profileImageChanged","userState","userData","newMessages","recipientOnlineChanges","messageImagesLoaded","newCurrentConversationMessages","updateConversationOnMessageDelete","lastMessageStatus","mobileActiveConversation","deleteMessages","currentConversation","messageState","initialHomeState","clearFilters","assetState","assetInit","initialAppState","appState","blurBackground","app","combineReducers","inputState","homeState","postState","modalState","form","formReducer","store","compose","reduxReset","createStore","enhanceCreateStore","devToolsEnhancer","resetReduxStore","navbarHeightValue","getState","dispatch","logoutUser","async","post","history","push","removeItem","NavOptionsItems","useHistory","to","onClick","NavbarProfileOptions","closeNavProfileOptions","location","useLocation","useSelector","previousLocation","usePrevious","pathname","useEffect","handleClickOutside","src","profileImage","name","prototype","clickOutsideConfig","onClickOutside","NavbarNotification","LoggedInOptions","setIsNavProfileOptionsOpen","useState","hasUnreadMessages","className","getProfilePicture","buttonBase","FilledButtonTag","ButtonText","OuterButtonContainer","ButtonContainer","HollowButtonTag","HollowButton","active","rightMargin","buttonText","NotLoggedInOptions","useDispatch","right_margin","MobileNavContainer","MobileNavContentContainer","useDisableScroll","document","getElementById","style","overflow","MobileNav","loadingAnimation","keyframes","LoadingBackground","LoadingContainer","LoadingText","LoadingIcon","marginBottom","LoadingSpinner","buttonTextWidth","LoadingWheel","LoadingButtonSpinner","wheels","doTimes","index","key","blackLoadingIcon","rightSideLoading","leftSideLoading","insideButtonLoading","map","item","FilledButton","setButtonTextWidth","buttonTextWidthRef","useCallback","node","offsetWidth","stretch","mlAuto","mtAuto","homeSearch","no-stretch","noStretch","disabled","disabledColor","warning","small","ref","Navbar","mobileNavOpen","setMobileNavOpen","logo","SPEKKLY_LOGO","bounds","onResize","contentRect","measureRef","nav","dataLoaded","matches","isOpen","menuClicked","strokeWidth","rotate","color","borderRadius","animationDuration","newCurrentConversationMessagesDispatch","mobileActiveConversationDispatch","currentConversationDispatch","recipientOnlineChangesDispatch","newMessagesDispatch","lastMessageStatusDispatch","updateConversationOnMessageDeleteDispatch","userDataDispatch","initSocket","a","socket","io","connect","on","socketId","id","delete","message","authoredUserId","userId","returnDataHelper","success","Error","getUserInfo","userInfo","get","setNextPage","hasNextPage","setPage","page","initApp","setDataLoaded","vhCheck","assets","getAssets","validUser","verifySessionToken","e","SubmitContainer","LoginSignUpHeading","h1","LoginSignUpText","BtnOuterContainer","LoginSignUpTextButton","span","LoginSignUpWidthContainer","BottomButtonSpacer","TermsPrivacyLinkShared","TermsPrivacyLink","LoginSignUpTermsPrivacyText","p","TermsPrivacyLinkContainer","SubmitErrorContainer","InputForm","InputLabelTag","label","InputLabel","React","Component","render","extraLabelSpace","this","textLabel","htmlFor","for","InputError","loginSignUpError","error","inputBase","TextInputTag","input","customWidth","SuggestedTextPopup","SuggestedTextPopupText","TextInput","meta","touched","invalid","FormSubmitContainer","submitting","center","handleSubmit","url","values","handleSuccess","token","console","log","FORM_ERROR","handleThirdPartyLoginSuccess","setError","handleSuccessfulLogin","setItem","validEmail","value","validator","isEmail","validLength","options","nameFormatted","sentenceCase","allowBlank","min","max","length","isLength","notBlank","isEmpty","ignore_whitespace","isObject","keys","passwordConfirm","allValues","currentPassword","setValue","allowNull","utils","formState","changeValue","toggleCheckMark","oldValue","findIndex","element","splice","LoginForm","initialTestValues","onSubmit","initialValues","submitError","component","validate","nameLength","passwordLength","jobTitleLength","bioLength","postTitleLength","postDescriptionLength","locationLength","createValidatorLength","validateOptions","SignUpForm","email","password","NoticeText","NoticeHeading","Center","EmailLoginSignUpController","closeLoginSignUp","title","details","switchLoginMethodTitle","switchLoginMethodBtn","ButtonImage","Button","LoginSignUpButton","buttonImage","transitOptions","typeOptions","reportOptions","createPostNavTitles","GoogleLoginButton","clientId","renderProps","googleLogo","btnText","onSuccess","response","tokenId","onFailure","cookiePolicy","FacebookLoginButton","appId","autoLoad","fields","callback","facebookResponse","facebookLogo","LoginSignUpTermsPrivacyContainer","isLoginOpenValue","handleClick","route","LoginSignUpButtonsContainer","GoogleLogin","FacebookLogin","emailIcon","switchModeTitle","switchModeBtnText","SuccessIcon","TextContainer","SuccessMessage","largeMarginBottom","successIcon","alt","ForgotPasswordForm","forgotPasswordEmailSent","setForgotPasswordEmailSent","resetLinkValid","setResetLinkValid","passwordResetSuccessful","setPasswordResetSuccessful","validUntil","queryString","parse","window","search","moment","diff","handlePasswordResetSuccess","smallBottomSpace","LoginSignUpControls","LoginSignUp","AppContainer","grow","ModalContainerTag","ModalInnerContainer","ModalHeading","ModalText","ModalFormContainer","ConfirmAlertWithTextFieldContainer","CloseButtonImage","CloseButtonContainer","Modal","closeIcon","BLACK_X_ICON","outsideClickIgnoreClass","closeModal","target","currentTarget","preventDefault","closeModalFromClick","large","medium","showCloseButton","children","SideNavItemContainer","SideNavItemText","isOr","SideNavCheckMark","toLowerCase","completed","checkbox","ViewBoxHeadingTag","ViewBoxHeading","emptyConversation","heading","TextAreaTag","textarea","TextArea","InputNumberTag","InputNumberContainer","InputPlaceholder","NumberInput","placeholder","data-lpignore","borderNone","inputLabel","InputRangeTag","CreatePostMinMaxContainer","CreatePostRangeContainer","InputRange","removeCommas","replace","validateRangeInput","minVal","test","maxVal","parseInt","toString","createField","validation","SearchForm","HomeSearchFormContainer","HomeSearchInput","SearchSpacer","InputLocationPopup","closeInputLocationSuggestionsPopup","predictions","prediction","handleLocationSuggestionClick","description","InputLocationSuggestions","showInputLocationPopup","setShowInputLocationPopup","predictionIds","submit","InputLocation","setPredictions","getLocationPredictions","setTimeout","setLocation","TextGridContainer","TextGridLabel","GreyText","StandardParagraph","LineSpaceText","BoldText","CenteredHeading","TransitContainer","CreatePostSummary","nestedProperty","transit","transitItem","CheckBoxContainer","CheckBoxTag","CheckBoxInput","handleToggle","whiteInput","CheckBoxContainerOuterContainer","InputOptions","activeNavIndexProp","navLength","createPostType","belongsToUser","patch","postID","CreatePostInput","setInitialValues","buttonHeight","setButtonHeight","getPost","mutators","formProps","borderBottom","mobileScroll","customMobileSize","headingHeight","errors","Loading","vertical","fillPage","fixed","solidBackground","clearBackground","loadingText","FullScreenBox","customSize","navbarBottomMargin","textCenter","VerifyEmailNotice","setLoading","emailVerificationSent","setEmailVerificationSent","emailVerificationHeading","setEmailVerificationHeading","emailVerificationText","setEmailVerificationText","text","hideToken","noBottomMargin","emailVerified","setCreatePostType","setHeadingHeight","setPostID","formTypeProp","match","SettingsCheckMark","SettingsCheckMarkContainer","SettingsToggleHeading","SettingToggleTextContainer","SettingsToggleText","SettingsNotice","SettingsCheckMarkImage","SettingsInactiveImage","ProfileUpdatedNotice","ProfileUpdatedCheckMark","ProfileUpdatedContainer","UpdateSuccessful","animationRef","createRef","belowSiblings","borderTop","onLoad","nodeHeight","current","offsetHeight","anime","targets","easing","translateY","duration","delay","CheckMark","passwordSet","messageText","RelativeForm","setEditActive","handleSettingsSubmit","setEditCompleteText","editCompleteText","getUpdatedUserData","PasswordResetFieldContainer","submitOptions","SettingsFieldContainer","SettingBioField","jobTitle","bio","SettingsSecurity","editActive","SettingsNav","navTitles","activeIndex","clickable","hoverable","setActiveIndex","handleNavClick","IconHeadingContainer","Icon","Heading","IconContainer","editIcon","SETTINGS_EDIT_ICON","InfoNote","handleFileChange","results","setImageArray","last","operation","attachedImages","result","ChooseProfilePictureContainer","UploadButton","ProfilePictureHeading","ProfileFormatted","CropNotice","SubmitButtonContainer","imageRef","ChangeProfileImagePreview","currentRawImage","setCurrentRawImage","imageFileTypeError","setImageFileTypeError","imageCrop","setImageCrop","unit","aspect","formatRawImage","isUrl","imageAsUrl","imageDataURI","encodeFromURL","onChange","crop","onComplete","setCroppedImage","image","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","toDataURL","getImageBlob","onImageLoaded","as","ChangeProfileImageSubmit","currentProfileImage","profileImageChangedCurrentValue","croppedImage","closeEditProfilePicture","compressedImage","imageRead","Jimp","read","imageData","resize","quality","getBufferAsync","MIME_JPEG","compressImage","put","uploadCompressedImage","showProfileUpdatedNotice","ChangeProfileImage","SettingsProfileImage","SettingsProfileImageContainer","SettingsInfo","showEditProfilePicture","setShowEditProfilePicture","notifications","passwordChanged","emailChanged","Notice","Container","SwitchInputTag","SwitchInput","Switch","checked","checkedIcon","uncheckedIcon","onColor","SettingsNotificationsFieldContainer","userNotifications","SettingsNotifications","SettingsNotificationsEdit","AccountItemContainer","AccountItemHeading","AccountItemOuterContainer","SettingsAccountItem","SendVerificationEmail","emailVerificationError","setEmailVerificationError","emailVerificationLoading","setEmailVerificationLoading","setEmailVerificationEmailSent","ConfirmAlertWithText","validConfirm","closeAlert","handleNoticeConfirm","SettingsDeleteAccount","deleteAccountAlertOpen","setDeleteAccountAlertOpen","accountDeletedConfirmationOpen","setAccountDeletedConfirmationOpen","closeDeleteAccountAlertOpen","BlockedUsersContainer","isNot","LoadingError","BlockedUserImage","BlockedUserContainer","BlockedUserName","ItemsContainer","BlockButtonContainer","blockedUsers","userDataProp","setBlockedUsers","loadingError","setLoadingError","removeLoadingIndex","setRemoveLoadingIndex","unblockLoadingIndices","setUnblockLoadingIndices","indexToRemove","removeItems","fetchBlockedUsers","user","includes","blockedUserId","payload","blockUser","setBlockedUserListVisible","setUnblockUserError","unblockUser","SettingsAccount","emailVerificationEmailSent","blockedUserListVisible","unblockUserError","closeShowBlockedUsers","space","Settings","isMobile","setIsMobile","ConversationOptionContainer","conversationOptionsIconBounds","top","left","conversationOptionsBounds","MuteIcon","ConversationListContainer","conversationSearchContainerHeight","NoConversationsText","ConversationContainer","ConversationSearchContainer","ConversationSearchInput","formatMessageTimeStamp","messageTimeStamp","dateFromMessage","Date","days","getDaysDiff","now","dateFormat","firstTimestamp","secondTimestamp","optionsArrow","OptionsContainer","Option","ConfirmAlert","BlockUserModal","showBlockConfirmation","setShowBlockConfirmation","handleBlockedUserConfirmation","ConversationItemOptions","conversation","setConversationOptionsBounds","showBlockUserModal","setShowBlockUserModal","conversationOptionsAreVisible","setConversationOptionsAreVisible","recipientId","recipientName","hideOptions","handleMute","conversationId","mute","muted","toggleMuteIcon","deleteConversation","removeConversation","windowBounds","windowHeight","bottom","conversationOptions","svgContainerHeight","svgIconHeight","setSvgIconHeight","setSvgContainerHeight","beforeInjection","svg","svgClasses","forEach","svgClass","classList","add","ConversationOptionsContainer","ConversationOptionsIcon","OPTIONS_ICON","setConversationOptionsIconBounds","conversationOptionsIconRef","setShowOptions","showOptions","ConversationDate","ConversationItemInnerContainer","ConversationOnlineIndicator","ConversationThumbnail","ConversationPreviewText","ConversationRecipientContainer","ConversationItemContainer","ConversationNameText","ConversationListItem","showOptionIcon","setShowOptionIcon","setWindowBounds","useRef","selected","handleShowOptions","handleHideOptions","swipeHandlers","useSwipeable","onSwipedLeft","onSwipedRight","getBoundingClientRect","onMouseEnter","onMouseLeave","recipientProfileImage","recipientIsOnline","unreadMessages","unread","lastMessageTimeStamp","Truncate","trimWhitespace","latestMessageText","MUTE_CONVERSATION_ICON","compressImages","compressedImages","dataBuffer","decode","isURL","jimpImage","bitmap","scaleToFit","postImages","writeUrls","Promise","all","uploadReadyImages","fileName","handleNewMessage","conversations","setConversations","newMessage","shift","conversationIndex","images","createdAt","arrayMove","updateConversation","ConversationListItems","setHasNextPage","conversationsLoadedError","setConversationsLoadedError","recipientOnlineChange","recipientUserId","isOnline","recipientLastSignIn","handleConversationOnlineStatusChange","updateConversationAfterLastMessageDelete","getConversations","readBy","find","updateConversationUnread","onBottom","conversationIdToToggleMute","h100","ConversationsList","setConversationSearchContainerHeight","onMessageContainerScrollNew","messageListContainerRef","scrollTop","originalScrollHeight","scrollHeight","newScrollHeight","scrollToBottom","setScrolledToBottom","scroller","Scroll","scrollTo","containerId","isUserAtBottom","clientHeight","ConversationButtonIcon","AttachedImagePreview","AttachedImageContainer","SubmitMessageForm","RemoveAttachedImageIcon","AttachedImagePreviewItem","AttachedImageItemContainer","InputArea","TextareaAutosize","MessageInputAttachedImages","WHITE_CLOSE_CIRCLE","onMouseEnterLeaveThumbnail","displaySetting","event","parentElement","previousSibling","display","removeAttachedImage","EmojiSelectorContainer","EmojiSelectorItems","EmojiItemsContainer","EmojiOuterContainer","EmojiItem","EmojiSelectorItem","EmojiContainer","emojis","setEmojis","setHeight","EMOJIS_NESTED_LIST","getEmojis","bottomArrow","emojiContainer","subgroups","subgroup","emoji","codes","addEmoji","char","group","ConversationButtons","setAttachedImages","attachedImageError","setAttachedImageError","emojiOptionsOpen","setEmojiOptionsOpen","initialTextAreaHeight","setInitialTextAreaHeight","alignButtonsCenter","setAlignButtonsCenter","uploadImageOptions","handleTextAreaHeightChange","imageFileNames","messageTextTempId","uniqid","messageImageTempId","messageTextFromForm","attachedImagesFromForm","change","prevValue","alignCenter","onHeightChange","maxRows","ADD_IMAGE_ICON","EMOJI_ICON","SEND_MESSAGE_ICON","MessageListContainer","EmptyConversationContainer","MessageContainer","MessageProfileImage","MessagesInnerContainer","authored","isLastMessageInSeries","MessagesOuterContainer","NewConversationText","MessageStatus","MessageTimestamp","MessageIconContainer","MessageOptionsContainer","MessageText","previousMessageIsSameAuthor","timeStampBefore","nextMessageIsSameAuthor","timeStampAfter","TimeStamp","getImagesColumns","NewConversationProfileImage","MessageImageContainer","imagesLength","MessageImageInnerContainer","NewConversationGreeting","first","MessageOptionsBox","showDeleteMessageModal","setShowDeleteMessageModal","messageOptions","messageId","deleteMessagesDispatch","MessageOptions","setOpenOptions","openOptions","hideMessageOptions","messageOptionsIcon","MessageImages","nextMessage","messagePresent","multipleImages","messageImagesLoadedDispatch","Message","previousMessage","isLastMessage","ConversationRenderMessage","firstMessage","ConversationMessageDisplay","Element","postsLoadingError","setPostsLoadingError","getMessages","pageP","conversationIdP","tmpPage","tmpConId","setMessages","messages","deleteMessageId","deleteMessageIndex","newConversationUpdate","handleDeleteMessage","newCurrentConversationMessage","tempId","messageAuthoredByUser","setNewMessageAdded","newMessageAdded","onScroll","scrolledToBottom","ConversationHeadingContainer","ConversationImage","ConversationHeadingText","ConversationActiveText","MobileBackButton","TimeAgo","addLocale","en","ConversationHeading","timeAgo","update","setUpdate","activeText","sleep","humanInterval","handleUpdate","date","format","addSubtractDate","subtract","gradation","canonical","smallPadding","isObjectEmpty","BACK_ICON","headingIndicator","ConversationDetails","headingBoxHeight","setHeadingBoxHeight","buttonContainerHeight","setButtonContainerHeight","Messages","clearActiveConversation","show","PostDetailsContainer","PostTitle","PostTitleContainer","PostOuterContainer","PostOptionsContainer","PostDescriptionContainer","SectionTitle","PostDetailsSection","DateAuthorText","ReportModal","formSubmitted","setFormSubmitted","reportedEntityType","reportedEntityId","PostOptions","postSection","postDeleted","showReportModal","setShowReportModal","showDeleteConfirmModal","setShowDeleteConfirmModal","handleDelete","postId","postBelongsToUser","RequirementSubHeading","RequirementsContainer","PostRequirements","smallContainer","cost","formatAuthoredDate","PostDetailsItem","anyChange","setAnyChange","optionsActive","setOptionsActive","optionsIcon","PostsContainer","NoPostsHeading","NoPostsParagraph","NoPosts","UserPosts","posts","setPosts","getPosts","userPosts","ProfileName","ProfileDetailsContainer","ProfileNameContainer","SideProfileOptionsContainer","BioContainer","SideProfileContainer","ReadMoreText","UserOptions","profileOptions","PostProfileInfo","profile","postAuthoredByCurrentUser","setShowPostProfileInfoModal","PostProfileBio","lines","ellipsis","startNewConversation","setCreateNewConversationLoading","PostProfileInfoModal","currentUserId","profileModal","SideProfileInfo","showPostProfileInfoModal","createNewConversationLoading","PostDetails","setPost","fetchPost","TermsPrivacyTitle","TermsPrivacyDate","SectionHeading","h4","TermsOfService","HomeSearch","clearFilter","resetForm","setFilters","filters","rest","reset","HomeMainContainer","HomeSidePanelForm","ToggleFiltersButton","HomeFilters","showFilters","setShowFilters","setResetForm","errorName","ClearFiltersButton","HomePostOptions","postsLength","PostContainer","h2","PostDate","RequirementsList","DescriptionText","HomePostListItem","handlePostClick","HomePostsList","hasFilters","totalDocs","Home","filterPostsVersion","setFilterPostsVersion","setTotalDocs","resetPassword","useDeepCompareEffect","home","isEmptyObject","VerifyEmail","validDate","emailVerificationToken","setSuccessMessage","setFailureMessage","setState","closePage","bind","withRouter","StandardImage","AboutMainImage","AboutParagraph","AboutHeading","About","smallBottomMargin","lastImage","NoMatchMainTitle","NoMatchText","NoMatchLink","NoMatchLinkContainer","NoMatch","middleLink","PrivacyPolicy","larger","href","AppRouter","exact","path","App","favicon","FAVICON","Index","ReactDOM"],"mappings":"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,6FACA,6FAEA,kBAACA,GAAD,0GAEA,sVAOA,6FACA,2RAMA,6FACA,mTAMA,6FACA,yKAIA,6FACA,6FAEA,4FACE,4FACE,kBAACrpB,GAAD,wGACA,8FACA,8FACA,qHAEA,8FACA,mHACA,8FACA,8cASF,6FACA,6FAEA,4FACE,kBAACA,GAAD,qHACA,8FACA,8FACA,wHAEA,8FACA,mHACA,8FACA,0LAKF,6FACA,6FAEA,4FACE,kBAACA,GAAD,gGACA,8FACA,8FACA,wHAEA,8FACA,mHACA,8FACA,0ZASF,6FACA,6FAEA,4FACE,kBAACA,GAAD,2GACA,8FACA,8FACA,wHAEA,8FACA,8HACA,8FACA,smBAaJ,6FACA,6FAEA,kBAACqpB,GAAD,CAAgB8D,QAAM,EAAtB,iGACA,4JACA,6FACA,4FACE,4FACE,kBAACntB,GAAD,6GADF,oDAKA,6FACA,4FACE,kBAACA,GAAD,iGADF,wMAOA,6FACA,4FACE,kBAACA,GAAD,4GADF,sLAOA,6FACA,4FACE,kBAACA,GAAD,yFADF,oWAUA,6FACA,4FACE,kBAACA,GAAD,wFADF,+OAOA,6FACA,4FACE,kBAACA,GAAD,kGADF,+CAKF,6FACA,6FAEA,kKACA,6FAEA,4FACE,4FACE,kBAACA,GAAD,iGADF,8SASA,6FACA,4FACE,kBAACA,GAAD,iGADF,4NAOA,6FACA,4FACE,kBAACA,GAAD,0FADF,0SAQA,6FACA,4FACE,kBAACA,GAAD,iGADF,oHAMA,6FACA,4FACE,kBAACA,GAAD,2FADF,ugBAYF,6FACA,6FAEA,kBAACqpB,GAAD,CAAgB8D,QAAM,EAAtB,sGACA,2gBASA,6FACA,8NAKA,6FACA,ibAOA,6FACA,6FAEA,kBAAC9D,GAAD,CAAgB8D,QAAM,EAAtB,sGACA,kBAAC9D,GAAD,8FAEA,2TAMA,6FAEA,kBAACA,GAAD,wFACA,2TAMA,6FAEA,kBAACA,GAAD,iGACA,qMAKA,6FACA,4FACE,8HACA,wJACA,yKAIA,iKAGA,gIAGF,6FACA,6FACA,kBAACA,GAAD,uGACA,mYAQA,6FACA,6FAEA,kBAAC3yB,GAAD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","file":"static/js/main.379a0610.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings_check.d35c122f.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.09aea0f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.3ae13bc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/messages.e6956db2.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.807c3750.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.6bc6733e.svg\";","module.exports = __webpack_public_path__ + \"static/media/off.0b3be563.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.d37d9400.svg\";","export const phoneDown = \"(max-width: 37.5em)\";\n\nexport const tabPortDown = \"(max-width: 56.25em)\";\nexport const tabPortUp = \"(max-width: 37.5em)\";\n\nexport const tabLandDown = \"(max-width: 75em)\";\n\nexport const tabLandToTabPort = \"(max-width: 75em) and (min-width: 37.5em)\";\nexport const tabLandUp = \"(min-width: 56.25em)\";\n\nexport const desktopUp = \"(min-width: 75em)\";\n\nexport const desktopWideUp = \"(min-width: 125em)\";\n\nexport const mediaQueries = {\n  phoneDown,\n  tabPortDown,\n  tabPortUp,\n  tabLandDown,\n  tabLandUp,\n  tabLandToTabPort,\n  desktopUp,\n  desktopWideUp,\n};\n\nexport const createMediaQuery = (query, showMedea = true) =>\n  `${showMedea ? \"@media\" : \"\"} only screen and ${query}`;\n","import styled, {css} from 'styled-components'\nimport is from 'styled-is'\nimport {createMediaQuery, mediaQueries} from \"../media/media_helpers\";\n\n\nexport const StandardContainer = styled.section`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  padding-right: 2rem;\n  padding-left: 2rem;\n  display: block;\n  max-width: 115rem;\n  position: relative;\n\n  ${is('nav')`\n    z-index: 11;\n    max-width: var(--nav-container);\n  `};\n  \n   ${is('userPosts')`\n    max-width: 120rem;\n  `};\n   \n  ${is('text')`\n    max-width: 90rem;\n  `};\n  \n  ${is('messages')`\n    margin-top: 4rem;\n    max-width: 170rem;\n    height: calc(100vh - var(--vh-offset, 0px) - var(--messages-navbar-offset) - ${props => props.navbarHeight}px)\n  `};\n  \n   ${is('post')`\n    max-width: 130rem;\n  `};\n  \n   ${is('home')`\n    max-width: 150rem;\n  `};\n`\n\nexport const OverflowContainer = styled.div`\n  overflow-y: auto;\n`\n\nexport const SideNavContainer = styled.div`\n  display: grid;\n  grid-column-gap: 2rem;\n   margin-top: 4rem;\n  \n  \n   ${createMediaQuery(mediaQueries.tabLandUp)} { \n      grid-template-columns: .4fr 1fr;\n      margin-bottom: 6rem;\n     \n  }\n`\n\nexport const ContentSection = styled.div`\n    background-color: var(--background-color);\n    position: relative;\n`\n\nexport const InputBoxBase = css`\n  padding: var(--input-box-padding);\n  background-color: white;\n  position: relative;\n  \n  ${is('center')`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  `};\n   \n   ${is('clearBackground')`\n      background-color: rgba(255,255,255,0);\n  `};\n   \n  ${is('borderBottom')`\n    border-bottom: 2px solid var(--background-color);\n  `};\n  \n  ${is('extraPadding')`\n    padding: 4rem\n  `};\n  \n  ${is('textCenter')`\n    text-align: center;\n  `};\n  \n  ${is('borderTop')`\n    border-top: 2px solid var(--background-color);\n  `};\n    \n  ${is('belowSiblings')`\n       z-index: 0;\n  `};\n`\n\n\nexport const InputBox = styled.div`\n    ${InputBoxBase};\n    \n     ${is('emptyBox')`\n        height: 6rem;\n     `}\n     \n      ${is('mobileScroll')`\n       ${createMediaQuery(mediaQueries.tabPortDown)} { \n            overflow: auto;\n        }\n     `}\n     \n     ${is('smallPadding')`\n       padding: 1.3rem 2rem;\n     `}\n    \n    ${is('navbarBottomMargin')`\n        margin-bottom: ${props => (props.navbarHeight)}px;\n    `};\n    \n    ${is('customSize')`\n         ${is('width')`\n            width: ${props => (props.width)};\n        `};\n    \n        ${is('height')`\n             height: ${props => (props.height)};\n        `};\n    `};\n    \n    \n    ${is('customMobileSize')`\n      ${createMediaQuery(mediaQueries.tabPortDown)} { \n           ${is('width')`\n            width: ${props => (props.width)};\n        `};\n    \n        ${is('height')`\n             height: ${props => (props.height)};\n        `};\n      }\n    `};\n    \n    \n    \n    ${is('center')`\n       display: flex;\n       flex-direction: column;\n       justify-content: center;\n       align-items: center;\n  `};\n`\n\nexport const RelativePositionContainer = styled.div`\n  position: relative;\n\n  ${is('inline')`\n       display: inline-block;\n       margin-right: 2rem;\n  `};\n`\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  \n  ${is('alignCenter')`\n       align-items: center;\n  `};\n`\n\nexport const TextContainerInner = styled.div`\n  margin-top: 8rem;\n  margin-bottom: 6rem;\n  background-color: white;\n  padding: 4rem;\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n      padding: 2rem;\n  }\n  \n  ${createMediaQuery(mediaQueries.phoneDown)} {\n    margin: 4rem 0;\n  }\n`\n\nexport const FullHeightContainer = styled.div`\n  height: 100%;\n`\n","import styled from \"styled-components\";\nimport is from \"styled-is\";\nimport { ReactSVG } from \"react-svg\";\n\nexport const InnerNavContainer = styled.div`\n  display: flex;\n  padding-top: 1.4rem;\n  padding-bottom: 1.4rem;\n  align-items: center;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n\n  ${is(\"dataLoaded\")`\n       opacity: 1;\n  `};\n`;\n\nexport const ProfileImage = styled.img`\n  width: 3.8rem;\n  border-radius: 100px;\n  cursor: pointer;\n`;\n\nexport const LoggedInContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  grid-column-gap: 3rem;\n  position: relative;\n`;\n\nexport const NavbarIconContainer = styled(ReactSVG)`\n  // todo add measure\n  div {\n    height: 20px;\n\n    svg {\n      width: 2rem;\n      cursor: pointer;\n      height: auto;\n      fill: #757575;\n      transition: fill 0.1s linear;\n\n      &:hover {\n        fill: black;\n      }\n    }\n  }\n`;\n\nexport const NavLinkContainer = styled.div`\n  margin-left: auto;\n`;\n\nexport const NavButton = styled.button`\n  ${is(\"right_margin\")`\n     margin-right: 4rem\n  `};\n\n  background-color: Transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const NavLogo = styled.img`\n  height: 5rem;\n`;\n","import styled from \"styled-components\";\nimport is from \"styled-is\";\nimport { mediaQueries, createMediaQuery } from \"../../media/media_helpers\";\n\nconst NavbarContainerBase = styled.div`\n  border-bottom: 1px solid #eeeeee;\n`;\n\nexport const NavbarProfileOptionsContainer = styled.div`\n  background-color: white;\n  position: absolute;\n  top: 5.4rem;\n  right: -28px;\n  z-index: 10;\n  box-shadow: 0 1px 6px rgba(57, 73, 76, 0.35);\n  border-radius: 3px;\n  width: 22rem;\n\n  //todo move away\n  &:after,\n  &:before {\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-bottom: 8px solid white;\n    top: -8px;\n    content: \"\";\n    left: 76%;\n    position: absolute;\n  }\n\n  &:before {\n    border-left: 9px solid transparent;\n    border-right: 9px solid transparent;\n    border-bottom: 9px solid #cecece;\n    transform: translateY(-1px);\n    margin-left: -1px;\n  }\n`;\n\nexport const NavbarProfileOption = styled.div`\n  font-size: 1.4rem;\n  color: rgba(0, 0, 0, 0.68);\n  padding: 1rem 2rem;\n  cursor: pointer;\n  transition: all 0.1s linear;\n  &:hover {\n    background-color: #f5f5f5;\n    color: black;\n  }\n\n  ${createMediaQuery(mediaQueries.tabLandDown)} {\n    color: black;\n    font-size: 2rem;\n  }\n\n  ${createMediaQuery(mediaQueries.phoneDown)} {\n    font-size: 1.6rem;\n    padding: 1.4rem 2rem;\n  }\n`;\n\nexport const NavbarProfileImage = styled.img`\n  width: 5rem;\n  height: 5rem;\n  border-radius: 100px;\n  margin-right: 1rem;\n\n  ${createMediaQuery(mediaQueries.tabLandToTabPort)} {\n    width: 8rem;\n    height: 8rem;\n    margin-right: 2rem;\n  }\n`;\n\nexport const NavbarProfileContainer = styled(NavbarContainerBase)`\n  display: flex;\n  align-items: center;\n  padding: 2.6rem;\n\n  ${createMediaQuery(mediaQueries.tabLandDown)} {\n    padding: 2rem;\n  }\n`;\n\nexport const NavbarProfileName = styled.div`\n  font-family: \"Bold\";\n  font-size: 1.4rem;\n\n  ${createMediaQuery(mediaQueries.tabLandDown)} {\n    font-size: 2.2rem;\n  }\n\n  ${createMediaQuery(mediaQueries.phoneDown)} {\n    font-size: 1.8rem;\n  }\n`;\n\nexport const NavbarOptionsContainer = styled(NavbarContainerBase)`\n  padding: 0.8rem 0;\n`;\n\nexport const NavbarSubOptionsContainer = styled.div`\n  background-color: #fbfbfb;\n  padding: 1rem 2.2rem;\n  display: inline-grid;\n  grid-auto-columns: auto;\n  grid-auto-flow: column;\n  grid-column-gap: 1.2rem;\n`;\n\nexport const SubLinkText = styled.div`\n  color: #767676;\n  font-size: 1.3rem;\n  display: inline-block;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n});\r\n\r\nexport default instance;\r\n","const getAuthHeader = () => {\n  return { headers: retrieveToken() };\n};\n\nconst getAuthHeaderWithData = (data) => {\n  return {\n    headers: retrieveToken(),\n    params: data,\n  };\n};\n\nconst retrieveToken = () => {\n  return { Authorization: localStorage.getItem(\"sessionToken\") };\n};\n\nexport { getAuthHeader, getAuthHeaderWithData };\n","export const IS_SIGN_UP_OPEN = \"IS_SIGN_UP_OPEN\";\nexport const IS_LOGIN_OPEN = \"IS_LOGIN_OPEN\";\nexport const IS_EMAIL_LOGIN_OPEN = \"IS_EMAIL_LOGIN_OPEN\";\nexport const IS_EMAIL_SIGN_UP_OPEN = \"IS_EMAIL_SIGN_UP_OPEN\";\nexport const IS_FORGOT_PASSWORD_OPEN = \"IS_FORGOT_PASSWORD_OPEN\";\nexport const IS_RESET_PASSWORD_OPEN = \"IS_RESET_PASSWORD_OPEN\";\n","import {\n  IS_SIGN_UP_OPEN,\n  IS_LOGIN_OPEN,\n  IS_EMAIL_LOGIN_OPEN,\n  IS_EMAIL_SIGN_UP_OPEN,\n  IS_FORGOT_PASSWORD_OPEN,\n  IS_RESET_PASSWORD_OPEN,\n} from \"../constants/login_action_types\";\n\nconst initialUIState = {\n  isSignUpOpen: false,\n  isLoginOpen: false,\n  isEmailLoginOpen: false,\n  isEmailSignUpOpen: false,\n  isForgotPasswordOpen: false,\n  isResetPasswordOpen: false,\n};\n\nconst loginSignUpState = (state = initialUIState, action) => {\n  if (action.type === IS_SIGN_UP_OPEN) {\n    return { ...state, isSignUpOpen: action.isSignUpOpen };\n  } else if (action.type === IS_LOGIN_OPEN) {\n    return { ...state, isLoginOpen: action.isLoginOpen };\n  } else if (action.type === IS_EMAIL_LOGIN_OPEN) {\n    return { ...state, isEmailLoginOpen: action.isEmailLoginOpen };\n  } else if (action.type === IS_EMAIL_SIGN_UP_OPEN) {\n    return { ...state, isEmailSignUpOpen: action.isEmailSignUpOpen };\n  } else if (action.type === IS_FORGOT_PASSWORD_OPEN) {\n    return { ...state, isForgotPasswordOpen: action.isForgotPasswordOpen };\n  } else if (action.type === IS_RESET_PASSWORD_OPEN) {\n    return { ...state, isResetPasswordOpen: action.isResetPasswordOpen };\n  }\n  return state;\n};\n\nexport default loginSignUpState;\n","export const IS_LOGGED_IN = \"IS_LOGGED_IN\";\r\n","import {\n  IS_LOGGED_IN,\n  APP_DATA_LOADED,\n} from \"../constants/session_action_types\";\n\nconst initialSessionState = {\n  isLoggedIn: undefined,\n  appDataLoaded: undefined,\n};\n\nconst sessionState = (state = initialSessionState, action) => {\n  if (action.type === IS_LOGGED_IN) {\n    return Object.assign({}, state, {\n      isLoggedIn: action.isLoggedIn,\n    });\n  }\n\n  return state;\n};\n\nexport default sessionState;\n","export const CREATE_POST_ACTIVE_NAV = \"CREATE_POST_ACTIVE_NAV\";\nexport const CURRENT_PAGE_IS_VALID = \"CURRENT_PAGE_IS_VALID\";\nexport const LOADING = \"LOADING\";\nexport const FORM_TYPE = \"FORM_TYPE\";\nexport const EDIT_POST_ID = \"EDIT_POST_ID\";\n","import {\n  CREATE_POST_ACTIVE_NAV,\n  CURRENT_PAGE_IS_VALID,\n  LOADING,\n  FORM_TYPE,\n  EDIT_POST_ID,\n} from \"../constants/create_post_action_types\";\n\nconst initialCreatePostState = {\n  activeNavIndex: 0,\n  loading: false,\n};\n\nconst createPostState = (state = initialCreatePostState, action) => {\n  if (action.type === CREATE_POST_ACTIVE_NAV) {\n    return Object.assign({}, state, {\n      activeNavIndex: action.activeNavIndex,\n    });\n  } else if (action.type === CURRENT_PAGE_IS_VALID) {\n    return Object.assign({}, state, {\n      currentPageIsValid: action.currentPageIsValid,\n    });\n  } else if (action.type === LOADING) {\n    return Object.assign({}, state, {\n      loading: action.loading,\n    });\n  } else if (action.type === FORM_TYPE) {\n    return Object.assign({}, state, {\n      formType: action.formType,\n    });\n  } else if (action.type === EDIT_POST_ID) {\n    return Object.assign({}, state, {\n      editPostId: action.editPostId,\n    });\n  }\n  return state;\n};\n\nexport default createPostState;\n","export const IS_NAV_PROFILE_OPTIONS_OPEN = \"IS_NAV_PROFILE_OPTIONS_OPEN\";\nexport const NAVBAR_HEIGHT = \"NAVBAR_HEIGHT\";\n","import {\n  IS_NAV_PROFILE_OPTIONS_OPEN,\n  NAVBAR_HEIGHT,\n} from \"../constants/navbar_action_types\";\n\nconst initialUIState = {\n  isNavProfileOptionsOpen: false,\n};\n\nconst navbarState = (state = initialUIState, action) => {\n  if (action.type === IS_NAV_PROFILE_OPTIONS_OPEN) {\n    return Object.assign({}, state, {\n      isNavProfileOptionsOpen: action.isNavProfileOptionsOpen,\n    });\n  } else if (action.type === NAVBAR_HEIGHT) {\n    return Object.assign({}, state, {\n      navbarHeight: action.navbarHeight,\n    });\n  }\n  return state;\n};\n\nexport default navbarState;\n","export const ACTIVE_NAV_INDEX = \"ACTIVE_NAV_INDEX\";\nexport const SETTINGS_EDIT_ACTIVE = \"SETTINGS_EDIT_ACTIVE\";\nexport const SETTINGS_EDIT_COMPLETE = \"SETTINGS_EDIT_COMPLETE\";\nexport const SETTINGS_LOADING = \"SETTINGS_LOADING\";\nexport const BLOCKED_USERS_ERROR = \"BLOCKED_USERS_ERROR\";\n","import {\n  ACTIVE_NAV_INDEX,\n  SETTINGS_EDIT_ACTIVE,\n  SETTINGS_EDIT_COMPLETE,\n  SETTINGS_LOADING,\n} from \"../constants/settings_action_types\";\n\nconst initialSettingsState = {\n  activeNavIndex: 0,\n  settingsEditActive: true,\n  settingsEditComplete: false,\n};\n\nconst settingsState = (state = initialSettingsState, action) => {\n  if (action.type === ACTIVE_NAV_INDEX) {\n    return Object.assign({}, state, {\n      activeNavIndex: action.activeNavIndex,\n    });\n  } else if (action.type === SETTINGS_EDIT_ACTIVE) {\n    return Object.assign({}, state, {\n      settingsEditActive: action.settingsEditActive,\n    });\n  } else if (action.type === SETTINGS_EDIT_COMPLETE) {\n    return Object.assign({}, state, {\n      settingsEditComplete: action.settingsEditComplete,\n    });\n  } else if (action.type === SETTINGS_LOADING) {\n    return Object.assign({}, state, {\n      settingsLoading: action.settingsLoading,\n    });\n  }\n  return state;\n};\n\nexport default settingsState;\n","export const USER_DATA = \"USER_DATA\";\nexport const PROFILE_IMAGE_CHANGED = \"PROFILE_IMAGE_CHANGED\";\n","import {\n  USER_DATA,\n  PROFILE_IMAGE_CHANGED,\n} from \"../constants/user_action_types\";\n\nconst initialState = {\n  profileImageChanged: 0,\n};\n\nconst userState = (state = initialState, action) => {\n  if (action.type === USER_DATA) {\n    // console.log(action.userData);\n    return { ...state, ...action.userData };\n  } else if (action.type === PROFILE_IMAGE_CHANGED) {\n    return { ...state, profileImageChanged: action.profileImageChanged };\n  }\n\n  return state;\n};\n\nexport default userState;\n","export const CURRENT_CONVERSATION = \"CURRENT_CONVERSATION\";\nexport const NEW_MESSAGES = \"NEW_MESSAGES\";\nexport const NEW_CURRENT_CONVERSATION_MESSAGES =\n  \"NEW_CURRENT_CONVERSATION_MESSAGES\";\nexport const LAST_MESSAGE_STATUS = \"LAST_MESSAGE_STATUS\";\nexport const MESSAGE_IMAGES_LOADED = \"MESSAGE_IMAGES_LOADED\";\nexport const DELETE_MESSAGES = \"DELETE_MESSAGES\";\nexport const UPDATE_CONVERSATION_ON_MESSAGE_DELETE =\n  \"UPDATE_CONVERSATION_ON_MESSAGE_DELETE\";\nexport const RECIPIENT_ONLINE_CHANGE = \"RECIPIENT_ONLINE_CHANGE\";\nexport const MOBILE_ACTIVE_CONVERSATION = \"MOBILE_ACTIVE_CONVERSATION\";\n","import {\n  CURRENT_CONVERSATION,\n  NEW_MESSAGES,\n  NEW_CURRENT_CONVERSATION_MESSAGES,\n  LAST_MESSAGE_STATUS,\n  MESSAGE_IMAGES_LOADED,\n  DELETE_MESSAGES,\n  UPDATE_CONVERSATION_ON_MESSAGE_DELETE,\n  RECIPIENT_ONLINE_CHANGE,\n  MOBILE_ACTIVE_CONVERSATION,\n} from \"../constants/message_action_types\";\n\nconst initialState = {\n  newMessages: [],\n  recipientOnlineChanges: [],\n  messageImagesLoaded: 0,\n  newCurrentConversationMessages: [],\n  updateConversationOnMessageDelete: [],\n  lastMessageStatus: null,\n  mobileActiveConversation: false,\n  deleteMessages: [],\n  currentConversation: {},\n};\n\nconst messageState = (state = initialState, action) => {\n  if (action.type === CURRENT_CONVERSATION) {\n    return { ...state, currentConversation: action.currentConversation };\n  } else if (action.type === NEW_MESSAGES) {\n    return { ...state, newMessages: action.newMessages };\n  } else if (action.type === NEW_CURRENT_CONVERSATION_MESSAGES) {\n    return {\n      ...state,\n      newCurrentConversationMessages: action.newCurrentConversationMessages,\n    };\n  } else if (action.type === LAST_MESSAGE_STATUS) {\n    return { ...state, lastMessageStatus: action.lastMessageStatus };\n  } else if (action.type === MESSAGE_IMAGES_LOADED) {\n    return { ...state, messageImagesLoaded: action.messageImagesLoaded };\n  } else if (action.type === DELETE_MESSAGES) {\n    return { ...state, deleteMessages: action.deleteMessages };\n  } else if (action.type === UPDATE_CONVERSATION_ON_MESSAGE_DELETE) {\n    return {\n      ...state,\n      updateConversationOnMessageDelete:\n        action.updateConversationOnMessageDelete,\n    };\n  } else if (action.type === RECIPIENT_ONLINE_CHANGE) {\n    return { ...state, recipientOnlineChanges: action.recipientOnlineChanges };\n  } else if (action.type === MOBILE_ACTIVE_CONVERSATION) {\n    return {\n      ...state,\n      mobileActiveConversation: action.mobileActiveConversation,\n    };\n  }\n\n  return state;\n};\n\nexport default messageState;\n","export const CLEAR_FILTERS = \"CLEAR_FILTERS\";\n","import { CLEAR_FILTERS } from \"../constants/home_action_types\";\n\nconst initialHomeState = {\n  clearFilters: 0,\n};\n\nconst clearFilters = (state = initialHomeState, action) => {\n  if (action.type === CLEAR_FILTERS) {\n    return { ...state, clearFilters: action.clearFilters };\n  }\n\n  return state;\n};\n\nexport default clearFilters;\n","import { ASSET_INIT } from \"../constants/asset_action_types\";\n\nconst assetState = (state = {}, action) => {\n  if (action.type === ASSET_INIT) {\n    return Object.assign({}, state, action.assetInit);\n  }\n  return state;\n};\n\nexport default assetState;\n","export const ASSET_INIT = \"ASSET_INIT\";\n","export const BLUR_BACKGROUND = \"BLUR_BACKGROUND\";\n","import { BLUR_BACKGROUND } from \"../constants/app_action_types\";\n\nconst initialAppState = {\n  // blurBackground: true\n};\n\nconst appState = (state = initialAppState, action) => {\n  if (action.type === BLUR_BACKGROUND) {\n    return Object.assign({}, state, {\n      blurBackground: action.blurBackground,\n    });\n  }\n  return state;\n};\n\nexport default appState;\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport loginSignUpState from \"./login_reducers\";\nimport sessionState from \"./session_reducer\";\nimport createPostState from \"./create_post_reducers\";\nimport navbarState from \"./navbar_reducers\";\nimport settingsState from \"./settings_reducers\";\nimport userState from \"./user_reducers\";\nimport messageState from \"./message_reducers\";\nimport homeState from \"./home_reducers\";\nimport postState from \"./post_reducers\";\nimport modalState from \"./modal_reducers\";\nimport inputState from \"./input_reducers\";\nimport assetState from \"./asset_reducers\";\nimport appState from \"./app_reducer\";\n\nconst app = combineReducers({\n  sessionState,\n  appState,\n  inputState,\n  loginSignUpState,\n  createPostState,\n  navbarState,\n  settingsState,\n  userState,\n  messageState,\n  homeState,\n  assetState,\n  postState,\n  modalState,\n  form: formReducer,\n});\n\nexport default app;\n","import { createStore, compose } from \"redux\";\nimport reduxReset from \"redux-reset\";\nimport app from \"../reducers/combined_reducers\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\nconst enhanceCreateStore = compose(reduxReset())(createStore);\n\nconst store = enhanceCreateStore(app, devToolsEnhancer());\n\nexport default store;\n","import {\n  IS_NAV_PROFILE_OPTIONS_OPEN,\n  NAVBAR_HEIGHT,\n} from \"../constants/navbar_action_types\";\n\nexport const isNavProfileOptionsOpen = (isNavProfileOptionsOpen) => ({\n  type: IS_NAV_PROFILE_OPTIONS_OPEN,\n  isNavProfileOptionsOpen,\n});\n\nexport const navbarHeight = (navbarHeight) => ({\n  type: NAVBAR_HEIGHT,\n  navbarHeight,\n});\n","import { ASSET_INIT } from \"../constants/asset_action_types\";\n\nexport const assetInit = (assetInit) => ({\n  type: ASSET_INIT,\n  assetInit,\n});\n","import store from \"../redux/store/store\";\nimport { navbarHeight } from \"../redux/actions/navbar_actions\";\nimport { assetInit } from \"../redux/actions/asset_actions\";\n\nexport const resetReduxStore = () => {\n  const navbarHeightValue = store.getState().navbarState.navbarHeight;\n  const assetState = store.getState().assetState;\n\n  store.dispatch({\n    type: \"RESET\",\n  });\n  store.dispatch(navbarHeight(navbarHeightValue));\n  store.dispatch(assetInit(assetState));\n};\n","import axios from \"../axios\";\nimport { getAuthHeader } from \"./auth_header_services\";\nimport { resetReduxStore } from \"./reset_redux_store\";\n\nexport const logoutUser = async (history) => {\n  await axios.post(\"/users/logout\", { data: {} }, getAuthHeader());\n  history.push(\"/\");\n  localStorage.removeItem(\"sessionToken\");\n  resetReduxStore();\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  NavbarOptionsContainer,\n  NavbarProfileOption,\n} from \"./navbar_styles/navbar_options\";\nimport { logoutUser } from \"../../services/logout\";\n\nconst NavOptionsItems = () => {\n  const history = useHistory();\n\n  return (\n    <NavbarOptionsContainer>\n      <Link to=\"/posts\">\n        <NavbarProfileOption> My Posts </NavbarProfileOption>\n      </Link>\n      <Link to=\"/settings\">\n        <NavbarProfileOption> Settings </NavbarProfileOption>\n      </Link>\n      <NavbarProfileOption onClick={() => logoutUser(history)}>\n        {\" \"}\n        Sign Out{\" \"}\n      </NavbarProfileOption>\n    </NavbarOptionsContainer>\n  );\n};\n\nexport default NavOptionsItems;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport usePrevious from \"use-previous\";\n\nimport onClickOutside from \"react-onclickoutside\";\nimport {\n  NavbarProfileOptionsContainer,\n  NavbarProfileImage,\n  NavbarProfileContainer,\n  NavbarProfileName,\n  NavbarSubOptionsContainer,\n  SubLinkText,\n} from \"./navbar_styles/navbar_options\";\n\nimport { OverflowContainer } from \"../containers/container\";\nimport NavOptionsItems from \"./NavOptionsItems\";\n\nconst NavbarProfileOptions = ({ closeNavProfileOptions }) => {\n  const location = useLocation();\n\n  const userState = useSelector(({ userState }) => userState);\n  const previousLocation = usePrevious(location.pathname);\n\n  useEffect(() => {\n    if (previousLocation && previousLocation !== location.pathname) {\n      closeNavProfileOptions();\n    }\n  }, [location]);\n\n  NavbarProfileOptions.handleClickOutside = closeNavProfileOptions;\n\n  return (\n    <NavbarProfileOptionsContainer>\n      <OverflowContainer>\n        <NavbarProfileContainer>\n          <NavbarProfileImage src={userState.profileImage} />\n          <Link to=\"/settings\">\n            <NavbarProfileName>{userState.name}</NavbarProfileName>\n          </Link>\n        </NavbarProfileContainer>\n        <NavOptionsItems />\n        <NavbarSubOptionsContainer>\n          <Link to=\"/terms-of-service\">\n            <SubLinkText> Terms </SubLinkText>\n          </Link>\n          <Link to=\"/privacy-policy\">\n            <SubLinkText> Privacy </SubLinkText>\n          </Link>\n          <Link to=\"/about\">\n            <SubLinkText> About </SubLinkText>\n          </Link>\n        </NavbarSubOptionsContainer>\n      </OverflowContainer>\n    </NavbarProfileOptionsContainer>\n  );\n};\n\nNavbarProfileOptions.prototype = {};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => NavbarProfileOptions.handleClickOutside,\n};\n\nexport default onClickOutside(NavbarProfileOptions, clickOutsideConfig);\n","import styled from \"styled-components\";\n\nconst NavbarNotificationContainerWidthHeight = \"1.2rem\";\n\nexport const NavbarNotification = styled.div`\n  width: ${NavbarNotificationContainerWidthHeight};\n  height: ${NavbarNotificationContainerWidthHeight};\n  position: absolute;\n  right: -1.1rem;\n  top: -0.3rem;\n  border-radius: 100px;\n  background-color: #eb3039;\n  border: 2px solid var(--background-color);\n`;\n\nexport const NavbarNotificationText = styled.div`\n  color: white;\n  padding: 0.3rem;\n  font-size: 1.1rem;\n  font-family: \"Medium\";\n`;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ProfileImage, LoggedInContainer } from \"./navbar_styles/navbar_styles\";\nimport NavbarProfileOptions from \"./NavbarProfileOptions\";\nimport { useSelector } from \"react-redux\";\nimport { RelativePositionContainer } from \"../containers/container\";\nimport { NavbarNotification } from \"../notifications/navbar_notification_styles\";\n\nconst LoggedInOptions = () => {\n  const userState = useSelector(({ userState }) => userState);\n  const [isNavProfileOptionsOpen, setIsNavProfileOptionsOpen] = useState(false);\n  const { profileImage, hasUnreadMessages } = userState;\n\n  const closeNavProfileOptions = () => {\n    setIsNavProfileOptionsOpen(false);\n  };\n\n  const getProfilePicture = (profileImageChanged, profileImage) => {\n    return profileImageChanged\n      ? `${profileImage}?${profileImageChanged}`\n      : profileImage;\n  };\n\n  return (\n    <LoggedInContainer>\n      <Link to=\"/post\">Post</Link>\n\n      <RelativePositionContainer>\n        <Link to=\"/messages\">Messages</Link>\n\n        {hasUnreadMessages && <NavbarNotification />}\n      </RelativePositionContainer>\n\n      <ProfileImage\n        onClick={() => setIsNavProfileOptionsOpen(!isNavProfileOptionsOpen)}\n        className=\"ignore-react-onclickoutside\"\n        src={getProfilePicture(null, profileImage)}\n      />\n\n      {isNavProfileOptionsOpen && (\n        <NavbarProfileOptions closeNavProfileOptions={closeNavProfileOptions} />\n      )}\n    </LoggedInContainer>\n  );\n};\n\nexport default LoggedInOptions;\n","import styled, {css} from \"styled-components\";\nimport is from 'styled-is';\n\nexport const buttonBase = css`\n  cursor: pointer;\n  font-size: 1.5rem;\n  border-radius: 5px;\n  text-align: center;\n  padding: 1.2rem 2.4rem;\n  transition: all .1s linear;\n  \n   &:focus {\n    outline: none;\n  }\n  \n   ${is('small')`\n     padding: 1rem 1.7rem;\n  `}\n  \n  ${is('stretch')`\n    width: 100%;\n  `}\n  \n  ${is('no-stretch')`\n    justify-self: center;\n    align-self: center;\n  `}\n  \n   ${is('rightMargin')`\n     margin-right: 2rem\n  `};\n`\n\nexport const FilledButtonTag = styled.button`\n  ${buttonBase};\n  color: white;\n  border: 1px solid var(--primary-color);\n  background-color: var(--primary-color);\n \n  &:hover {\n    background-color: var(--primary-color-highlighted);\n    border: 1px solid var(--primary-color-highlighted);\n  }\n  \n  ${is('warning')`\n   border: 1px solid var(--button-warning-color);\n   background-color: var(--button-warning-color);\n   \n   &:hover {\n        background-color: var(--button-warning-highlighted);\n        border: 1px solid var(--button-warning-highlighted);\n      }\n  `}\n  \n  ${is('disabledColor')`\n      background-color: var(--disabled-color);\n      border: 1px solid var(--disabled-color);\n\n      &:hover {\n        background-color: var(--disabled-color-highlighted);\n        border: 1px solid var(--disabled-color-highlighted);\n      }\n  `}\n`\n\nexport const ButtonText = styled.div`\n  display: inline-block;\n  color: white;\n  \n  ${is('small')`\n    font-size: 1.5rem;\n  `}\n`\n\nexport const OuterButtonContainer = styled.div`\n  display: inline-block;\n  \n   ${is('stretch')`\n        display: block;\n   `}\n`\n\nexport const ButtonContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  \n  ${is('mtAuto')`\n    margin-top: auto;\n  `}\n  \n   ${is('mlAuto')`\n    margin-left: auto;\n  `}\n   \n    ${is('homeSearch')`\n    padding: 1rem;\n  `}\n`","import styled from \"styled-components\";\nimport React from \"react\";\nimport is from \"styled-is\";\nimport { buttonBase } from \"./button_styles\";\n\nconst HollowButtonTag = styled.button`\n  ${buttonBase};\n  color: var(--disabled-color);\n  background-color: transparent;\n  border: 1px solid var(--hollow-border-color);\n\n  ${is(\"active\")`\n      border: 1px solid var(--primary-color);\n      color: var(--primary-color);\n  `};\n\n  &:hover {\n    background-color: initial;\n    border: 1px solid var(--hollow-border-color);\n\n    ${is(\"active\")`\n      border: 1px solid var(--primary-color-highlighted);\n      color: var(--primary-color-highlighted);\n    `};\n  }\n`;\n\nconst HollowButton = (props) => {\n  return (\n    <HollowButtonTag\n      active={props.active}\n      type=\"button\"\n      rightMargin={props.rightMargin}\n      onClick={props.onClick}\n    >\n      {props.buttonText}\n    </HollowButtonTag>\n  );\n};\n\nexport default HollowButton;\n","import {\n  IS_SIGN_UP_OPEN,\n  IS_LOGIN_OPEN,\n  IS_EMAIL_LOGIN_OPEN,\n  IS_EMAIL_SIGN_UP_OPEN,\n  IS_FORGOT_PASSWORD_OPEN,\n  IS_RESET_PASSWORD_OPEN,\n} from \"../constants/login_action_types\";\n\nexport const isEmailLoginOpen = (isEmailLoginOpen) => ({\n  type: IS_EMAIL_LOGIN_OPEN,\n  isEmailLoginOpen,\n});\n\nexport const isEmailSignUpOpen = (isEmailSignUpOpen) => ({\n  type: IS_EMAIL_SIGN_UP_OPEN,\n  isEmailSignUpOpen,\n});\n\nexport const isForgotPasswordOpen = (isForgotPasswordOpen) => ({\n  type: IS_FORGOT_PASSWORD_OPEN,\n  isForgotPasswordOpen,\n});\n\nexport const isSignUpOpen = (isSignUpOpen) => ({\n  type: IS_SIGN_UP_OPEN,\n  isSignUpOpen,\n});\n\nexport const isLoginOpen = (isLoginOpen) => ({\n  type: IS_LOGIN_OPEN,\n  isLoginOpen,\n});\n\nexport const isResetPasswordOpen = (isResetPasswordOpen) => ({\n  type: IS_RESET_PASSWORD_OPEN,\n  isResetPasswordOpen,\n});\n","import { NavButton } from \"./navbar_styles/navbar_styles\";\nimport HollowButton from \"../buttons/HollowButton\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { isLoginOpen, isSignUpOpen } from \"../../redux/actions/login_actions\";\nimport { isNavProfileOptionsOpen } from \"../../redux/actions/navbar_actions\";\n\nconst NotLoggedInOptions = () => {\n  const dispatch = useDispatch();\n\n  const loginClick = () => {\n    dispatch(isNavProfileOptionsOpen(false));\n    dispatch(isLoginOpen(true));\n  };\n\n  const signUpClick = () => {\n    dispatch(isNavProfileOptionsOpen(false));\n    dispatch(isSignUpOpen(true));\n  };\n\n  return (\n    <div>\n      <NavButton onClick={loginClick} right_margin={true}>\n        {\" \"}\n        Login{\" \"}\n      </NavButton>\n      <HollowButton\n        onClick={signUpClick}\n        active={true}\n        buttonText={\"Sign up\"}\n      />\n    </div>\n  );\n};\n\nexport default NotLoggedInOptions;\n","import styled from \"styled-components\";\nimport { createMediaQuery, mediaQueries } from \"../../media/media_helpers\";\n\nexport const MobileNavContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: calc(100vh - var(--vh-offset, 0px));\n  overflow-y: auto;\n  z-index: 10;\n  background-color: var(--background-color);\n`;\n\nexport const MobileNavContentContainer = styled.div`\n  background-color: white;\n  position: relative;\n  top: calc(${(props) => props.navbarHeight}px + 2rem);\n  margin-right: 2rem;\n  margin-left: 2rem;\n  margin-bottom: 2rem;\n\n  ${createMediaQuery(mediaQueries.tabLandDown)} {\n    height: calc(94vh - var(--vh-offset, 0px));\n  }\n\n  ${createMediaQuery(mediaQueries.phoneDown)} {\n    height: calc(86vh - var(--vh-offset, 0px));\n  }\n`;\n","import {useEffect} from \"react\";\n\nexport const closeModalFromClick = (e, closeModal) => {\n    if (closeModal) {\n        if (e.target === e.currentTarget) {\n            e.preventDefault()\n            closeModal()\n        }\n    }\n}\n\nexport const useDisableScroll = () => {\n    useEffect(() => {\n        document.getElementById('html').style.overflow = 'hidden'\n        return () => document.getElementById('html').style.overflow = 'scroll'\n    })\n}","import React from \"react\";\nimport {\n  MobileNavContainer,\n  MobileNavContentContainer,\n} from \"./navbar_styles/mobile_nav_styles\";\nimport { Portal } from \"react-portal\";\nimport { useDisableScroll } from \"../modals/helpers/modal_helpers\";\nimport { useSelector } from \"react-redux\";\nimport {\n  NavbarProfileContainer,\n  NavbarProfileImage,\n  NavbarProfileName,\n  NavbarProfileOption,\n  NavbarOptionsContainer,\n} from \"./navbar_styles/navbar_options\";\nimport { Link } from \"react-router-dom\";\nimport NavOptionsItems from \"./NavOptionsItems\";\n\nconst MobileNav = () => {\n  const navbarHeight = useSelector(\n    ({ navbarState: { navbarHeight } }) => navbarHeight\n  );\n  const userState = useSelector(({ userState }) => userState);\n\n  useDisableScroll();\n\n  return (\n    <Portal>\n      <MobileNavContainer>\n        <MobileNavContentContainer navbarHeight={navbarHeight}>\n          <NavbarProfileContainer>\n            <NavbarProfileImage src={userState.profileImage} />\n            <Link to=\"/settings\">\n              <NavbarProfileName>{userState.name}</NavbarProfileName>\n            </Link>\n          </NavbarProfileContainer>\n          <NavbarOptionsContainer>\n            <Link to=\"/post\">\n              <NavbarProfileOption> Post </NavbarProfileOption>\n            </Link>\n            <Link to=\"/messages\">\n              <NavbarProfileOption> Messages </NavbarProfileOption>\n            </Link>\n          </NavbarOptionsContainer>\n          <NavbarOptionsContainer>\n            <Link to=\"/terms-of-service\">\n              <NavbarProfileOption> Terms </NavbarProfileOption>\n            </Link>\n            <Link to=\"/privacy-policy\">\n              <NavbarProfileOption> Privacy </NavbarProfileOption>\n            </Link>\n            <Link to=\"/about\">\n              <NavbarProfileOption> About </NavbarProfileOption>\n            </Link>\n          </NavbarOptionsContainer>\n          <NavOptionsItems />\n        </MobileNavContentContainer>\n      </MobileNavContainer>\n    </Portal>\n  );\n};\n\nexport default MobileNav;\n","import styled, {keyframes} from \"styled-components\"\nimport is from 'styled-is'\n\nexport const loadingAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\n\nexport const LoadingBackground = styled.div`\n  display: block;\n  background-color: rgba(255,255,255,0.85);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  \n  ${is('fixed')`\n      position: fixed;\n  `};\n  \n  ${is('clearBackground')`\n      background-color: rgba(255,255,255,0);\n  `};\n  \n  ${is('solidBackground')`\n      background-color: rgba(255,255,255,1);\n  `};\n`\n\nexport const LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;  \n  flex-direction: column;\n  height: 100%;  \n`\n\nexport const LoadingText = styled.div`\n  margin-top: 3rem;\n`\n\nexport const LoadingIcon = styled.div`\n  &:before {\n  content: '';\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  }\n  \n  &:not(:required):after {\n  content: '';\n  display: block;\n  font-size: 10px;\n  width: 1rem;\n  height: 1rem;\n  margin-top: -0.5rem;\n  animation: ${loadingAnimation} 1500ms infinite linear;\n  border-radius: 0.5rem;\n  box-shadow: rgba(0, 0, 0, 0.75) 1.5rem 0 0 0, rgba(0, 0, 0, 0.75) 1.1rem 1.1rem 0 0, rgba(0, 0, 0, 0.75) 0 1.5rem 0 0, rgba(0, 0, 0, 0.75) -1.1rem 1.1rem 0 0, rgba(0, 0, 0, 0.75) -1.5rem 0 0 0, rgba(0, 0, 0, 0.75) -1.1rem -1.1rem 0 0, rgba(0, 0, 0, 0.75) 0 -1.5rem 0 0, rgba(0, 0, 0, 0.75) 1.1rem -1.1rem 0 0;\n  \n  \n  ${is('fillPage')`\n    margin-bottom: ${props => props.navbarHeight}px;\n  `};\n  \n   ${is('marginBottom')`\n      margin-bottom: ${props => props.marginBottom}px;\n   `};\n  }\n}`","import React from \"react\";\nimport styled from \"styled-components\";\nimport { loadingAnimation } from \"./loading_styles\";\nimport is, { isOr } from \"styled-is\";\nimport doTimes from \"do-times\";\n\nconst blackLoadingIconWidthHeight = \"18px\";\nconst whiteLoadingIconWidthHeight = \"15px\";\n\nconst LoadingSpinner = styled.div`\n  position: absolute;\n\n  ${is(\"insideButtonLoading\")`\n        top: calc(50% - ${whiteLoadingIconWidthHeight} / 2);\n        left: calc(50% - ${whiteLoadingIconWidthHeight} - ${(props) =>\n    props.buttonTextWidth}px / 2);\n        transform: translateX(-1rem);\n    `}\n\n  ${is(\"leftSideLoading\")`\n        left: 0;\n        top: calc(50% - ${blackLoadingIconWidthHeight} / 2);\n        transform: translateX(1.3rem);\n    `}\n    \n    ${is(\"rightSideLoading\")`\n        right: 0;\n        top: calc(50% - ${blackLoadingIconWidthHeight} / 2);\n        transform: translateX(1.3rem);\n    `}\n`;\n\nconst LoadingWheel = styled.div`\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: ${whiteLoadingIconWidthHeight};\n  height: ${whiteLoadingIconWidthHeight};\n  border: 2px solid #fff;\n  border-radius: 50%;\n  animation: ${loadingAnimation} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #fff transparent transparent transparent;\n\n  ${is(\"blackLoadingIcon\")`\n        border: 2px solid rgba(0,0,0,1);\n        width: ${blackLoadingIconWidthHeight};\n        height: ${blackLoadingIconWidthHeight};\n        border-color: rgba(0,0,0,1) transparent transparent transparent;\n    `}\n\n  &:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n\n  &:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n`;\n\nconst LoadingButtonSpinner = (props) => {\n  const wheels = [];\n\n  {\n    doTimes(4, (index) =>\n      wheels.push(\n        <LoadingWheel\n          key={index}\n          blackLoadingIcon={props.rightSideLoading || props.leftSideLoading}\n        />\n      )\n    );\n  }\n\n  return (\n    <LoadingSpinner\n      buttonTextWidth={props.buttonTextWidth}\n      rightSideLoading={props.rightSideLoading}\n      insideButtonLoading={props.insideButtonLoading}\n      leftSideLoading={props.leftSideLoading}\n    >\n      {wheels.map((item) => item)}\n    </LoadingSpinner>\n  );\n};\n\nexport default LoadingButtonSpinner;\n","import React, { useCallback, useState } from \"react\";\nimport LoadingButtonSpinner from \"../loading/LoadingButtonSpinner\";\nimport {\n  ButtonText,\n  OuterButtonContainer,\n  ButtonContainer,\n  FilledButtonTag,\n} from \"./button_styles\";\n\nconst FilledButton = (props) => {\n  const [buttonTextWidth, setButtonTextWidth] = useState(0);\n\n  const buttonTextWidthRef = useCallback((node) => {\n    if (node !== null) {\n      setButtonTextWidth(node.offsetWidth);\n    }\n  }, []);\n\n  // const handleClick = () => {\n  //   // console.log(\"I m here\");\n  // };\n\n  return (\n    <OuterButtonContainer stretch={props.stretch}>\n      <ButtonContainer\n        mlAuto={props.mlAuto}\n        mtAuto={props.mtAuto}\n        homeSearch={props.homeSearch}\n      >\n        {props.loading && (\n          <LoadingButtonSpinner\n            rightSideLoading={props.rightSideLoading}\n            leftSideLoading={props.leftSideLoading}\n            buttonTextWidth={buttonTextWidth}\n            insideButtonLoading={props.insideButtonLoading}\n          />\n        )}\n        <FilledButtonTag\n          no-stretch={props.noStretch}\n          disabled={props.disabled}\n          stretch={props.stretch}\n          disabledColor={props.disabledColor}\n          rightMargin={props.rightMargin}\n          onClick={props.onClick}\n          warning={props.warning}\n          small={props.small}\n          type={props.type || \"button\"}\n        >\n          <ButtonText ref={buttonTextWidthRef} small>\n            {props.buttonText}\n          </ButtonText>\n        </FilledButtonTag>\n      </ButtonContainer>\n    </OuterButtonContainer>\n  );\n};\n\nexport default FilledButton;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Measure from \"react-measure\";\nimport Media from \"react-media\";\nimport MobileMenu from \"react-hamburger-menu\";\n\nimport { tabLandDown } from \"../media/media_helpers\";\nimport { StandardContainer } from \"../containers/container\";\nimport LoggedInOptions from \"./LoggedInOptions\";\nimport NotLoggedInOptions from \"./NotLoggedInOptions\";\nimport { navbarHeight } from \"../../redux/actions/navbar_actions\";\nimport MobileNav from \"./MobileNav\";\nimport {\n  InnerNavContainer,\n  NavLinkContainer,\n  NavLogo,\n} from \"./navbar_styles/navbar_styles\";\nimport FilledButton from \"../buttons/FilledButton\";\nimport { isSignUpOpen } from \"../../redux/actions/login_actions\";\n\nconst Navbar = (props) => {\n  const dispatch = useDispatch();\n\n  const [mobileNavOpen, setMobileNavOpen] = useState(false);\n\n  const isLoggedIn = useSelector(\n    ({ sessionState: { isLoggedIn } }) => isLoggedIn\n  );\n  const logo = useSelector(({ assetState: { SPEKKLY_LOGO } }) => SPEKKLY_LOGO);\n  const location = useLocation();\n\n  useEffect(() => {\n    setMobileNavOpen(false);\n  }, [location]);\n\n  return (\n    <div>\n      <Measure\n        bounds\n        onResize={(contentRect) => {\n          dispatch(navbarHeight(contentRect.bounds.height));\n        }}\n      >\n        {({ measureRef }) => (\n          <StandardContainer ref={measureRef} nav>\n            <InnerNavContainer dataLoaded={props.dataLoaded}>\n              <Link to=\"/\">\n                <NavLogo src={logo} />\n              </Link>\n\n              <NavLinkContainer>\n                <Media query={tabLandDown}>\n                  {(matches) =>\n                    matches ? (\n                      <>\n                        {isLoggedIn && (\n                          <>\n                            <MobileMenu\n                              isOpen={mobileNavOpen}\n                              menuClicked={() => {\n                                setMobileNavOpen(!mobileNavOpen);\n                              }}\n                              width={26}\n                              height={18}\n                              strokeWidth={3}\n                              rotate={0}\n                              color=\"black\"\n                              borderRadius={1}\n                              animationDuration={0.5}\n                            />\n\n                            {mobileNavOpen && <MobileNav />}\n                          </>\n                        )}\n\n                        {!isLoggedIn && (\n                          <FilledButton\n                            buttonText={\"Get Started\"}\n                            onClick={() => dispatch(isSignUpOpen(true))}\n                          />\n                        )}\n                      </>\n                    ) : (\n                      <>\n                        {isLoggedIn && <LoggedInOptions />}\n\n                        {!isLoggedIn && <NotLoggedInOptions />}\n                      </>\n                    )\n                  }\n                </Media>\n              </NavLinkContainer>\n            </InnerNavContainer>\n          </StandardContainer>\n        )}\n      </Measure>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import {\n  CURRENT_CONVERSATION,\n  NEW_MESSAGES,\n  NEW_CURRENT_CONVERSATION_MESSAGES,\n  LAST_MESSAGE_STATUS,\n  MESSAGE_IMAGES_LOADED,\n  DELETE_MESSAGES,\n  UPDATE_CONVERSATION_ON_MESSAGE_DELETE,\n  RECIPIENT_ONLINE_CHANGE,\n  MOBILE_ACTIVE_CONVERSATION,\n} from \"../constants/message_action_types\";\n\nexport const newCurrentConversationMessagesDispatch = (\n  newCurrentConversationMessages\n) => ({\n  type: NEW_CURRENT_CONVERSATION_MESSAGES,\n  newCurrentConversationMessages,\n});\n\nexport const messageImagesLoadedDispatch = (messageImagesLoaded) => ({\n  type: MESSAGE_IMAGES_LOADED,\n  messageImagesLoaded,\n});\n\nexport const mobileActiveConversationDispatch = (mobileActiveConversation) => ({\n  type: MOBILE_ACTIVE_CONVERSATION,\n  mobileActiveConversation,\n});\n\nexport const currentConversationDispatch = (currentConversation) => ({\n  type: CURRENT_CONVERSATION,\n  currentConversation,\n});\n\nexport const recipientOnlineChangesDispatch = (recipientOnlineChanges) => ({\n  type: RECIPIENT_ONLINE_CHANGE,\n  recipientOnlineChanges,\n});\n\nexport const newMessagesDispatch = (newMessages) => ({\n  type: NEW_MESSAGES,\n  newMessages,\n});\n\nexport const deleteMessagesDispatch = (deleteMessages) => ({\n  type: DELETE_MESSAGES,\n  deleteMessages,\n});\n\nexport const lastMessageStatusDispatch = (lastMessageStatus) => ({\n  type: LAST_MESSAGE_STATUS,\n  lastMessageStatus,\n});\n\nexport const updateConversationOnMessageDeleteDispatch = (\n  updateConversationOnMessageDelete\n) => ({\n  type: UPDATE_CONVERSATION_ON_MESSAGE_DELETE,\n  updateConversationOnMessageDelete,\n});\n","import {\n  USER_DATA,\n  PROFILE_IMAGE_CHANGED,\n} from \"../constants/user_action_types\";\n\nexport const userDataDispatch = (userData) => ({\n  type: USER_DATA,\n  userData,\n});\n\nexport const profileImageChanged = (profileImageChanged) => ({\n  type: PROFILE_IMAGE_CHANGED,\n  profileImageChanged,\n});\n","import axios from \"../axios\";\nimport io from \"socket.io-client\";\nimport { getAuthHeader } from \"./auth_header_services\";\nimport store from \"../redux/store/store\";\nimport {\n  newMessagesDispatch,\n  recipientOnlineChangesDispatch,\n} from \"../redux/actions/message_actions\";\nimport { userDataDispatch } from \"../redux/actions/user_actions\";\n\nconst initSocket = async () => {\n  const socket = io.connect(process.env.REACT_APP_BACKEND_URL);\n\n  socket.on(\"connect\", async () => {\n    axios.post(\"/users/socket\", { socketId: socket.id }, getAuthHeader());\n  });\n\n  socket.on(\"recipientOnlineChanges\", (data) => {\n    store.dispatch(\n      recipientOnlineChangesDispatch([\n        ...store.getState().messageState.recipientOnlineChanges,\n        data,\n      ])\n    );\n  });\n\n  socket.on(\"disconnect\", async () => {\n    axios.delete(\"/users/socket\", getAuthHeader());\n  });\n\n  socket.on(\"newMessage\", (message) => {\n    store.dispatch(\n      newMessagesDispatch([\n        ...store.getState().messageState.newMessages,\n        message,\n      ])\n    );\n\n    if (message.authoredUserId !== store.getState().userState.userId) {\n      store.dispatch(\n        userDataDispatch({\n          ...store.getState().userState,\n          hasUnreadMessages: true,\n        })\n      );\n    }\n  });\n\n  return socket;\n};\n\nexport default initSocket;\n","import axios from \"../axios\";\nimport { getAuthHeader } from \"./auth_header_services\";\n\nconst returnDataHelper = (success, data) => {\n  if (!success) {\n    throw new Error();\n  } else {\n    return data;\n  }\n};\n\nexport const getAssets = async () => {\n  const {\n    data: { assets, success },\n  } = await axios.get(\"/users/assets\", getAuthHeader());\n  return returnDataHelper(success, assets);\n};\n\nexport const getUserInfo = async () => {\n  const {\n    data: { userInfo, success },\n  } = await axios.get(\"/users/user_info\", getAuthHeader());\n  return returnDataHelper(success, userInfo);\n};\n\nexport const setNextPage = (hasNextPage, loading, setPage, page) => {\n  if (hasNextPage && !loading) {\n    setPage(page + 1);\n  }\n};\n","import { IS_LOGGED_IN } from \"../constants/session_action_types\";\n\nexport const isLoggedIn = (isLoggedIn) => ({\n  type: IS_LOGGED_IN,\n  isLoggedIn,\n});\n","import axios from \"../../axios\";\nimport { getAuthHeader } from \"../../services/auth_header_services\";\nimport initSocket from \"../../services/socket_services\";\nimport { getAssets, getUserInfo } from \"../../services/load_data_services\";\nimport { assetInit } from \"../../redux/actions/asset_actions\";\nimport { isLoggedIn } from \"../../redux/actions/sessions_actions\";\nimport { userDataDispatch } from \"../../redux/actions/user_actions\";\nimport vhCheck from \"vh-check\";\n\nconst verifySessionToken = async () => {\n  const token = localStorage.getItem(\"sessionToken\");\n  if (!token) {\n    throw new Error();\n  } else {\n    const {\n      data: { validUser },\n    } = await axios.get(\"/users/verify_session_token\", getAuthHeader());\n    return validUser;\n  }\n};\n\nexport const initApp = async (setDataLoaded, dispatch) => {\n  try {\n    vhCheck();\n    const assets = await getAssets();\n    dispatch(assetInit(assets));\n    const validUser = await verifySessionToken();\n    dispatch(isLoggedIn(validUser));\n    if (validUser) {\n      await initSocket();\n      dispatch(userDataDispatch(await getUserInfo()));\n    }\n    return true;\n  } catch (e) {\n    return false;\n  } finally {\n    // todo app loading errors\n    setDataLoaded(true);\n  }\n};\n","import styled, { css } from \"styled-components\";\nimport is from \"styled-is\";\nimport { createMediaQuery, mediaQueries } from \"../../media/media_helpers\";\n\nexport const SubmitContainer = styled.div`\n  margin-top: 0.8rem;\n`;\n\nexport const LoginSignUpHeading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 3.4rem;\n`;\n\nexport const LoginSignUpText = styled.div`\n  margin-bottom: 3rem;\n  font-size: 1.6rem;\n`;\n\nexport const BtnOuterContainer = styled.div`\n  display: grid;\n  grid-row-gap: 1.6rem;\n  margin-bottom: 2.2rem;\n`;\n\nexport const LoginSignUpTextButton = styled.span`\n  color: var(--primary-color);\n  cursor: pointer;\n`;\n\nexport const LoginSignUpWidthContainer = styled.div`\n  text-align: center;\n\n  ${createMediaQuery(mediaQueries.desktopUp)} {\n    width: 50%;\n  }\n`;\n\nexport const BottomButtonSpacer = styled.div`\n  display: grid;\n  grid-row-gap: 2.4rem;\n`;\n\nconst TermsPrivacyLinkShared = css`\n  color: grey;\n  font-size: 1.4rem;\n`;\n\nexport const TermsPrivacyLink = styled.span`\n  ${TermsPrivacyLinkShared};\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nexport const LoginSignUpTermsPrivacyText = styled.p`\n  ${TermsPrivacyLinkShared};\n`;\n\nexport const TermsPrivacyLinkContainer = styled.span`\n  margin-bottom: 6rem;\n`;\n\nexport const SubmitErrorContainer = styled.div`\n  margin-top: 1.4rem;\n  ${is(\"center\")`\n     text-align: center;\n  `};\n`;\n\nexport const InputForm = styled.form`\n  width: 100%;\n  display: grid;\n  grid-row-gap: 2.4rem;\n  text-align: left;\n  margin-bottom: 3rem;\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport is from \"styled-is\";\n\nconst InputLabelTag = styled.label`\n  display: block;\n  font-family: \"Bold\";\n  margin-bottom: 1rem;\n\n  ${is(\"textLabel\")`\n         margin-bottom: .6rem;\n    `};\n\n  ${is(\"extraLabelSpace\")`\n         margin-bottom: 1.4rem;\n    `};\n`;\n\nclass InputLabel extends React.Component {\n  render() {\n    return (\n      <InputLabelTag\n        extraLabelSpace={this.props.extraLabelSpace}\n        textLabel={this.props.textLabel}\n        htmlFor={this.props.for}\n      >\n        {\" \"}\n        {this.props.label}{\" \"}\n      </InputLabelTag>\n    );\n  }\n}\n\nexport default InputLabel;\n","import styled from 'styled-components'\nimport React from 'react';\nimport is from 'styled-is'\n\nconst Error = styled.p`\n  margin-top: .6rem;\n  font-size: 1.25rem;\n  color: var(--red-error-color);\n  \n   ${is('loginSignUpError')`\n      margin-bottom: 2rem;\n      margin-top: -1rem;\n  `};\n`;\n\nconst InputError = props => (\n    <Error loginSignUpError={props.loginSignUpError}>{props.error}</Error>\n)\n\nexport default InputError;\n","import styled, {css} from 'styled-components'\nimport is from 'styled-is'\n\nconst inputBase = css`\n  display: block;\n  border-radius: 2px;\n  border: 1px solid #cbcbcb;\n  padding: 1.2rem;\n  transition: all .2s linear;\n  background-color: white;\n  font-size: 1.5rem;\n  width: 100%;\n  \n  &:focus {\n    border: 1px solid var(--primary-color);\n    box-shadow: var(--inner-box-shadow);\n  }\n`\n\nconst TextInputTag = styled.input`\n  ${inputBase}\n  \n   ${is('reducedWidth')`\n     width: 80%;\n  `};\n   \n    ${is('customWidth')`\n     width: ${props => props.customWidth};\n  `};\n   \n   ${is('homeSearch')`\n       border: none;\n       height: 100%;\n       font-size: 1.5rem\n       \n       &:focus {\n         border: none;\n         box-shadow: none;\n       }\n   `};\n`\n\nconst SuggestedTextPopup = styled.div`\n  border-left: 1px solid var(--input-border-color);\n  border-right: 1px solid var(--input-border-color);\n  border-bottom: 1px solid var(--input-border-color);\n  transform: translateY(-2px);\n  background-color: white;\n  z-index: 10;\n  \n   ${is('homeSearch')`\n       position: absolute;\n       transform: translateY(0px);\n       left: 0;\n       right: 0;\n  `};\n  \n  \n`\n\nconst SuggestedTextPopupText = styled.div`\n  font-size: 1.3rem;\n  padding: 1rem 1.4rem;\n  cursor: pointer;\n   \n  &:hover {\n   background-color: #f8f8f8;\n  }\n`\n\nexport {inputBase, TextInputTag, SuggestedTextPopup, SuggestedTextPopupText}","import React from \"react\";\nimport InputLabel from \"./InputLabel\";\nimport InputError from \"./InputError\";\nimport { TextInputTag } from \"./InputCSS\";\n\nconst TextInput = (props) => {\n  return (\n    <div>\n      <InputLabel for={props.input.name} label={props.label} />\n      <TextInputTag customWidth={props.customWidth} {...props.input} />\n      {props.meta.touched && props.meta.invalid && (\n        <InputError error={props.meta.error} />\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import { SubmitErrorContainer } from \"../styles/login_sign_up_styles\";\nimport InputError from \"../../inputs/InputError\";\nimport React from \"react\";\nimport { SubmitContainer } from \"../styles/login_sign_up_styles\";\nimport FilledButton from \"../../buttons/FilledButton\";\n\nconst FormSubmitContainer = ({ submitting, error, onClick }) => (\n  <SubmitContainer>\n    <FilledButton\n      stretch\n      onClick={onClick}\n      type=\"submit\"\n      insideButtonLoading={true}\n      loading={submitting}\n      buttonText={\"Submit\"}\n    />\n    <SubmitErrorContainer center={true}>\n      <InputError error={error} />\n    </SubmitErrorContainer>\n  </SubmitContainer>\n);\n\nexport default FormSubmitContainer;\n","import axios from \"../../../axios\";\nimport { resetReduxStore } from \"../../../services/reset_redux_store\";\nimport { FORM_ERROR } from \"final-form\";\nimport { getUserInfo } from \"../../../services/load_data_services\";\nimport { userDataDispatch } from \"../../../redux/actions/user_actions\";\nimport { isLoggedIn } from \"../../../redux/actions/sessions_actions\";\nimport {\n  isLoginOpen,\n  isSignUpOpen,\n} from \"../../../redux/actions/login_actions\";\n\nexport const handleSubmit = async (url, values, dispatch, handleSuccess) => {\n  try {\n    const {\n      data: { success, error, token },\n    } = await axios.post(url, values);\n    if (success) {\n      await handleSuccess(token, dispatch);\n    } else {\n      console.log(error);\n      throw new Error(error);\n    }\n  } catch (e) {\n    return { [FORM_ERROR]: e.message ? e.message : \"Something went wrong\" };\n  }\n};\n\nexport const handleThirdPartyLoginSuccess = async (\n  url,\n  data,\n  dispatch,\n  setError\n) => {\n  try {\n    const {\n      data: { success, token },\n    } = await axios.post(url, data);\n    if (success) {\n      handleSuccessfulLogin(token, dispatch);\n    } else {\n      throw new Error();\n    }\n  } catch (e) {\n    setError(\"Something went wrong. Please try again later.\");\n  }\n};\n\nexport const handleSuccessfulLogin = async (token, dispatch) => {\n  localStorage.setItem(\"sessionToken\", token);\n  resetReduxStore();\n  await getUserInfo;\n  dispatch(userDataDispatch(await getUserInfo()));\n  dispatch(isLoggedIn(true));\n  dispatch(isLoginOpen(false));\n  dispatch(isSignUpOpen(false));\n};\n","import validator from \"validator\";\nimport isObject from \"is-object\";\nimport { sentenceCase } from \"sentence-case\";\n\nexport const validEmail = (value = \"\") =>\n  validator.isEmail(value) ? undefined : \"Email must be valid\";\n\nexport const validLength = (value = \"\", name, options = {}) => {\n  const nameFormatted = sentenceCase(name);\n\n  if (!options.allowBlank) {\n    const { min, max } = options.length;\n\n    if (!validator.isLength(value, { min: min })) {\n      return `${nameFormatted} must be at least ${min} characters long`;\n    } else if (!validator.isLength(value, { max })) {\n      return `${nameFormatted} cannot be more than ${max} characters long`;\n    } else {\n      return undefined;\n    }\n  } else {\n    return undefined;\n  }\n};\n\nexport const notBlank = (value = \"\", name) => {\n  if (value && !validator.isEmpty(value, { ignore_whitespace: true })) {\n    return undefined;\n  } else if (isObject(name)) {\n    return `${Object.keys(name)[0]} cannot be blank`;\n  } else {\n    return `${sentenceCase(name)} cannot be blank`;\n  }\n};\n\nexport const passwordConfirm = (value = \"\", allValues, options = {}) => {\n  return allValues[options.currentPassword] ===\n    allValues[options.passwordConfirm]\n    ? undefined\n    : \"Passwords do not match\";\n};\n","export const setValue = ([value, name, allowNull], state, utils) => {\n  if (allowNull && state.formState.values[name] === value) {\n    utils.changeValue(state, name, () => null);\n  } else {\n    utils.changeValue(state, name, () => value);\n  }\n};\n\nexport const toggleCheckMark = ([value, name], state, utils) => {\n  const mutate = (oldValue = []) => {\n    const index = oldValue.findIndex((element) => element === value);\n    index === -1 ? oldValue.push(value) : oldValue.splice(index, 1);\n    return oldValue;\n  };\n\n  utils.changeValue(state, name, mutate);\n};\n\nexport const getInitialFormValues = (initialValues) => {\n  if (process.env.NODE_ENV === \"development\") {\n    return initialValues;\n  } else {\n    return {};\n  }\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\n\nimport { InputForm } from \"../styles/login_sign_up_styles\";\nimport TextInput from \"../../inputs/TextInput\";\n\nimport FormSubmitContainer from \"./FormSubmitContainer\";\nimport {\n  handleSubmit,\n  handleSuccessfulLogin,\n} from \"../helpers/login_signup_helpers\";\nimport { validEmail, notBlank } from \"../../../services/validators/validators\";\nimport { getInitialFormValues } from \"../../forms/form_helpers\";\n\nconst LoginForm = () => {\n  const initialTestValues = getInitialFormValues({\n    email: \"\",\n    password: \"\",\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <Form\n      onSubmit={(values) =>\n        handleSubmit(\"/users/login\", values, dispatch, handleSuccessfulLogin)\n      }\n      initialValues={initialTestValues}\n      render={({ handleSubmit, submitting, submitError }) => (\n        <InputForm onSubmit={handleSubmit}>\n          <Field\n            name=\"email\"\n            component={TextInput}\n            label=\"Email\"\n            type=\"email\"\n            validate={validEmail}\n          />\n\n          <Field\n            name=\"password\"\n            component={TextInput}\n            label=\"Password\"\n            type=\"password\"\n            validate={(value, allValues, meta) => notBlank(value, meta.name)}\n          />\n\n          <FormSubmitContainer\n            type=\"submit\"\n            error={submitError}\n            submitting={submitting}\n          />\n        </InputForm>\n      )}\n    />\n  );\n};\n\nexport default LoginForm;\n","export const nameLength = { min: 3, max: 50 };\nexport const emailLength = { max: 100 };\nexport const passwordLength = { min: 6, max: 50 };\nexport const jobTitleLength = { min: 3, max: 120 };\nexport const bioLength = { min: 10, max: 2000 };\n\nexport const postTitleLength = { min: 6, max: 100 };\nexport const postDescriptionLength = { min: 20, max: 4000 };\nexport const spaceValue = { min: 10, max: 10000000 };\nexport const costValues = { min: 100, max: 1000000000 };\n\nexport const locationLength = { min: 3, max: 100 };\n","export const createValidatorLength = (item, options = {}) => {\n  const validateOptions = {\n    length: { min: item.min, max: item.max },\n  };\n\n  if (options.allowBlank) {\n    validateOptions.allowBlank = true;\n  }\n\n  return validateOptions;\n};\n","import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { useDispatch } from \"react-redux\";\n\nimport { InputForm } from \"../styles/login_sign_up_styles\";\nimport TextInput from \"../../inputs/TextInput\";\nimport {\n  handleSubmit,\n  handleSuccessfulLogin,\n} from \"../helpers/login_signup_helpers\";\nimport { nameLength, passwordLength } from \"../../../config/validatorLengths\";\nimport FormSubmitContainer from \"./FormSubmitContainer\";\nimport { createValidatorLength } from \"../../../services/validators/validator_helpers\";\n\nimport {\n  validEmail,\n  validLength,\n  passwordConfirm,\n} from \"../../../services/validators/validators\";\n\nconst SignUpForm = () => {\n  const initialTestValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n  };\n\n  const dispatch = useDispatch();\n\n  return (\n    <Form\n      onSubmit={(values) =>\n        handleSubmit(\"/users/sign_up\", values, dispatch, handleSuccessfulLogin)\n      }\n      initialValues={initialTestValues}\n      render={({ handleSubmit, submitting, submitError }) => (\n        <InputForm id=\"signUpForm\" onSubmit={handleSubmit}>\n          <Field\n            name=\"name\"\n            component={TextInput}\n            type=\"text\"\n            validate={(value, allValues, meta) =>\n              validLength(value, meta.name, createValidatorLength(nameLength))\n            }\n            label=\"Name\"\n          />\n\n          <Field\n            name=\"email\"\n            component={TextInput}\n            type=\"email\"\n            validate={validEmail}\n            label=\"Email\"\n          />\n\n          <Field\n            name=\"password\"\n            component={TextInput}\n            type=\"password\"\n            validate={(value, allValues, meta) =>\n              validLength(\n                value,\n                meta.name,\n                createValidatorLength(passwordLength)\n              )\n            }\n            label=\"Password\"\n          />\n\n          <Field\n            name=\"passwordConfirm\"\n            component={TextInput}\n            type=\"password\"\n            validate={(value, allValues) =>\n              passwordConfirm(value, allValues, {\n                currentPassword: \"password\",\n                passwordConfirm: \"passwordConfirm\",\n              })\n            }\n            label=\"Confirm Password\"\n          />\n\n          <FormSubmitContainer\n            type=\"submit\"\n            error={submitError}\n            submitting={submitting}\n          />\n        </InputForm>\n      )}\n    />\n  );\n};\n\nexport default SignUpForm;\n","import styled from \"styled-components\";\nimport is from \"styled-is\";\n\nexport const NoticeText = styled.p`\n  margin-bottom: 5rem;\n\n  ${is(\"smallBottomSpace\")`\n       margin-bottom: 3rem;\n  `};\n\n  ${is(\"noBottomMargin\")`\n       margin-bottom: 0rem;\n  `};\n`;\n\nexport const NoticeHeading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 3rem;\n`;\n","import styled from \"styled-components\"\nimport is from 'styled-is'\n\nexport const Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  ${is('fixed')`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  `}\n  \n  ${is('fillPage')`\n       height: calc(100vh - ${props => (props.navbarHeight)}px);\n  `}\n  \n  ${is('flexDirectionRow')`\n        flex-direction: row;\n  `}\n  \n   ${is('fillContentPage')`\n    justify-content: center;\n   `}\n \n   ${is('vertical')`\n    justify-content: center;\n  `}\n   \n   ${is('w100')`\n    width: 100%\n  `}\n   \n    ${is('textCenter')`\n        text-align: center;\n  `}\n   \n   ${is('mtAuto')`\n    margin-top: auto;\n  `}\n   \n    ${is('h100')`\n    height: 100%\n  `}\n`","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignupForm\";\nimport {\n  isEmailLoginOpen,\n  isEmailSignUpOpen,\n  isForgotPasswordOpen,\n} from \"../../../redux/actions/login_actions\";\n\nimport {\n  BottomButtonSpacer,\n  LoginSignUpTextButton,\n} from \"../styles/login_sign_up_styles\";\n\nimport { NoticeText, NoticeHeading } from \"../../notices/notice_styles\";\nimport { Center } from \"../../alignment/Center\";\n\nconst EmailLoginSignUpController = (props) => {\n  const loginSignUpState = useSelector(\n    ({ loginSignUpState }) => loginSignUpState\n  );\n  const dispatch = useDispatch();\n\n  const closeLoginSignUp = () => {\n    dispatch(isEmailLoginOpen(false));\n    dispatch(isEmailSignUpOpen(false));\n  };\n\n  const toggleLoginSignUp = () => {\n    if (loginSignUpState.isEmailLoginOpen) {\n      dispatch(isEmailLoginOpen(false));\n      dispatch(isEmailSignUpOpen(true));\n    } else {\n      dispatch(isEmailLoginOpen(true));\n      dispatch(isEmailSignUpOpen(false));\n    }\n  };\n\n  const openForgotPassword = () => {\n    dispatch(isForgotPasswordOpen(true));\n    closeLoginSignUp();\n  };\n\n  return (\n    <Center>\n      <NoticeHeading>{props.title}</NoticeHeading>\n      <NoticeText> {props.details} </NoticeText>\n\n      {loginSignUpState.isEmailLoginOpen && <LoginForm />}\n      {loginSignUpState.isEmailSignUpOpen && <SignUpForm />}\n\n      <BottomButtonSpacer>\n        {loginSignUpState.isEmailLoginOpen && (\n          <LoginSignUpTextButton onClick={openForgotPassword}>\n            {\" \"}\n            Forgot password?{\" \"}\n          </LoginSignUpTextButton>\n        )}\n        <span>\n          {\" \"}\n          {props.switchLoginMethodTitle}\n          <LoginSignUpTextButton onClick={toggleLoginSignUp}>\n            {\" \"}\n            {props.switchLoginMethodBtn}{\" \"}\n          </LoginSignUpTextButton>\n        </span>\n        <LoginSignUpTextButton onClick={closeLoginSignUp}>\n          {\" \"}\n          ← All login in options.{\" \"}\n        </LoginSignUpTextButton>\n      </BottomButtonSpacer>\n    </Center>\n  );\n};\n\nexport default EmailLoginSignUpController;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { buttonBase } from \"../buttons/button_styles\";\n\nconst ButtonImage = styled.img`\n  width: 2rem;\n  height: 2rem;\n  margin-right: 1rem;\n`;\n\nconst Button = styled.button`\n  ${buttonBase};\n  background-color: transparent;\n  border: 1px solid var(--input-border-color);\n  color: black;\n  display: flex;\n  align-items: center;\n  transition: background-color 0.1s linear;\n\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\nconst LoginSignUpButton = (props) => {\n  return (\n    <Button onClick={props.onClick}>\n      <ButtonImage src={props.buttonImage} />\n      <span> {props.buttonText} </span>\n    </Button>\n  );\n};\n\nexport default LoginSignUpButton;\n","export const transitOptions = [\n  \"Subway\",\n  \"Bus\",\n  \"Parking\",\n  \"Train\",\n  \"Bike Parking\",\n  \"Boat\",\n  \"Airport\",\n];\nexport const typeOptions = [\"Office\", \"Warehouse\", \"Retail\", \"Industrial\"];\nexport const reportOptions = [\n  \"Fraud or Scam\",\n  \"Hate Speech\",\n  \"Copyright Infringement\",\n  \"Spam\",\n  \"Violence\",\n  \"Threatening\",\n  \"Inappropriate\",\n];\nexport const createPostNavTitles = [\n  \"Title\",\n  \"Description\",\n  \"Space\",\n  \"Cost\",\n  \"Location\",\n  \"Type\",\n  \"Transit\",\n  \"Summary\",\n];\nexport const googleClientId =\n  \"462069596826-5vf73hd6ubnubici9qrrd4sdeqdv2bin.apps.googleusercontent.com\";\nexport const FacebookAppId = \"463423911265947\";\nexport const maxRange = 100000000;\nexport const standardError = \"Something went wrong\";\nexport const messageDelivered = \"Delivered\";\nexport const messageNotDelivered = \"Not Delivered\";\n","import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport googleLogo from \"../../../assets/icons/google.svg\";\nimport LoginSignUpButton from \"../LoginSignUpButton\";\nimport { googleClientId } from \"../../../config/constants\";\nimport { handleThirdPartyLoginSuccess } from \"../helpers/login_signup_helpers\";\n\nconst GoogleLoginButton = (props) => {\n  const dispatch = useDispatch();\n\n  const handleGoogleLoginFailure = () => {\n    props.setError(\"We could not authenticate your account.\");\n  };\n\n  const responseGoogle = (response) => {\n    console.log(response);\n  };\n\n  return (\n    <GoogleLogin\n      clientId={googleClientId}\n      render={(renderProps) => (\n        <LoginSignUpButton\n          onClick={renderProps.onClick}\n          buttonImage={googleLogo}\n          buttonText={`${props.btnText} with Google`}\n        />\n      )}\n      onSuccess={(response) =>\n        handleThirdPartyLoginSuccess(\n          \"/users/google_login\",\n          { tokenId: response.tokenId },\n          dispatch,\n          props.setError\n        )\n      }\n      onFailure={responseGoogle}\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n};\n\nexport default GoogleLoginButton;\n","import React from \"react\";\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\nimport LoginSignUpButton from \"../LoginSignUpButton\";\nimport facebookLogo from \"../../../assets/icons/facebook.svg\";\nimport { FacebookAppId } from \"../../../config/constants\";\nimport { handleThirdPartyLoginSuccess } from \"../helpers/login_signup_helpers\";\nimport { useDispatch } from \"react-redux\";\n\nconst FacebookLoginButton = (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <FacebookLogin\n      appId={FacebookAppId}\n      autoLoad={false}\n      fields=\"name,email,picture.width(400).height(400)\"\n      callback={(response) =>\n        handleThirdPartyLoginSuccess(\n          \"/users/facebook_login\",\n          { facebookResponse: response },\n          dispatch,\n          props.setError\n        )\n      }\n      render={(renderProps) => (\n        <LoginSignUpButton\n          onClick={renderProps.onClick}\n          buttonImage={facebookLogo}\n          buttonText={`${props.btnText} with Facebook`}\n        />\n      )}\n    />\n  );\n};\n\nexport default FacebookLoginButton;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  LoginSignUpTermsPrivacyText,\n  TermsPrivacyLink,\n} from \"./styles/login_sign_up_styles\";\nimport { isLoginOpen, isSignUpOpen } from \"../../redux/actions/login_actions\";\n\nconst LoginSignUpTermsPrivacyContainer = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const isLoginOpenValue = useSelector(\n    ({ loginSignUpState: { isLoginOpen } }) => isLoginOpen\n  );\n\n  const handleClick = (route) => {\n    dispatch(isLoginOpen(false));\n    dispatch(isSignUpOpen(false));\n    history.push(route);\n  };\n\n  return (\n    <LoginSignUpTermsPrivacyText>\n      By signing {isLoginOpenValue ? \"in\" : \"up\"} your are accepting our <br />{\" \"}\n      <TermsPrivacyLink onClick={() => handleClick(\"terms-of-service\")}>\n        Terms of Service\n      </TermsPrivacyLink>{\" \"}\n      &{\" \"}\n      <TermsPrivacyLink onClick={() => handleClick(\"privacy-policy\")}>\n        Privacy Policy\n      </TermsPrivacyLink>\n    </LoginSignUpTermsPrivacyText>\n  );\n};\n\nexport default LoginSignUpTermsPrivacyContainer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport GoogleLoginButton from \"./login_methods/GoogleLogin\";\nimport FacebookLoginButton from \"./login_methods/FacebookLogin\";\nimport LoginSignUpButton from \"./LoginSignUpButton\";\nimport emailIcon from \"../../assets/icons/messages.svg\";\nimport InputError from \"../inputs/InputError\";\nimport { Center } from \"../alignment/Center\";\n\nimport {\n  isSignUpOpen,\n  isLoginOpen,\n  isEmailLoginOpen,\n  isEmailSignUpOpen,\n} from \"../../redux/actions/login_actions\";\n\nimport {\n  BtnOuterContainer,\n  LoginSignUpTextButton,\n  TermsPrivacyLinkContainer,\n  LoginSignUpHeading,\n  LoginSignUpText,\n} from \"./styles/login_sign_up_styles\";\nimport LoginSignUpTermsPrivacyContainer from \"./LoginSignUpTermsPrivacyContainer\";\n\nconst LoginSignUpButtonsContainer = (props) => {\n  const loginSignUpState = useSelector(\n    ({ loginSignUpState }) => loginSignUpState\n  );\n  const [error, setError] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleEmailLoginClick = () => {\n    loginSignUpState.isLoginOpen\n      ? dispatch(isEmailLoginOpen(true))\n      : dispatch(isEmailSignUpOpen(true));\n  };\n\n  const handleSwitchMenuClick = () => {\n    if (loginSignUpState.isLoginOpen) {\n      dispatch(isSignUpOpen(true));\n      dispatch(isLoginOpen(false));\n    } else {\n      dispatch(isSignUpOpen(false));\n      dispatch(isLoginOpen(true));\n    }\n  };\n\n  return (\n    <Center>\n      <LoginSignUpHeading>{props.title}</LoginSignUpHeading>\n      <LoginSignUpText> {props.message} </LoginSignUpText>\n\n      <BtnOuterContainer>\n        <GoogleLoginButton\n          btnText={loginSignUpState.isLoginOpen ? \"Login\" : \"Sign up\"}\n          setError={setError}\n        />\n        <FacebookLoginButton\n          btnText={loginSignUpState.isLoginOpen ? \"Login\" : \"Sign up\"}\n          setError={setError}\n        />\n        <LoginSignUpButton\n          onClick={handleEmailLoginClick}\n          buttonImage={emailIcon}\n          buttonText={`${\n            loginSignUpState.isLoginOpen ? \"Login\" : \"Sign up\"\n          } with Email`}\n        />\n      </BtnOuterContainer>\n\n      <InputError loginSignUpError error={error} />\n\n      <TermsPrivacyLinkContainer>\n        {\" \"}\n        {props.switchModeTitle}\n        <LoginSignUpTextButton onClick={handleSwitchMenuClick}>\n          {\" \"}\n          {props.switchModeBtnText}{\" \"}\n        </LoginSignUpTextButton>\n      </TermsPrivacyLinkContainer>\n\n      <LoginSignUpTermsPrivacyContainer />\n    </Center>\n  );\n};\n\nexport default LoginSignUpButtonsContainer;\n","import styled from \"styled-components\"\nimport is from 'styled-is'\n\nexport const ForgotPasswordText = styled.div`\n  margin-bottom: 5rem;\n`\n\nexport const SuccessIcon = styled.img`\n  width: 2.5rem;\n  margin-right: 1rem;\n`\n\nexport const TextContainer = styled.div`\n  display: flex;\n  align-items: center;\n  \n  ${is('center')`\n    justify-content: center;\n  `};\n  \n   ${is('largeMarginBottom')`\n      margin-bottom: 5rem;\n  `};\n`","import React from \"react\"\nimport {TextContainer, SuccessIcon} from \"./alert_styles\"\nimport successIcon from \"../../assets/icons/success.svg\"\n\nconst SuccessMessage = props => (\n    <TextContainer largeMarginBottom={props.largeMarginBottom}>\n        <SuccessIcon src={successIcon} alt='success icon'/>\n        <div> {props.message}</div>\n    </TextContainer>\n)\n\n\nexport default SuccessMessage\n","import React, { useState } from \"react\";\n\nimport {\n  LoginSignUpTextButton,\n  InputForm,\n} from \"../styles/login_sign_up_styles\";\n\nimport { handleSubmit } from \"../helpers/login_signup_helpers\";\nimport { Form, Field } from \"react-final-form\";\nimport TextInput from \"../../inputs/TextInput\";\nimport { validEmail } from \"../../../services/validators/validators\";\nimport { useDispatch } from \"react-redux\";\nimport FormSubmitContainer from \"../login_methods/FormSubmitContainer\";\nimport SuccessMessage from \"../../alerts/SuccessMessage\";\nimport { NoticeHeading, NoticeText } from \"../../notices/notice_styles\";\n\nimport {\n  isForgotPasswordOpen,\n  isEmailLoginOpen,\n} from \"../../../redux/actions/login_actions\";\nimport { Center } from \"../../alignment/Center\";\n\nconst ForgotPasswordForm = (props) => {\n  const [forgotPasswordEmailSent, setForgotPasswordEmailSent] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleBackClick = () => {\n    dispatch(isForgotPasswordOpen(false));\n    dispatch(isEmailLoginOpen(true));\n  };\n\n  const handleSuccess = () => {\n    setForgotPasswordEmailSent(true);\n  };\n\n  const initialTestValues = {};\n\n  return (\n    <Center>\n      <NoticeHeading>Forgot Password</NoticeHeading>\n      <NoticeText>\n        {\" \"}\n        Please enter the email address associated with your account and we will\n        send you a link to reset to your password.{\" \"}\n      </NoticeText>\n\n      {!forgotPasswordEmailSent && (\n        <Form\n          onSubmit={(values) =>\n            handleSubmit(\"/users/forgot_password\", values, props, handleSuccess)\n          }\n          initialValues={initialTestValues}\n          render={({ handleSubmit, submitting, submitError }) => (\n            <InputForm id=\"forgotPasswordForm\" onSubmit={handleSubmit}>\n              <Field\n                name=\"email\"\n                component={TextInput}\n                label=\"Email\"\n                type=\"email\"\n                validate={validEmail}\n              />\n\n              <FormSubmitContainer\n                type=\"submit\"\n                error={submitError}\n                submitting={submitting}\n              />\n            </InputForm>\n          )}\n        />\n      )}\n\n      {forgotPasswordEmailSent && (\n        <SuccessMessage\n          center\n          largeMarginBottom\n          message=\"Your password reset email was successfully sent\"\n        />\n      )}\n\n      <LoginSignUpTextButton onClick={handleBackClick}>\n        {\" \"}\n        ← login with email{\" \"}\n      </LoginSignUpTextButton>\n    </Center>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport moment from \"moment\";\n\nimport {\n  LoginSignUpTextButton,\n  InputForm,\n} from \"../styles/login_sign_up_styles\";\n\nimport { handleSubmit } from \"../helpers/login_signup_helpers\";\nimport TextInput from \"../../inputs/TextInput\";\nimport {\n  validLength,\n  passwordConfirm,\n} from \"../../../services/validators/validators\";\nimport FormSubmitContainer from \"../login_methods/FormSubmitContainer\";\nimport FilledButton from \"../../buttons/FilledButton\";\nimport {\n  isForgotPasswordOpen,\n  isResetPasswordOpen,\n  isEmailLoginOpen,\n} from \"../../../redux/actions/login_actions\";\nimport { NoticeHeading, NoticeText } from \"../../notices/notice_styles\";\nimport SuccessMessage from \"../../alerts/SuccessMessage\";\nimport { createValidatorLength } from \"../../../services/validators/validator_helpers\";\nimport { passwordLength } from \"../../../config/validatorLengths\";\nimport {\n  getInitialFormValues,\n  dispatchSubmitForm,\n} from \"../../forms/form_helpers\";\nimport { Center } from \"../../alignment/Center\";\n\nconst ResetPasswordForm = (props) => {\n  const [resetLinkValid, setResetLinkValid] = useState(false);\n  const [passwordResetSuccessful, setPasswordResetSuccessful] = useState(false);\n  const { validUntil, token } = queryString.parse(window.location.search);\n\n  useEffect(() => {\n    if (moment().diff(validUntil, \"m\") < 0) {\n      setResetLinkValid(true);\n    }\n  }, [resetLinkValid]);\n\n  const goToForgotPasswordScreen = () => {\n    props.isForgotPasswordOpen(true);\n    props.isResetPasswordOpen(false);\n  };\n\n  const handleBackClick = () => {\n    props.isResetPasswordOpen(false);\n    props.isEmailLoginOpen(true);\n  };\n\n  const handlePasswordResetSuccess = () => {\n    setPasswordResetSuccessful(true);\n  };\n\n  const initialTestValues = getInitialFormValues({\n    password: \"password\",\n    passwordConfirm: \"password\",\n  });\n\n  return (\n    <div>\n      {resetLinkValid && (\n        <Center>\n          <NoticeHeading>Reset Password</NoticeHeading>\n          <NoticeText> Please enter your new password below. </NoticeText>\n\n          {resetLinkValid && !passwordResetSuccessful && (\n            <Form\n              onSubmit={(values) =>\n                handleSubmit(\n                  \"/users/reset_password\",\n                  {\n                    ...values,\n                    token,\n                  },\n                  props,\n                  handlePasswordResetSuccess\n                )\n              }\n              initialValues={initialTestValues}\n              render={({ handleSubmit, submitting, submitError }) => (\n                <InputForm id=\"resetPasswordForm\" onSubmit={handleSubmit}>\n                  <Field\n                    name=\"password\"\n                    component={TextInput}\n                    type=\"password\"\n                    validate={(value, allValues, meta) =>\n                      validLength(\n                        value,\n                        meta.name,\n                        createValidatorLength(passwordLength)\n                      )\n                    }\n                    label=\"Password\"\n                  />\n\n                  <Field\n                    name=\"passwordConfirm\"\n                    component={TextInput}\n                    type=\"password\"\n                    validate={(value, allValues) =>\n                      passwordConfirm(value, allValues, {\n                        currentPassword: \"password\",\n                        passwordConfirm: \"passwordConfirm\",\n                      })\n                    }\n                    label=\"Confirm Password\"\n                  />\n\n                  <FormSubmitContainer\n                    type=\"submit\"\n                    error={submitError}\n                    submitting={submitting}\n                  />\n                </InputForm>\n              )}\n            />\n          )}\n        </Center>\n      )}\n\n      {!resetLinkValid && (\n        <Center>\n          <NoticeHeading>Link Expired</NoticeHeading>\n          <NoticeText smallBottomSpace>\n            {\" \"}\n            The password reset link has expired. To request another link, please\n            enter your email again in the forgot password section.{\" \"}\n          </NoticeText>\n          <FilledButton\n            buttonText=\"Return to Forgot Password\"\n            onClick={goToForgotPasswordScreen}\n          />\n        </Center>\n      )}\n\n      {passwordResetSuccessful && (\n        <Center>\n          <SuccessMessage\n            message=\"Your password has been reset\"\n            largeMarginBottom\n            center\n          />\n        </Center>\n      )}\n\n      {resetLinkValid && (\n        <Center>\n          <LoginSignUpTextButton onClick={handleBackClick}>\n            {\" \"}\n            ← login with email{\" \"}\n          </LoginSignUpTextButton>\n        </Center>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = () => ({\n  isForgotPasswordOpen,\n  isResetPasswordOpen,\n  isEmailLoginOpen,\n});\n\nexport default connect(null, mapDispatchToProps())(ResetPasswordForm);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport EmailLoginSignUpController from \"./login_methods/EmailLoginSignupController\";\nimport LoginSignUpButtonsContainer from \"./LoginSignUpButtonsContainer\";\nimport ForgotPasswordForm from \"./forogotPassword/ForgotPasswordForm\";\nimport ResetPasswordForm from \"./forogotPassword/ResetPasswordForm\";\n\nconst LoginSignUpControls = (props) => {\n  const loginSignUpState = useSelector(\n    ({ loginSignUpState }) => loginSignUpState\n  );\n\n  return (\n    <div>\n      {!loginSignUpState.isForgotPasswordOpen &&\n        !loginSignUpState.isEmailLoginOpen &&\n        !loginSignUpState.isEmailSignUpOpen &&\n        !loginSignUpState.isResetPasswordOpen && (\n          <LoginSignUpButtonsContainer\n            title={props.title}\n            message={props.message}\n            switchModeTitle={props.switchModeTitle}\n            switchModeBtnText={props.switchModeBtnText}\n          />\n        )}\n\n      {loginSignUpState.isEmailLoginOpen && (\n        <EmailLoginSignUpController\n          title={\"Sign in with Email\"}\n          details={\"Enter your email address and password below\"}\n          switchLoginMethodTitle={\"No account?\"}\n          switchLoginMethodBtn={\"Create one\"}\n        />\n      )}\n\n      {loginSignUpState.isEmailSignUpOpen && (\n        <EmailLoginSignUpController\n          title={\"Sign up with Email\"}\n          details={\"Please fill out the information below\"}\n          switchLoginMethodTitle={\"Have an account?\"}\n          switchLoginMethodBtn={\"Sign in\"}\n        />\n      )}\n\n      {loginSignUpState.isForgotPasswordOpen &&\n        !loginSignUpState.isResetPasswordOpen && <ForgotPasswordForm />}\n\n      {loginSignUpState.isResetPasswordOpen && <ResetPasswordForm />}\n    </div>\n  );\n};\n\nexport default LoginSignUpControls;\n","import React from \"react\";\nimport LoginSignUpControls from \"./LoginSignUpControls\";\nimport { useSelector } from \"react-redux\";\nimport { LoginSignUpWidthContainer } from \"./styles/login_sign_up_styles\";\nimport { Center } from \"../alignment/Center\";\n\nconst LoginSignUp = () => {\n  const loginSignUpState = useSelector(\n    ({ loginSignUpState }) => loginSignUpState\n  );\n\n  return (\n    <Center>\n      <LoginSignUpWidthContainer>\n        {loginSignUpState.isLoginOpen && (\n          <LoginSignUpControls\n            title=\"Welcome Back\"\n            message=\"Sign in to get personalized story recommendations, follow authors and topics you love, and interact with stories.\"\n            switchModeTitle=\"No Account?\"\n            switchModeBtnText=\"Create One\"\n          />\n        )}\n\n        {loginSignUpState.isSignUpOpen && (\n          <LoginSignUpControls\n            title=\"Join Spekkly\"\n            message=\"Sign up to get personalized story recommendations, follow authors and topics you love, and interact with stories.\"\n            switchModeTitle=\"Have an account?\"\n            switchModeBtnText=\"Sign in\"\n          />\n        )}\n      </LoginSignUpWidthContainer>\n    </Center>\n  );\n};\n\nexport default LoginSignUp;\n","import styled from \"styled-components\"\nimport is from \"styled-is\"\n\nexport const AppContainer = styled.div`\n  ${is('blurBackground')`\n     filter: blur(4px);\n  `}\n`\n","import styled, { keyframes } from \"styled-components\";\nimport is from \"styled-is\";\nimport { createMediaQuery, mediaQueries } from \"../../media/media_helpers\";\n\nconst grow = keyframes`\n  from {transform: scale(0);}\n  to {transform: scale(1);}\n`;\n\nexport const ModalContainerTag = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.86);\n  animation: ${grow} 0.1s linear forwards;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalInnerContainer = styled.div`\n  background-color: white;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n  width: auto;\n  padding: 3rem;\n  position: relative;\n  animation: ${grow} 0.05s linear;\n  overflow: scroll;\n\n  ${is(\"stretch\")`\n    width: 40%;\n    height: 50%;\n    overflow: scroll;\n  `}\n\n  ${is(\"large\")`\n    width: 80%;\n    max-width: 80%;\n    padding: 6rem 10rem;\n  `}\n   \n   ${is(\"medium\")`\n    width: 60%;\n    max-width: 60%;\n    padding: 10rem;\n  `}\n   \n  ${createMediaQuery(mediaQueries.desktopUp)} {\n    max-height: 80vh;\n    min-width: 20%;\n    max-width: 200rem;\n  }\n\n  ${createMediaQuery(mediaQueries.desktopWideUp)} {\n    padding: 14rem;\n  }\n\n  ${createMediaQuery(mediaQueries.tabLandDown)} {\n    max-width: 100%;\n    width: 90%;\n    padding: 8rem 6rem;\n    height: calc(94vh - var(--vh-offset, 0px));\n  }\n\n  ${createMediaQuery(mediaQueries.phoneDown)} {\n    padding: 8rem 4rem;\n  }\n`;\n\nexport const ModalHeading = styled.h1`\n  font-size: 3rem;\n  margin-bottom: 1.4rem;\n`;\n\nexport const ModalText = styled.p`\n  margin-bottom: 3rem;\n`;\n\nexport const ModalFormContainer = styled.div`\n  margin-bottom: 2rem;\n`;\n\nexport const ConfirmAlertWithTextFieldContainer = styled.div`\n  margin-bottom: 2rem;\n`;\n\nexport const CloseButtonImage = styled.img`\n  width: 1.5rem;\n  height: 1.5rem;\n`;\n\nexport const CloseButtonContainer = styled.button`\n  padding: 1.2rem;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import { BLUR_BACKGROUND } from \"../constants/app_action_types\";\n\nexport const blurBackground = (blurBackground) => ({\n  type: BLUR_BACKGROUND,\n  blurBackground,\n});\n","import React, { useEffect } from \"react\";\nimport { Portal } from \"react-portal\";\n\nimport {\n  ModalContainerTag,\n  ModalInnerContainer,\n  CloseButtonContainer,\n  CloseButtonImage,\n} from \"./styles/modal_styles\";\nimport {\n  useDisableScroll,\n  closeModalFromClick,\n} from \"../modals/helpers/modal_helpers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { blurBackground } from \"../../redux/actions/app_actions\";\n\nconst Modal = (props) => {\n  const closeIcon = useSelector(\n    ({ assetState: { BLACK_X_ICON } }) => BLACK_X_ICON\n  );\n  const dispatch = useDispatch();\n\n  useDisableScroll();\n\n  useEffect(() => {\n    dispatch(blurBackground(true));\n    return () => {\n      dispatch(blurBackground(false));\n    };\n  }, []);\n\n  return (\n    <Portal>\n      <ModalContainerTag\n        className={props.outsideClickIgnoreClass}\n        onClick={(e) => closeModalFromClick(e, props.closeModal)}\n      >\n        <ModalInnerContainer large={props.large} medium={props.medium}>\n          {props.showCloseButton && (\n            <CloseButtonContainer onClick={props.closeModal}>\n              <CloseButtonImage src={closeIcon} />\n            </CloseButtonContainer>\n          )}\n          {props.children}\n        </ModalInnerContainer>\n      </ModalContainerTag>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\nimport is, { isOr } from \"styled-is\";\n\nconst SideNavItemContainer = styled.div`\n  display: flex;\n  padding: 1.4rem;\n  align-items: center;\n\n  ${is(\"active\")`\n      background-color: white;\n      border-left: 4px solid var(--primary-color);\n      box-shadow: var(--light-shadow);\n    `};\n\n  ${is(\"clickable\")`\n      cursor: pointer;\n    `};\n\n  ${is(\"hoverable\")`\n      transition: background-color .1s linear;\n      &:hover {\n        background-color: var(--background-color-highlighted);\n      }\n     `};\n`;\n\nconst SideNavItemText = styled.span`\n  color: #868686 ${isOr(\"active\", \"completed\")`\n      color: black;\n    `};\n`;\n\nconst SideNavCheckMark = styled.img`\n  height: 1.6rem;\n  width: 1.6rem;\n  margin-left: auto;\n`;\n\nexport { SideNavItemContainer, SideNavItemText, SideNavCheckMark };\n","import React from \"react\"\nimport {connect} from 'react-redux'\n\nimport {SideNavCheckMark, SideNavItemContainer, SideNavItemText} from \"../../page_nav/sideNav\";\nimport checkbox from \"../../../assets/icons/checkbox.svg\";\nimport {createPostNavTitles} from \"../../../config/constants\";\n\nconst CreatePostNavItems = props => (\n    <div>\n        {createPostNavTitles.map((title, index) =>\n            <SideNavItemContainer key={title.toLowerCase()}\n                                  active={props.activeNavIndex === index}>\n                <SideNavItemText completed={props.activeNavIndex > index}\n                                 active={props.activeNavIndex === index}> {title}\n                </SideNavItemText>\n                {props.completed ? <SideNavCheckMark src={checkbox}/> : \"\"}\n            </SideNavItemContainer>\n        )}\n    </div>\n)\n\nconst mapStateToProps = ({createPostState}) => ({\n    activeNavIndex: createPostState.activeNavIndex\n})\n\nexport default connect(mapStateToProps)(CreatePostNavItems)","import styled from \"styled-components\";\nimport React from \"react\";\nimport is from \"styled-is\";\n\nconst ViewBoxHeadingTag = styled.h1`\n  text-align: center;\n  padding-top: 1.4rem;\n  padding-bottom: 1.4rem;\n  font-size: 1.8rem;\n  border-bottom: var(--box-border);\n  background-color: white;\n\n  ${is(\"emptyConversation\")`\n     height: 6rem;\n  `}\n`;\n\nconst ViewBoxHeading = (props) => (\n  <ViewBoxHeadingTag emptyConversation={props.emptyConversation}>\n    {\" \"}\n    {props.heading}{\" \"}\n  </ViewBoxHeadingTag>\n);\n\nexport default ViewBoxHeading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { inputBase } from \"./InputCSS\";\nimport InputLabel from \"./InputLabel\";\nimport InputError from \"./InputError\";\n\nconst TextAreaTag = styled.textarea`\n  ${inputBase};\n  resize: none;\n  min-height: 20rem;\n  width: 100%;\n`;\n\nconst TextArea = (props) => {\n  return (\n    <div>\n      <InputLabel for={props.name} label={props.label} />\n      <TextAreaTag {...props.input} type=\"text\" />\n      {props.meta.touched && props.meta.invalid && (\n        <InputError error={props.meta.error} />\n      )}\n    </div>\n  );\n};\n\nexport default TextArea;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { inputBase } from \"./InputCSS\";\nimport is from \"styled-is\";\nimport InputError from \"./InputError\";\n\nconst InputNumberTag = styled.input`\n  ${inputBase};\n  padding: 1rem;\n  width: 100%;\n  direction: rtl;\n  font-size: 1.4rem;\n\n  ${is(\"borderNone\")`\n        border: none;\n    `};\n`;\n\nconst InputNumberContainer = styled.div`\n  position: relative;\n`;\n\nconst InputPlaceholder = styled.span`\n  position: absolute;\n  top: 25%;\n  left: 10px;\n  font-size: 1.4rem;\n`;\n\nconst NumberInput = (props) => {\n  return (\n    <div>\n      <InputNumberContainer>\n        <InputNumberTag\n          placeholder={props.placeholder}\n          data-lpignore=\"true\"\n          borderNone={props.borderNone}\n          {...props.input}\n        />\n        <InputPlaceholder>{props.inputLabel}</InputPlaceholder>\n      </InputNumberContainer>\n    </div>\n  );\n};\n\nexport default NumberInput;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Field } from \"react-final-form\";\nimport is from \"styled-is\";\nimport NumberInput from \"./NumberInput\";\nimport InputLabel from \"./InputLabel\";\nimport InputError from \"./InputError\";\nimport validator from \"validator\";\nimport commaNumber from \"comma-number\";\nimport { maxRange } from \"../../config/constants\";\n\nconst InputRangeTag = styled.div`\n  margin-left: 1.2rem;\n  margin-right: 1.2rem;\n`;\n\nconst CreatePostMinMaxContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CreatePostRangeContainer = styled.div`\n  ${is(\"stretch\")`\n      width: 100%;\n  `};\n`;\n\nconst InputRange = (props) => {\n  const [previousValue, setPreviousValue] = useState(\"\");\n\n  const removeCommas = (value) => (value ? value.replace(/,/g, \"\") : undefined);\n\n  const forceNumeric = (value) => {\n    const numericValue = removeCommas(value);\n    const numericValueWithCommas = commaNumber(numericValue);\n\n    if (!value) {\n      setPreviousValue(value);\n      return \"\";\n    } else if (\n      !validator.isNumeric(numericValue) ||\n      parseInt(numericValue) > maxRange\n    ) {\n      return previousValue;\n    } else {\n      setPreviousValue(numericValueWithCommas);\n      return numericValueWithCommas;\n    }\n  };\n\n  const validateRangeInput = (value, allValues) => {\n    if (\n      !allValues[props.name] ||\n      (!allValues[props.name].min && !allValues[props.name].max)\n    ) {\n      return `Min and max ${props.name} cannot be blank`;\n    }\n\n    if (!allValues[props.name].min) {\n      return `Min ${props.name} cannot be blank`;\n    }\n\n    if (!allValues[props.name].max) {\n      return `Max ${props.name} cannot be blank`;\n    }\n\n    let minVal = /^\\d+$/.test(allValues[props.name].min);\n    let maxVal = /^\\d+$/.test(allValues[props.name].max);\n\n    if (!minVal || !maxVal) {\n      return `Input field must be Integer`;\n    }\n\n    if (\n      parseInt(removeCommas(allValues[props.name].min.toString())) >=\n      parseInt(removeCommas(allValues[props.name].max.toString()))\n    ) {\n      return `Min ${props.name} must be less than max ${props.name}`;\n    }\n  };\n\n  const createField = (name, placeholder) => (\n    <Field\n      name={name}\n      component={NumberInput}\n      borderNone={props.borderNone}\n      placeholder={placeholder}\n      validate={props.validation ? validateRangeInput : false}\n      inputLabel={props.inputLabel}\n    />\n  );\n\n  return (\n    <div>\n      <InputLabel extraLabelSpace label={props.label} />\n      <CreatePostRangeContainer stretch={props.stretch}>\n        <CreatePostMinMaxContainer>\n          {createField(`${props.name}.min`, \"Min\")}\n          <InputRangeTag> To </InputRangeTag>\n          {createField(`${props.name}.max`, \"Max\")}\n        </CreatePostMinMaxContainer>\n      </CreatePostRangeContainer>\n      {props.invalid && props.touched && <InputError error={props.error} />}\n    </div>\n  );\n};\n\nexport default InputRange;\n","import styled from \"styled-components\"\nimport {createMediaQuery, mediaQueries} from \"../../../media/media_helpers\";\n\nexport const SearchForm = styled.form`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr .2rem 1fr auto;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.16);\n  background-color: white;\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n     grid-template-columns: 1fr auto;\n  }\n`\n\nexport const HomeSearchFormContainer = styled.div`\n  \n   background-color: var(--background-color);\n   \n   ${createMediaQuery(mediaQueries.tabLandUp)} {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n      padding: 7rem 0; \n  }\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n      padding-top: 5rem;\n      padding-bottom: 7rem;\n  }\n`\n\nexport const HomeSearchInput = styled.input`\n  font-size: 1.5rem;\n  border: none;\n  padding: 2rem;\n  height: 100%;\n  width: 100%;\n`\n\nexport const SearchSpacer = styled.div`\n  background-color: var(--background-color);\n`","import { SuggestedTextPopup, SuggestedTextPopupText } from \"../InputCSS\";\nimport React from \"react\";\nimport onClickOutside from \"react-onclickoutside\";\n\nconst InputLocationPopup = (props) => {\n  InputLocationPopup.handleClickOutside =\n    props.closeInputLocationSuggestionsPopup;\n\n  return (\n    <SuggestedTextPopup homeSearch={props.homeSearch}>\n      {props.predictions.map((prediction) => (\n        <SuggestedTextPopupText\n          onClick={() =>\n            props.handleLocationSuggestionClick(prediction.description)\n          }\n          key={prediction.id}\n        >\n          {\" \"}\n          {prediction.description}\n        </SuggestedTextPopupText>\n      ))}\n    </SuggestedTextPopup>\n  );\n};\n\nInputLocationPopup.prototype = {};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => InputLocationPopup.handleClickOutside,\n};\n\nexport default onClickOutside(InputLocationPopup, clickOutsideConfig);\n","import React, { useEffect, useState } from \"react\";\nimport InputLabel from \"../InputLabel\";\nimport InputError from \"../InputError\";\nimport { TextInputTag } from \"../InputCSS\";\nimport { HomeSearchInput } from \"../../pages/home/styles/search_styles\";\nimport { RelativePositionContainer } from \"../../containers/container\";\nimport InputLocationPopup from \"./InputLocationPopup\";\n\nconst InputLocationSuggestions = (props) => {\n  const [showInputLocationPopup, setShowInputLocationPopup] = useState(true);\n\n  const closeInputLocationSuggestionsPopup = () => {\n    setShowInputLocationPopup(false);\n  };\n\n  const predictionIds = props.predictions.map((prediction) => prediction.id);\n\n  useEffect(() => {\n    setShowInputLocationPopup(true);\n  }, [predictionIds.toString()]);\n\n  return (\n    <RelativePositionContainer>\n      {!props.homeSearch && <InputLabel for={props.name} label={props.label} />}\n\n      {!props.homeSearch && (\n        <TextInputTag {...props.input} placeholder=\"Location\" />\n      )}\n\n      {props.homeSearch && (\n        <HomeSearchInput {...props.input} placeholder=\"Location\" />\n      )}\n\n      {props.predictions.length > 0 && showInputLocationPopup && (\n        <InputLocationPopup\n          homeSearch={props.homeSearch}\n          handleLocationSuggestionClick={props.handleLocationSuggestionClick}\n          closeInputLocationSuggestionsPopup={\n            closeInputLocationSuggestionsPopup\n          }\n          predictions={props.predictions}\n        />\n      )}\n\n      {((!props.homeSearch && props.meta.touched) || props.submit) &&\n        props.meta.error && <InputError error={props.meta.error} />}\n    </RelativePositionContainer>\n  );\n};\n\nexport default InputLocationSuggestions;\n","import React, { useState } from \"react\";\nimport axios from \"../../../axios\";\nimport { Field } from \"react-final-form\";\nimport InputLocationSuggestions from \"./InputLocationSuggestions\";\nimport { validLength } from \"../../../services/validators/validators\";\nimport { createValidatorLength } from \"../../../services/validators/validator_helpers\";\nimport { locationLength } from \"../../../config/validatorLengths\";\n\nconst InputLocation = (props) => {\n  const [predictions, setPredictions] = useState([]);\n\n  const getLocationPredictions = async (value) => {\n    try {\n      const {\n        data: { predictions, success },\n      } = await axios.get(`/api/services/location_suggestions`, {\n        params: { value },\n      });\n      if (success) {\n        setPredictions(predictions);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {}\n  };\n\n  const parse = (value) => {\n    if (value.length > 0) {\n      getLocationPredictions(value, \"location\");\n    } else {\n      setPredictions([]);\n      setTimeout(() => setPredictions([]), 200);\n    }\n    return value;\n  };\n\n  const handleLocationSuggestionClick = (value) => {\n    props.setLocation(value, \"location\");\n    setPredictions([]);\n  };\n\n  const getValidation = () => {\n    if (props.homeSearch) {\n      return false;\n    } else {\n      return (value, allValues, meta) =>\n        validLength(value, meta.name, createValidatorLength(locationLength));\n    }\n  };\n\n  return (\n    <Field\n      name=\"location\"\n      component={InputLocationSuggestions}\n      homeSearch={props.homeSearch}\n      label={props.label}\n      parse={parse}\n      validate={getValidation()}\n      predictions={predictions}\n      handleLocationSuggestionClick={handleLocationSuggestionClick}\n    />\n  );\n};\n\nexport default InputLocation;\n","import styled from \"styled-components\";\nimport is from \"styled-is\";\n\nexport const TextGridContainer = styled.div`\n  display: grid;\n  grid-row-gap: 4rem;\n`;\n\nexport const TextGridLabel = styled.div`\n  margin-bottom: 1rem;\n  font-family: \"Bold\";\n`;\n\nexport const GreyText = styled.div`\n  color: grey;\n`;\n\nexport const StandardParagraph = styled.p`\n  line-height: 2.6rem;\n`;\n\nexport const LineSpaceText = styled.div`\n  white-space: pre-line;\n`;\n\nexport const BoldText = styled.div`\n  font-family: \"Bold\";\n\n  ${is(\"clickable\")`\n    cursor: pointer;\n  `}\n`;\n\nexport const CenteredHeading = styled.h1`\n  text-align: center;\n  font-size: 3.4rem;\n  margin-bottom: 5rem;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextGridContainer, TextGridLabel } from \"../../text/text\";\nimport nestedProperty from \"nested-property\";\n\nconst TransitContainer = styled.div`\n  display: grid;\n  grid-row-gap: 1rem;\n`;\n\nconst CreatePostSummary = ({ values }) => {\n  return (\n    <TextGridContainer>\n      <div>\n        <TextGridLabel>Title</TextGridLabel>\n        <div>{values.title}</div>\n      </div>\n      <div>\n        <TextGridLabel>Description</TextGridLabel>\n        <div>{values.description}</div>\n      </div>\n      <div>\n        <TextGridLabel>Space</TextGridLabel>\n        <div>\n          {nestedProperty.get(values, \"space.min\")} sqft to{\" \"}\n          {nestedProperty.get(values, \"space.max\")} sqft\n        </div>\n      </div>\n      <div>\n        <TextGridLabel>Cost</TextGridLabel>\n        <div>\n          ${nestedProperty.get(values, \"cost.min\")} per month to $\n          {nestedProperty.get(values, \"cost.max\")} per month\n        </div>\n      </div>\n      <div>\n        <TextGridLabel>Location</TextGridLabel>\n        <div>{values.location}</div>\n      </div>\n      <div>\n        <TextGridLabel>Type</TextGridLabel>\n        <div>{values.type}</div>\n      </div>\n      <div>\n        <TextGridLabel>Transit Options</TextGridLabel>\n        <TransitContainer>\n          {values.transit &&\n            values.transit.map((transitItem, index) => (\n              <div key={index}>{transitItem}</div>\n            ))}\n        </TransitContainer>\n      </div>\n    </TextGridContainer>\n  );\n};\n\nexport default CreatePostSummary;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport is from \"styled-is\";\n\nconst CheckBoxContainer = styled.div`\n  display: inline-block;\n`;\nconst CheckBoxTag = styled.input`\n  position: absolute;\n  opacity: 0;\n\n  & + label {\n    position: relative;\n    cursor: pointer;\n    padding: 0;\n  }\n\n  & + label:before {\n    content: \"\";\n    margin-right: 10px;\n    display: inline-block;\n    vertical-align: text-top;\n    width: 20px;\n    height: 20px;\n    background: var(--background-color);\n\n    ${is(\"whiteInput\")`\n      background: white;\n    `};\n  }\n\n  &:checked + label:before {\n    background: var(--primary-color);\n  }\n\n  &:checked + label:after {\n    content: \"\";\n    position: absolute;\n    left: 5px;\n    top: 9px;\n    background: white;\n    width: 2px;\n    height: 2px;\n    box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white,\n      4px -6px 0 white, 4px -8px 0 white;\n    transform: rotate(45deg);\n  }\n`;\n\nconst CheckBoxInput = (props) => (\n  <CheckBoxContainer onClick={props.handleToggle}>\n    <CheckBoxTag\n      whiteInput={props.whiteInput}\n      type={props.type}\n      {...props.input}\n    />\n    <label htmlFor={props.name}> {props.label} </label>\n  </CheckBoxContainer>\n);\n\nexport default CheckBoxInput;\n","import React from 'react'\nimport {Field} from 'react-final-form'\nimport CheckBoxInput from \"./CheckBox\"\nimport InputLabel from \"./InputLabel\"\nimport styled from \"styled-components\"\nimport {notBlank} from \"../../services/validators/validators\";\n\nconst CheckBoxContainerOuterContainer = styled.div`\n  &:not(:last-child) { \n    margin-bottom: 1.2rem;\n  }\n`\n\nconst InputOptions = props => (\n    <div>\n        <InputLabel for={props.name}\n                    label={props.label}/>\n\n        {props.options.map((value, index) => (\n            <CheckBoxContainerOuterContainer key={index}>\n                <Field name={props.name}\n                       label={value}\n                       type={props.type}\n                       value={value}\n                       whiteInput={props.whiteInput}\n                       validate={props.type === \"radio\" ? notBlank : false}\n                       handleToggle={() => props.type === \"radio\" ? props.setValue(value, props.name, props.allowNull) : props.toggleCheckMark(value, props.name)}\n                       component={CheckBoxInput}\n                />\n            </CheckBoxContainerOuterContainer>\n        ))}\n    </div>\n)\n\n\nexport default InputOptions","import {\n  CREATE_POST_ACTIVE_NAV,\n  CURRENT_PAGE_IS_VALID,\n  LOADING,\n  FORM_TYPE,\n  EDIT_POST_ID,\n} from \"../constants/create_post_action_types\";\n\nexport const activeNavIndex = (activeNavIndex) => ({\n  type: CREATE_POST_ACTIVE_NAV,\n  activeNavIndex,\n});\n\nexport const currentPageIsValid = (currentPageIsValid) => ({\n  type: CURRENT_PAGE_IS_VALID,\n  currentPageIsValid,\n});\n\nexport const loading = (loading) => ({\n  type: LOADING,\n  loading,\n});\n\nexport const formType = (formType) => ({\n  type: FORM_TYPE,\n  formType,\n});\n\nexport const editPostId = (editPostId) => ({\n  type: EDIT_POST_ID,\n  editPostId,\n});\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { createPostNavTitles } from \"../../../config/constants\";\n\nimport HollowButton from \"../../buttons/HollowButton\";\nimport { FlexContainer } from \"../../containers/container\";\nimport FilledButton from \"../../buttons/FilledButton\";\nimport { activeNavIndex } from \"../../../redux/actions/create_post_actions\";\nimport { getAuthHeader } from \"../../../services/auth_header_services\";\nimport InputError from \"../../inputs/InputError\";\nimport { InputBox } from \"../../containers/container\";\n\nconst CreatePostButtons = (props) => {\n  const history = useHistory();\n  const navLength = createPostNavTitles.length - 1;\n\n  const handleBackButtonClick = () => {\n    props.activeNavIndexProp === 0\n      ? history.push(\"/\")\n      : props.activeNavIndex(props.activeNavIndexProp - 1);\n  };\n\n  return (\n    <InputBox>\n      <FlexContainer>\n        <HollowButton\n          buttonText=\"Back\"\n          rightMargin\n          onClick={handleBackButtonClick}\n        />\n        {props.activeNavIndexProp === navLength && (\n          <FilledButton\n            buttonText={\n              props.createPostType === \"edit\" ? \"Update Post\" : \"Create Post\"\n            }\n            rightSideLoading\n            loading={props.submitting}\n            type={\"submit\"}\n          />\n        )}\n        {props.activeNavIndexProp !== navLength && (\n          <FilledButton\n            buttonText=\"Continue\"\n            disabled={props.invalid}\n            disabledColor={props.invalid}\n            onClick={() => props.activeNavIndex(props.activeNavIndexProp + 1)}\n            type={\"button\"}\n          />\n        )}\n\n        <InputError error={props.error} />\n      </FlexContainer>\n    </InputBox>\n  );\n};\n\nconst mapStateToProps = ({ createPostState }) => ({\n  activeNavIndexProp: createPostState.activeNavIndex,\n  currentPageIsValid: createPostState.currentPageIsValid,\n  editPostId: createPostState.editPostId,\n});\n\nconst mapDispatchToProps = () => ({\n  activeNavIndex,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps()\n)(CreatePostButtons);\n","import axios from \"../../../../axios\";\nimport { getAuthHeader } from \"../../../../services/auth_header_services\";\nimport { FORM_ERROR } from \"final-form\";\n\nexport const handleSubmit = async (values, props, history) => {\n  try {\n    let response;\n\n    if (props.createPostType === \"create\") {\n      response = await axios.post(\"/posts/create\", values, getAuthHeader());\n    } else {\n      values.belongsToUser = values.belongsToUser.id;\n\n      response = await axios.patch(\n        `/posts/${props.postID}`,\n        values,\n        getAuthHeader()\n      );\n    }\n    const { data } = response;\n\n    if (data.success) {\n      history.push(\"/\");\n    } else {\n      throw new Error();\n    }\n  } catch (e) {\n    return { [FORM_ERROR]: \"Login Failed\" };\n  }\n};\n\nexport const getInitialValues = () => {\n  if (process.env.NODE_ENV === \"development\") {\n    return {\n      title: \"Test Title\",\n      description: \"This is a test description. This is a test description.\",\n      space: {\n        min: \"400\",\n        max: \"500\",\n      },\n      cost: {\n        min: \"400\",\n        max: \"500\",\n      },\n      location: \"This is a test\",\n      type: \"Office\",\n      transit: [\"Subway\"],\n    };\n  } else {\n    return {};\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../axios\";\nimport { Form, Field } from \"react-final-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Measure from \"react-measure\";\nimport { validLength } from \"../../../services/validators/validators\";\nimport TextInput from \"../../inputs/TextInput\";\nimport TextArea from \"../../inputs/TextArea\";\nimport InputRange from \"../../inputs/InputRange\";\nimport InputLocation from \"../../inputs/location/InputLocation\";\nimport CreatePostSummary from \"./CreatePostSummary\";\nimport { InputBox } from \"../../containers/container\";\nimport InputOptions from \"../../inputs/InputOptions\";\nimport { transitOptions, typeOptions } from \"../../../config/constants\";\nimport nestedProperty from \"nested-property\";\nimport {\n  postTitleLength,\n  postDescriptionLength,\n} from \"../../../config/validatorLengths\";\nimport CreatePostButtons from \"./CreatePostButtons\";\nimport { createValidatorLength } from \"../../../services/validators/validator_helpers\";\nimport { handleSubmit } from \"./helpers/create_post_helpers\";\nimport { getInitialValues } from \"./helpers/create_post_helpers\";\nimport { setValue, toggleCheckMark } from \"../../forms/form_helpers\";\n\nconst CreatePostInput = (props) => {\n  const [initialValues, setInitialValues] = useState({});\n  const [buttonHeight, setButtonHeight] = useState({});\n  const history = useHistory();\n\n  const { activeNavIndex, editPostId } = useSelector(\n    ({ createPostState }) => createPostState\n  );\n\n  const navbarHeight = useSelector(\n    ({ navbarState }) => navbarState.navbarHeight\n  );\n\n  const getPost = async () => {\n    try {\n      const { data } = await axios.get(`/posts/${props.postID}`);\n      if (data) {\n        setInitialValues(data.post);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    if (props.createPostType) {\n      getPost();\n    } else {\n      setInitialValues(getInitialValues());\n    }\n  }, []);\n\n  return (\n    <Form\n      onSubmit={(values) => handleSubmit(values, props, history)}\n      mutators={{ setValue, toggleCheckMark }}\n      initialValues={initialValues}\n      render={(formProps) => (\n        <form onSubmit={formProps.handleSubmit}>\n          <InputBox\n            borderBottom\n            mobileScroll\n            customMobileSize\n            height={`calc(100vh - var(--vh-offset, 0px) - ${buttonHeight}px - ${navbarHeight}px - ${props.headingHeight}px - 4rem)`}\n          >\n            {activeNavIndex === 0 && (\n              <Field\n                name=\"title\"\n                component={TextInput}\n                validate={(value, allValues, meta) =>\n                  validLength(\n                    value,\n                    meta.name,\n                    createValidatorLength(postTitleLength)\n                  )\n                }\n                label=\"Choose a title for your post\"\n              />\n            )}\n\n            {activeNavIndex === 1 && (\n              <Field\n                name=\"description\"\n                component={TextArea}\n                validate={(value, allValues, meta) =>\n                  validLength(\n                    value,\n                    meta.name,\n                    createValidatorLength(postDescriptionLength)\n                  )\n                }\n                label=\"Choose a description for your post\"\n              />\n            )}\n\n            {activeNavIndex === 2 && (\n              <InputRange\n                label=\"Choose range of space you need\"\n                inputLabel=\"sqft\"\n                name=\"space\"\n                invalid={formProps.invalid}\n                error={nestedProperty.get(formProps.errors, \"space.min\")}\n                touched={\n                  formProps.touched[\"space.min\"] &&\n                  formProps.touched[\"space.max\"]\n                }\n                validation\n              />\n            )}\n\n            {activeNavIndex === 3 && (\n              <InputRange\n                label=\"Choose the price per square foot range you would like\"\n                inputLabel=\"$/mo\"\n                name=\"cost\"\n                invalid={formProps.invalid}\n                validation\n                touched={\n                  formProps.touched[\"space.min\"] &&\n                  formProps.touched[\"space.max\"]\n                }\n                error={nestedProperty.get(formProps.errors, \"space.min\")}\n              />\n            )}\n\n            {activeNavIndex === 4 && (\n              <InputLocation\n                label=\"Choose the location of the property you would like\"\n                setLocation={formProps.form.mutators.setValue}\n              />\n            )}\n\n            {activeNavIndex === 5 && (\n              <InputOptions\n                label=\"Choose the type of space you need\"\n                options={typeOptions}\n                type=\"radio\"\n                setValue={formProps.form.mutators.setValue}\n                name=\"type\"\n              />\n            )}\n\n            {activeNavIndex === 6 && (\n              <InputOptions\n                label=\"Optionally choose any transit options you need\"\n                options={transitOptions}\n                type=\"checkbox\"\n                toggleCheckMark={formProps.form.mutators.toggleCheckMark}\n                name=\"transit\"\n              />\n            )}\n\n            {activeNavIndex === 7 && (\n              <CreatePostSummary values={formProps.values} />\n            )}\n          </InputBox>\n\n          <Measure\n            bounds\n            onResize={(contentRect) => {\n              setButtonHeight(contentRect.bounds.height);\n            }}\n          >\n            {({ measureRef }) => (\n              <div ref={measureRef}>\n                <CreatePostButtons\n                  createPostType={props.createPostType}\n                  submitting={formProps.submitting}\n                  invalid={formProps.invalid}\n                />\n              </div>\n            )}\n          </Measure>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default CreatePostInput;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  LoadingBackground,\n  LoadingContainer,\n  LoadingIcon,\n  LoadingText,\n} from \"./loading_styles\";\nimport { Center } from \"../alignment/Center\";\n\nconst Loading = (props) => {\n  const navbarHeight = useSelector(\n    ({ navbarState: { navbarHeight } }) => navbarHeight\n  );\n\n  return (\n    <Center navbarHeight={navbarHeight} vertical fillPage={props.fillPage}>\n      <LoadingBackground\n        fixed={props.fixed}\n        solidBackground={props.solidBackground}\n        clearBackground={props.clearBackground}\n      >\n        <LoadingContainer>\n          <LoadingIcon\n            fillPage={props.fillPage}\n            marginBottom={props.marginBottom}\n            navbarHeight={navbarHeight}\n          />\n          {props.loadingText && <LoadingText>{props.loadingText}</LoadingText>}\n        </LoadingContainer>\n      </LoadingBackground>\n    </Center>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Center } from \"../alignment/Center\";\nimport { InputBox } from \"./container\";\n\nconst FullScreenBox = (props) => {\n  const navbarHeight = useSelector(\n    ({ navbarState: { navbarHeight } }) => navbarHeight\n  );\n\n  return (\n    <Center navbarHeight={navbarHeight} vertical fillPage>\n      <InputBox\n        center\n        clearBackground={props.clearBackground}\n        customSize\n        width=\"40%\"\n        navbarBottomMargin\n        navbarHeight={navbarHeight}\n      >\n        <Center textCenter>{props.children}</Center>\n      </InputBox>\n    </Center>\n  );\n};\n\nexport default FullScreenBox;\n","import React, { useState } from \"react\";\nimport { NoticeHeading, NoticeText } from \"./notice_styles\";\nimport FilledButton from \"../buttons/FilledButton\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"../../axios\";\nimport { getAuthHeaderWithData } from \"../../services/auth_header_services\";\nimport FullScreenBox from \"../containers/FullScreenBox\";\n\nconst VerifyEmailNotice = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [emailVerificationSent, setEmailVerificationSent] = useState(false);\n  const [emailVerificationHeading, setEmailVerificationHeading] = useState(\"\");\n  const [emailVerificationText, setEmailVerificationText] = useState(\"\");\n\n  const sendVerificationEmail = async () => {\n    let heading = \"\";\n    let text = \"\";\n    try {\n      setLoading(false);\n      const {\n        data: { success },\n      } = await axios.get(\n        \"/users/send_verify_account_email\",\n        getAuthHeaderWithData({ hideToken: true })\n      );\n\n      if (success) {\n        heading = \"Email Verification Link Sent\";\n        text = `We've sent you a new link to verify your email. Please check your spam folder and ensure your account email is current if you do not receive this email.`;\n      } else {\n        throw new Error();\n      }\n    } catch {\n      heading = \"Something Went Wrong\";\n      text = `We were unable to send your email verification link. Please try again later.`;\n    } finally {\n      setLoading(false);\n      setEmailVerificationSent(true);\n      setEmailVerificationHeading(heading);\n      setEmailVerificationText(text);\n    }\n  };\n\n  return (\n    <FullScreenBox>\n      {!emailVerificationSent && (\n        <div>\n          {loading && <Loading />}\n          <NoticeHeading>Email Verification Required</NoticeHeading>\n          <NoticeText smallBottomSpace>\n            {\" \"}\n            {props.text} To verify your email, please click use the verification\n            link we emailed you when you created your account. If you no longer\n            have access to this email, you can send it again by clicking the\n            button below.{\" \"}\n          </NoticeText>\n          <FilledButton\n            buttonText=\"Resend Verification Email\"\n            onClick={sendVerificationEmail}\n          />\n        </div>\n      )}\n\n      {emailVerificationSent && (\n        <div>\n          <NoticeHeading>{emailVerificationHeading}</NoticeHeading>\n          <NoticeText noBottomMargin>{emailVerificationText}</NoticeText>\n        </div>\n      )}\n    </FullScreenBox>\n  );\n};\n\nexport default VerifyEmailNotice;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../axios\";\nimport { StandardContainer, ContentSection } from \"../../containers/container\";\nimport CreatePostNavItems from \"./CreatePostNavItems\";\nimport ViewBoxHeading from \"../../headings/ViewBoxHeading\";\nimport CreatePostInput from \"../create_post/CreatePostInput\";\nimport { SideNavContainer } from \"../../containers/container\";\nimport { formType } from \"../../../redux/actions/create_post_actions\";\nimport VerifyEmailNotice from \"../../notices/VerifyEmailNotice\";\nimport Media from \"react-media\";\nimport { tabLandUp } from \"../../media/media_helpers\";\nimport CreatePostButtons from \"./CreatePostButtons\";\nimport Measure from \"react-measure\";\n\nconst CreatePost = (props) => {\n  const [createPostType, setCreatePostType] = useState(\"\");\n  const [headingHeight, setHeadingHeight] = useState({});\n  const [postID, setPostID] = useState(\"\");\n  useEffect(() => {\n    setCreatePostType(props.formTypeProp);\n    if (props.params) {\n      setPostID(props.params.match.params.id);\n    }\n  }, []);\n\n  return (\n    <div>\n      <StandardContainer>\n        {props.emailVerified && (\n          <SideNavContainer>\n            <Media query={tabLandUp}>\n              {(matches) => matches && <CreatePostNavItems />}\n            </Media>\n\n            <ContentSection>\n              <div>\n                <Measure\n                  bounds\n                  onResize={(contentRect) => {\n                    setHeadingHeight(contentRect.bounds.height);\n                  }}\n                >\n                  {({ measureRef }) => (\n                    <div ref={measureRef}>\n                      <ViewBoxHeading heading={props.title} />\n                    </div>\n                  )}\n                </Measure>\n\n                <CreatePostInput\n                  createPostType={props.formTypeProp}\n                  headingHeight={headingHeight}\n                  postID={postID}\n                />\n              </div>\n            </ContentSection>\n          </SideNavContainer>\n        )}\n      </StandardContainer>\n\n      {!props.emailVerified && (\n        <VerifyEmailNotice text=\"Please verify your email to create a new post.\" />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ userState }) => ({\n  emailVerified: userState.emailVerified,\n});\n\nexport default connect(mapStateToProps, { formType })(CreatePost);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SettingsCheckMarkImage from \"../../../assets/settings_check.svg\";\nimport SettingsInactiveImage from \"../../../assets/icons/off.svg\";\n\nconst SettingsCheckMark = styled.img`\n  width: 2.2rem;\n  margin-right: 1.2rem;\n`;\n\nconst SettingsCheckMarkContainer = styled.div`\n  display: flex;\n  align-items: start;\n`;\n\nconst SettingsToggleHeading = styled.span`\n  font-family: \"Bold\";\n`;\n\nconst SettingToggleTextContainer = styled.div`\n  padding-top: 1px;\n`;\n\nconst SettingsToggleText = styled.div`\n  margin-top: 0.4rem;\n`;\n\nconst SettingsNotice = (props) => {\n  return (\n    <SettingsCheckMarkContainer>\n      <SettingsCheckMark\n        alt=\"settings security check mark\"\n        src={props.active ? SettingsCheckMarkImage : SettingsInactiveImage}\n      />\n      <SettingToggleTextContainer>\n        <SettingsToggleHeading>{props.title}</SettingsToggleHeading>\n        <SettingsToggleText>{props.details}</SettingsToggleText>\n      </SettingToggleTextContainer>\n    </SettingsCheckMarkContainer>\n  );\n};\n\nexport default SettingsNotice;\n","import React from \"react\";\nimport { InputBox } from \"../../containers/container\";\nimport CheckMark from \"../../../assets/settings_check.svg\";\nimport styled from \"styled-components\";\nimport anime from \"animejs\";\n\nconst ProfileUpdatedNotice = styled.div`\n  font-size: 1.4rem;\n`;\n\nconst ProfileUpdatedCheckMark = styled.img`\n  width: 2rem;\n  margin-right: 0.8rem;\n`;\n\nconst ProfileUpdatedContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst UpdateSuccessful = (props) => {\n  const animationRef = React.createRef();\n\n  const handleImageLoaded = () => {\n    const nodeHeight = animationRef.current.offsetHeight;\n    anime({\n      targets: animationRef.current,\n      easing: \"easeOutCubic\",\n      translateY: [\n        { value: -nodeHeight, duration: 0, delay: 0 },\n        { value: 0, duration: 1000, delay: 400 },\n      ],\n    });\n  };\n\n  return (\n    <InputBox belowSiblings ref={animationRef} borderTop>\n      <ProfileUpdatedContainer>\n        <ProfileUpdatedCheckMark\n          onLoad={handleImageLoaded}\n          src={CheckMark}\n          alt={\"Update successful\"}\n        />\n        <ProfileUpdatedNotice>{props.message}</ProfileUpdatedNotice>\n      </ProfileUpdatedContainer>\n    </InputBox>\n  );\n};\n\nexport default UpdateSuccessful;\n","import React from \"react\";\nimport { InputBox } from \"../../../containers/container\";\nimport SettingsNotice from \"../SettingsNotice\";\nimport UpdateSuccessful from \"../UpdateSuccessful\";\nimport { connect } from \"react-redux\";\n\nconst SettingsSecurityInfo = (props) => {\n  const messageText = props.passwordSet\n    ? \"Your password has been set\"\n    : \"Your password has not been set\";\n\n  return (\n    <div>\n      <InputBox borderBottom>\n        <SettingsNotice\n          title=\"Password\"\n          active={props.passwordSet}\n          details={messageText}\n        />\n      </InputBox>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ userState }) => ({\n  passwordSet: userState.passwordSet,\n});\n\nexport default connect(mapStateToProps)(SettingsSecurityInfo);\n","import styled from \"styled-components\";\n\nexport const RelativeForm = styled.form`\n  position: relative;\n`;\n","import { SETTINGS_EDIT_COMPLETE } from \"../constants/settings_action_types\";\n\nexport const settingsEditComplete = (settingsEditComplete) => ({\n  type: SETTINGS_EDIT_COMPLETE,\n  settingsEditComplete,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport InputError from \"../../inputs/InputError\";\nimport HollowButton from \"../../buttons/HollowButton\";\nimport FilledButton from \"../../buttons/FilledButton\";\nimport { SubmitErrorContainer } from \"../../login_signup/styles/login_sign_up_styles\";\nimport { InputBox } from \"../../containers/container\";\nimport { settingsEditComplete } from \"../../../redux/actions/settings_actions\";\nimport { FlexContainer } from \"../../containers/container\";\n\nconst SettingsSubmitButtons = (props) => {\n  const cancelEdit = () => {\n    props.setEditActive(false);\n  };\n\n  return (\n    <InputBox>\n      <FlexContainer>\n        <HollowButton buttonText=\"Cancel\" rightMargin onClick={cancelEdit} />\n        <FilledButton buttonText=\"Submit\" type=\"submit\" />\n      </FlexContainer>\n      {props.error && (\n        <SubmitErrorContainer>\n          <InputError error={props.error} />\n        </SubmitErrorContainer>\n      )}\n    </InputBox>\n  );\n};\n\nconst mapDispatchToProps = () => ({\n  settingsEditComplete,\n});\n\nexport default connect(null, mapDispatchToProps())(SettingsSubmitButtons);\n","import axios from \"../../../axios\";\nimport { FORM_ERROR } from \"final-form\";\nimport { getAuthHeader } from \"../../../services/auth_header_services\";\n\nexport const handleSettingsSubmit = async (values, props, options = {}) => {\n  try {\n    const {\n      data: { success, error },\n    } = await axios.patch(options.url, values, getAuthHeader());\n    if (success) {\n      props.setEditCompleteText(options.editCompleteText);\n      props.setEditActive(false);\n      await props.getUpdatedUserData();\n    } else {\n      return { [FORM_ERROR]: error };\n    }\n  } catch (e) {\n    return { [FORM_ERROR]: \"Something went wrong\" };\n  }\n};\n","import styled from \"styled-components\";\n\nexport const PasswordResetFieldContainer = styled.div`\n  display: grid;\n  grid-row-gap: 2rem;\n  width: 50%;\n`\n\n\n","import React from \"react\";\nimport { InputBox } from \"../../../containers/container\";\nimport { Form, Field } from \"react-final-form\";\nimport TextInput from \"../../../inputs/TextInput\";\nimport { RelativeForm } from \"../../../forms/form_styles\";\nimport SubmitButtons from \"../SettingsSubmitButtons\";\nimport Loading from \"../../../loading/Loading\";\nimport { connect } from \"react-redux\";\nimport {\n  passwordConfirm,\n  validLength,\n} from \"../../../../services/validators/validators\";\nimport { handleSettingsSubmit } from \"../settings_helpers\";\nimport { createValidatorLength } from \"../../../../services/validators/validator_helpers\";\nimport { passwordLength } from \"../../../../config/validatorLengths\";\nimport { PasswordResetFieldContainer } from \"./styles/settings_security_styles\";\n\nconst SettingsSecurityEdit = (props) => {\n  const submitOptions = {\n    url: \"/users/password\",\n    editCompleteText: `Your password has been updated`,\n  };\n\n  let initialValues = {};\n\n  if (process.env.NODE_ENV === \"development\") {\n    initialValues.currentPassword = \"password1\";\n    initialValues.newPassword = \"password2\";\n    initialValues.passwordConfirm = \"password2\";\n  }\n\n  return (\n    <Form\n      onSubmit={(values) => handleSettingsSubmit(values, props, submitOptions)}\n      initialValues={initialValues}\n      render={({ handleSubmit, submitting, submitError }) => (\n        <RelativeForm onSubmit={handleSubmit}>\n          <InputBox borderBottom={true}>\n            <PasswordResetFieldContainer>\n              {props.passwordSet && (\n                <Field\n                  name=\"currentPassword\"\n                  component={TextInput}\n                  type=\"password\"\n                  label=\"Current Password\"\n                />\n              )}\n\n              <Field\n                name=\"newPassword\"\n                component={TextInput}\n                validate={(value, allValues, meta) =>\n                  validLength(\n                    value,\n                    meta.name,\n                    createValidatorLength(passwordLength)\n                  )\n                }\n                label=\"New Password\"\n                type=\"password\"\n              />\n\n              <Field\n                name=\"passwordConfirm\"\n                component={TextInput}\n                type=\"password\"\n                validate={(value, allValues) =>\n                  passwordConfirm(value, allValues, {\n                    currentPassword: \"newPassword\",\n                    passwordConfirm: \"passwordConfirm\",\n                  })\n                }\n                label=\"Confirm New Password\"\n              />\n            </PasswordResetFieldContainer>\n          </InputBox>\n          <SubmitButtons\n            setEditActive={props.setEditActive}\n            error={submitError}\n          />\n        </RelativeForm>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = ({ userState }) => ({\n  passwordSet: userState.passwordSet,\n});\n\nexport default connect(mapStateToProps)(SettingsSecurityEdit);\n","import styled from \"styled-components\"\n\nexport const SettingsFieldContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-row-gap: 4rem;\n  grid-column-gap: 4rem;\n`","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Field } from \"react-final-form\";\n\nimport TextInput from \"../../../inputs/TextInput\";\nimport TextArea from \"../../../inputs/TextArea\";\nimport { InputBox } from \"../../../containers/container\";\nimport { SettingsFieldContainer } from \"../styles/settings_styles\";\nimport { RelativeForm } from \"../../../forms/form_styles\";\nimport SettingsSubmitButtons from \"../SettingsSubmitButtons\";\nimport { connect } from \"react-redux\";\nimport {\n  validLength,\n  validEmail,\n} from \"../../../../services/validators/validators\";\nimport { createValidatorLength } from \"../../../../services/validators/validator_helpers\";\nimport {\n  nameLength,\n  jobTitleLength,\n  bioLength,\n} from \"../../../../config/validatorLengths\";\nimport Loading from \"../../../loading/Loading\";\nimport { handleSettingsSubmit } from \"../settings_helpers\";\n\nconst SettingBioField = styled.div`\n  grid-column: 1/3;\n`;\n\nconst SettingsInfoEdit = (props) => {\n  const { name, email, jobTitle, bio } = props.userState;\n\n  const initialTestValues = {\n    name,\n    email,\n    jobTitle,\n    bio,\n  };\n\n  const submitOptions = {\n    url: \"/users/user_info\",\n    editCompleteText: `You're profile has been updated`,\n  };\n\n  return (\n    <Form\n      onSubmit={(values) => handleSettingsSubmit(values, props, submitOptions)}\n      initialValues={initialTestValues}\n      render={({ handleSubmit, submitting, submitError }) => (\n        <RelativeForm onSubmit={handleSubmit}>\n          {submitting && <Loading />}\n          <InputBox borderBottom={true}>\n            <SettingsFieldContainer>\n              <Field\n                name=\"name\"\n                component={TextInput}\n                validate={(value, allValues, meta) =>\n                  validLength(\n                    value,\n                    meta.name,\n                    createValidatorLength(nameLength)\n                  )\n                }\n                label=\"Name\"\n              />\n\n              <Field\n                name=\"email\"\n                component={TextInput}\n                validate={validEmail}\n                label=\"Email\"\n                type=\"email\"\n              />\n\n              <Field\n                name=\"jobTitle\"\n                component={TextInput}\n                validate={(value, allValues, meta) =>\n                  validLength(\n                    value,\n                    meta.name,\n                    createValidatorLength(jobTitleLength, { allowBlank: true })\n                  )\n                }\n                label=\"Job Title\"\n              />\n\n              <SettingBioField>\n                <Field\n                  name=\"bio\"\n                  component={TextArea}\n                  validate={(value, allValues, meta) =>\n                    validLength(\n                      value,\n                      meta.name,\n                      createValidatorLength(bioLength, { allowBlank: true })\n                    )\n                  }\n                  label=\"Bio\"\n                />\n              </SettingBioField>\n            </SettingsFieldContainer>\n          </InputBox>\n          <SettingsSubmitButtons\n            setEditActive={props.setEditActive}\n            error={submitError}\n          />\n        </RelativeForm>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = ({ userState }) => ({\n  userState,\n});\n\nexport default connect(mapStateToProps)(SettingsInfoEdit);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport SettingsSecurityInfo from \"./SettingsSecurityInfo\";\nimport SettingsSecurityEdit from \"./SettingsSecurityEdit\";\nimport SettingsInfoEdit from \"../settings_info/SettingsInfoEdit\";\n\nconst SettingsSecurity = (props) => {\n  return (\n    <div>\n      {!props.editActive && <SettingsSecurityInfo />}\n      {props.editActive && (\n        <SettingsSecurityEdit\n          getUpdatedUserData={props.getUpdatedUserData}\n          setEditActive={props.setEditActive}\n          setEditCompleteText={props.setEditCompleteText}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SettingsSecurity;\n","import React from \"react\";\nimport { SideNavItemContainer } from \"../../page_nav/sideNav\";\n\nconst SettingsNav = (props) => {\n  const handleNavClick = (index) => {\n    props.setActiveIndex(index);\n    props.setEditActive(false);\n  };\n\n  return (\n    <div>\n      {props.navTitles.map((title, index) => (\n        <SideNavItemContainer\n          active={props.activeIndex === index}\n          key={title}\n          clickable={true}\n          hoverable={props.activeIndex !== index}\n          onClick={() => handleNavClick(index)}\n        >\n          {title}\n        </SideNavItemContainer>\n      ))}\n    </div>\n  );\n};\n\nexport default SettingsNav;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport edit from \"../../assets/icons/edit.svg\";\nimport { connect } from \"react-redux\";\n\nconst IconHeadingContainer = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  border-bottom: var(--box-border);\n  background-color: white;\n  position: relative;\n  text-align: center;\n`;\n\nconst Icon = styled.img`\n  width: 1.8rem;\n`;\n\nconst Heading = styled.h1`\n  font-size: 1.8rem;\n`;\n\nconst IconContainer = styled.div`\n  position: absolute;\n  right: 2.4rem;\n  padding: 1rem;\n  background-color: #fafafa;\n  border-radius: 100px;\n  box-shadow: 0 1px 6px rgba(57, 73, 76, 0.35);\n  transition: box-shadow 0.2s linear;\n  cursor: pointer;\n  top: 21px;\n\n  &:hover {\n    box-shadow: 0 2px 10px 1px rgba(57, 73, 76, 0.4),\n      0 1px 2px rgba(57, 73, 76, 0.25);\n  }\n`;\n\nconst IconHeadingBox = (props) => {\n  return (\n    <IconHeadingContainer>\n      <Heading> {props.heading} </Heading>\n      {props.activeIndex !== 3 && (\n        <IconContainer onClick={props.handleClick}>\n          <Icon alt=\"edit button\" src={props.editIcon} />\n        </IconContainer>\n      )}\n    </IconHeadingContainer>\n  );\n};\n\nconst mapStateToProps = ({ assetState }) => ({\n  editIcon: assetState.SETTINGS_EDIT_ICON,\n});\n\nexport default connect(mapStateToProps)(IconHeadingBox);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport {\n  TextGridContainer,\n  TextGridLabel,\n  StandardParagraph,\n} from \"../../../text/text\";\nimport { InputBox } from \"../../../containers/container\";\nimport UpdateSuccessful from \"../UpdateSuccessful\";\nimport { settingsEditComplete } from \"../../../../redux/actions/settings_actions\";\n\nconst InfoNote = styled.div`\n  margin-top: 1rem;\n  font-size: 1.3rem;\n  color: grey;\n`;\n\nconst SettingsInfoShow = (props) => {\n  return (\n    <div>\n      <InputBox borderBottom>\n        <TextGridContainer>\n          <div>\n            <TextGridLabel>Name</TextGridLabel>\n            <div>{props.name}</div>\n          </div>\n          <div>\n            <TextGridLabel>Email</TextGridLabel>\n            <div>{props.email}</div>\n            <InfoNote>Your email is private</InfoNote>\n          </div>\n\n          {props.jobTitle && (\n            <div>\n              <TextGridLabel>Job Title</TextGridLabel>\n              <div>{props.jobTitle}</div>\n            </div>\n          )}\n\n          {props.bio && (\n            <div>\n              <TextGridLabel>Bio</TextGridLabel>\n              <StandardParagraph>{props.bio}</StandardParagraph>\n            </div>\n          )}\n        </TextGridContainer>\n      </InputBox>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ userState }) => ({\n  name: userState.name,\n  email: userState.email,\n  jobTitle: userState.jobTitle,\n  bio: userState.bio,\n});\n\nexport default connect(mapStateToProps)(SettingsInfoShow);\n","import last from \"array-last\";\n\nexport const handleFileChange = (\n  e,\n  results,\n  setImageArray,\n  setError,\n  options = {}\n) => {\n  const type = last(results)[1].type;\n  if (type === \"image/jpeg\" || type === \"image/png\") {\n    if (options.operation === \"add\") {\n      setImageArray([\n        ...options.attachedImages,\n        last(results)[0].target.result,\n      ]);\n    } else {\n      setImageArray(last(results)[0].target.result);\n    }\n  } else {\n    setError(\"Please upload a jpg or png image\");\n  }\n};\n","import styled from \"styled-components\"\n\nexport const ChooseProfilePictureContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 4rem;\n`\nexport const UploadButton = styled.div`\n  display: flex;\n  margin-top: 2rem;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const ProfilePictureHeading = styled.div`\n  font-size: 1.8rem;\n  font-family: \"Bold\";\n  margin-bottom: 3rem;\n`\n\nexport const Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const ProfileFormatted = styled.img`\n  width: 10rem;\n  height: 10rem;\n  border-radius: 100px;\n  margin-bottom: 3rem;\n`\n\nexport const CropNotice = styled.div`\n  font-size: 1.3rem;\n  text-align: center;\n  margin-top: .8rem;\n  color: #9a9a9a;\n`\n\nexport const SubmitButtonContainer = styled.div`\n  display: flex;\n`\n","import React, { useState, useEffect } from \"react\";\nimport imageDataURI from \"image-data-uri\";\nimport { useSelector } from \"react-redux\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport isUrl from \"is-url\";\nimport { handleFileChange } from \"../../../../../helpers/image_helpers\";\n\nimport {\n  CropNotice,\n  UploadButton,\n} from \"./styles/change_profile_picture_styles\";\nimport FilledButton from \"../../../../buttons/FilledButton\";\nimport InputError from \"../../../../inputs/InputError\";\nimport { getImageBlob } from \"./profile_image_preview_helper\";\nimport { Center } from \"../../../../alignment/Center\";\n\nlet imageRef = {};\n\nconst ChangeProfileImagePreview = (props) => {\n  const crop = {\n    unit: \"%\",\n    aspect: 1,\n  };\n\n  const profileImage = useSelector(\n    ({ userState: { profileImage } }) => profileImage\n  );\n\n  const [currentRawImage, setCurrentRawImage] = useState(\"\");\n  const [imageFileTypeError, setImageFileTypeError] = useState(\"\");\n  const [imageCrop, setImageCrop] = useState(crop);\n\n  useEffect(() => {\n    setCurrentRawImage(profileImage);\n  }, [profileImage]);\n\n  useEffect(() => {\n    if (currentRawImage) {\n      formatRawImage();\n    }\n  }, [currentRawImage]);\n\n  const onCropComplete = (crop) => {\n    if (crop.width !== 0) {\n      props.setCroppedImage(getImageBlob(imageRef, crop));\n    }\n  };\n\n  const formatRawImage = async () => {\n    if (isUrl(currentRawImage)) {\n      const imageAsUrl = await imageDataURI.encodeFromURL(currentRawImage);\n      setCurrentRawImage(imageAsUrl);\n    }\n  };\n\n  return (\n    <Center>\n      <ReactCrop\n        src={currentRawImage}\n        onChange={(crop) => setImageCrop(crop)}\n        onComplete={onCropComplete}\n        onImageLoaded={(image) => (imageRef = image)}\n        crop={imageCrop}\n      />\n      <Center mtAuto>\n        <CropNotice> Drag to choose the crop area </CropNotice>\n        <UploadButton>\n          <FileReaderInput\n            as=\"url\"\n            id=\"fileReader\"\n            onChange={(e, results) =>\n              handleFileChange(\n                e,\n                results,\n                setCurrentRawImage,\n                setImageFileTypeError\n              )\n            }\n          >\n            <FilledButton buttonText=\"Upload\" />\n          </FileReaderInput>\n          <InputError error={imageFileTypeError} />\n        </UploadButton>\n      </Center>\n    </Center>\n  );\n};\n\nexport default ChangeProfileImagePreview;\n","export const getImageBlob = (image, crop) => {\n  const canvas = document.createElement(\"canvas\");\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width * scaleX;\n  canvas.height = crop.height * scaleY;\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.drawImage(\n    image,\n    crop.x * scaleX,\n    crop.y * scaleY,\n    crop.width * scaleX,\n    crop.height * scaleY,\n    0,\n    0,\n    crop.width * scaleX,\n    crop.height * scaleY\n  );\n\n  return canvas.toDataURL(\"image/jpeg\");\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Center,\n  ProfileFormatted,\n  ProfilePictureHeading,\n  SubmitButtonContainer,\n} from \"./styles/change_profile_picture_styles\";\n\nimport HollowButton from \"../../../../buttons/HollowButton\";\nimport FilledButton from \"../../../../buttons/FilledButton\";\nimport {\n  compressImage,\n  uploadCompressedImage,\n} from \"./profile_image_submit_helpers\";\nimport InputError from \"../../../../inputs/InputError\";\nimport { profileImageChanged } from \"../../../../../redux/actions/user_actions\";\n\nconst ChangeProfileImageSubmit = (props) => {\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState(\"\");\n  const currentProfileImage = useSelector(\n    ({ userState: { profileImage } }) => profileImage\n  );\n  const profileImageChangedCurrentValue = useSelector(\n    ({ userState: { profileImageChanged } }) => profileImageChanged\n  );\n\n  const handleSubmit = async () => {\n    try {\n      props.setLoading(true);\n      const compressedImage = await compressImage(props.croppedImage);\n      await uploadCompressedImage(compressedImage);\n      dispatch(profileImageChanged(profileImageChangedCurrentValue + 1));\n      props.closeEditProfilePicture();\n      props.showProfileUpdatedNotice();\n    } catch (e) {\n      setError(\"Something went wrong\");\n    } finally {\n      props.setLoading(false);\n    }\n  };\n\n  return (\n    <Center>\n      <ProfilePictureHeading>Your Profile Picture</ProfilePictureHeading>\n      <ProfileFormatted\n        src={props.croppedImage ? props.croppedImage : currentProfileImage}\n        alt=\"Formatted profile picture\"\n      />\n      <SubmitButtonContainer>\n        <HollowButton\n          buttonText=\"Cancel\"\n          rightMargin\n          onClick={props.closeEditProfilePicture}\n        />\n        <FilledButton\n          type=\"submit\"\n          buttonText=\"Submit\"\n          disabled={!props.croppedImage}\n          onClick={handleSubmit}\n        />\n      </SubmitButtonContainer>\n      <InputError error={error} />\n    </Center>\n  );\n};\n\nexport default ChangeProfileImageSubmit;\n","import axios from \"../../../../../axios\";\nimport Jimp from \"jimp\";\nimport { getAuthHeader } from \"../../../../../services/auth_header_services\";\n\nexport const uploadCompressedImage = async (compressedImage) => {\n  let {\n    data: { success, url },\n  } = await axios.get(\"/users/signed_url_profile_image\", getAuthHeader());\n  if (success) {\n    await axios.put(url, compressedImage, {\n      headers: { \"Content-Type\": Jimp.MIME_JPEG },\n    });\n  } else {\n    throw new Error();\n  }\n};\n\nexport const compressImage = async (imageData) => {\n  const imageRead = await Jimp.read(imageData);\n  return await imageRead\n    .resize(500, 500)\n    .quality(60)\n    .getBufferAsync(Jimp.MIME_JPEG);\n};\n","import React, { useState } from \"react\";\nimport ChangeProfileImagePreview from \"./ChangeProfileImagePreview\";\nimport ChangeProfileImageSubmit from \"./ChangeProfileImageSubmit\";\nimport Loading from \"../../../../loading/Loading\";\n\nimport { ChooseProfilePictureContainer } from \"./styles/change_profile_picture_styles\";\n\nconst ChangeProfileImage = (props) => {\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div>\n      {/* <Loading loading={loading} /> */}\n      <ChooseProfilePictureContainer>\n        <ChangeProfileImagePreview\n          setCroppedImage={setCroppedImage}\n          profileImage={props.profileImage}\n        />\n        <ChangeProfileImageSubmit\n          croppedImage={croppedImage}\n          setLoading={setLoading}\n          showProfileUpdatedNotice={props.showProfileUpdatedNotice}\n          setEditCompleteText={props.setEditCompleteText}\n          closeEditProfilePicture={props.closeEditProfilePicture}\n        />\n      </ChooseProfilePictureContainer>\n    </div>\n  );\n};\n\nexport default ChangeProfileImage;\n","import styled from \"styled-components\";\n\nexport const SettingsProfileImage = styled.img`\n  width: 8rem;\n  border-radius: 100px;\n  cursor: pointer;\n  transition: box-shadow .2s linear;\n  \n  &:hover {\n   box-shadow: 0 2px 10px 1px rgba(57,73,76,0.4), 0 1px 2px rgba(57,73,76,0.25);\n  }\n`\n\nexport const SettingsProfileImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { InputBox } from \"../../../containers/container\";\nimport SettingsInfoShow from \"./SettingsInfoShow\";\nimport SettingsInfoEdit from \"./SettingsInfoEdit\";\nimport ChangeProfilePicture from \"./SettingsProfilePicture/ChangeProfileImage\";\nimport {\n  SettingsProfileImage,\n  SettingsProfileImageContainer,\n} from \"./SettingsProfilePicture/styles/settings_info_styles\";\nimport Modal from \"../../../modals/Modal\";\n\nconst SettingsInfo = (props) => {\n  const [showEditProfilePicture, setShowEditProfilePicture] = useState(false);\n  const profileImage = useSelector(({ userState }) => userState.profileImage);\n\n  const closeEditProfilePicture = () => {\n    props.setEditActive(false);\n    setShowEditProfilePicture(false);\n  };\n\n  const showProfileUpdatedNotice = () => {\n    props.setEditCompleteText(\"Your profile has been updated\");\n  };\n\n  return (\n    <div>\n      <InputBox borderBottom={true}>\n        <SettingsProfileImageContainer>\n          <SettingsProfileImage\n            alt=\"profile image\"\n            src={profileImage}\n            onClick={() => setShowEditProfilePicture(true)}\n          />\n        </SettingsProfileImageContainer>\n      </InputBox>\n      {!props.editActive && <SettingsInfoShow />}\n\n      {props.editActive && (\n        <SettingsInfoEdit\n          getUpdatedUserData={props.getUpdatedUserData}\n          setEditActive={props.setEditActive}\n          setEditCompleteText={props.setEditCompleteText}\n        />\n      )}\n\n      {showEditProfilePicture && (\n        <Modal closeModal={closeEditProfilePicture} showCloseButton medium>\n          <ChangeProfilePicture\n            showProfileUpdatedNotice={showProfileUpdatedNotice}\n            closeEditProfilePicture={closeEditProfilePicture}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default SettingsInfo;\n","import React from \"react\";\nimport { InputBox } from \"../../../containers/container\";\nimport SettingsNotice from \"../SettingsNotice\";\nimport { TextGridContainer } from \"../../../text/text\";\nimport { connect } from \"react-redux\";\n\nconst SettingsNotificationsInfo = (props) => {\n  return (\n    <div>\n      <InputBox>\n        <TextGridContainer>\n          <SettingsNotice\n            title=\"New Message\"\n            active={props.notifications.newMessages}\n            details=\"Receive an email notification when you receive a new message\"\n          />\n          <SettingsNotice\n            title=\"Password Changed\"\n            active={props.notifications.passwordChanged}\n            details=\"Receive an email notification when your password is updated\"\n          />\n          <SettingsNotice\n            title=\"Email Changed\"\n            active={props.notifications.emailChanged}\n            details=\"Receive an email notification when your account email is updated\"\n          />\n        </TextGridContainer>\n      </InputBox>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.userState.notifications,\n});\n\nexport default connect(mapStateToProps)(SettingsNotificationsInfo);\n","import React from \"react\";\nimport SwitchInput from \"react-switch\";\nimport InputLabel from \"./InputLabel\";\nimport styled from \"styled-components\";\n\nconst Notice = styled.div`\n  color: grey;\n  font-size: 1.3rem;\n  margin-top: 0.4rem;\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n`;\n\nconst SwitchInputTag = styled(SwitchInput)`\n  margin-left: auto;\n`;\n\nconst Switch = (props) => {\n  return (\n    <Container>\n      <div>\n        <InputLabel label={props.label} textLabel />\n        <Notice>{props.details}</Notice>\n      </div>\n\n      <SwitchInputTag\n        onChange={props.input.onChange}\n        checked={props.input.value}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        onColor=\"#467AFF\"\n      />\n    </Container>\n  );\n};\n\nexport default Switch;\n","import React from \"react\";\nimport { InputBox } from \"../../../containers/container\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport SubmitButtons from \"../SettingsSubmitButtons\";\nimport Loading from \"../../../loading/Loading\";\nimport Switch from \"../../../inputs/Switch\";\nimport styled from \"styled-components\";\nimport { handleSettingsSubmit } from \"../settings_helpers\";\nimport { RelativeForm } from \"../../../forms/form_styles\";\n\nconst SettingsNotificationsFieldContainer = styled.div`\n  display: grid;\n  grid-row-gap: 4rem;\n`;\n\nconst settingsNotificationsEdit = (props) => {\n  const submitOptions = {\n    url: \"/users/notifications\",\n    editCompleteText: `Your notifications have been updated`,\n  };\n\n  return (\n    <Form\n      onSubmit={(values) => handleSettingsSubmit(values, props, submitOptions)}\n      initialValues={props.userNotifications}\n      render={({ handleSubmit, submitting, submitError }) => (\n        <RelativeForm onSubmit={handleSubmit}>\n          {/* <Loading loading={submitting} /> */}\n          <InputBox borderBottom={true}>\n            <SettingsNotificationsFieldContainer>\n              <Field\n                name=\"newMessages\"\n                component={Switch}\n                label=\"New Message\"\n                details=\"Receive an email notification when you have a new unread message\"\n              />\n\n              <Field\n                name=\"passwordChanged\"\n                component={Switch}\n                label=\"Password Changed\"\n                details=\"Receive an email notification when your account password is changed\"\n              />\n\n              <Field\n                name=\"emailChanged\"\n                component={Switch}\n                label=\"Email Changed\"\n                details=\"Receive an email notification when your account email is changed\"\n              />\n            </SettingsNotificationsFieldContainer>\n          </InputBox>\n          <SubmitButtons\n            setEditActive={props.setEditActive}\n            error={submitError}\n          />\n        </RelativeForm>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = ({ userState }) => ({\n  userNotifications: userState.notifications,\n});\n\nexport default connect(mapStateToProps)(settingsNotificationsEdit);\n","import React from \"react\";\nimport SettingsNotificationsInfo from \"./SettingsNotificationsInfo\";\nimport SettingsNotificationsEdit from \"./SettingsNotificationsEdit\";\nimport { connect } from \"react-redux\";\n\nconst SettingsNotifications = (props) => (\n  <div>\n    {!props.editActive && <SettingsNotificationsInfo />}\n    {props.editActive && (\n      <SettingsNotificationsEdit\n        editActive={props.editActive}\n        getUpdatedUserData={props.getUpdatedUserData}\n        setEditActive={props.setEditActive}\n        setEditCompleteText={props.setEditCompleteText}\n      />\n    )}\n  </div>\n);\n\nexport default SettingsNotifications;\n","import styled from \"styled-components\";\n\nexport const AccountItemContainer = styled.div`\n  margin-bottom: 2rem;\n  width: 90%;\n`;\n\nexport const AccountItemHeading = styled.div`\n  font-family: \"Bold\";\n  margin-bottom: 0.5rem;\n  font-size: 1.8rem;\n`;\n\nexport const AccountItemOuterContainer = styled.div`\n  display: grid;\n  grid-row-gap: 5rem;\n`;\n","import {\n  AccountItemContainer,\n  AccountItemHeading,\n} from \"./settings_account_styles\";\nimport FilledButton from \"../../../buttons/FilledButton\";\nimport React from \"react\";\nimport { RelativePositionContainer } from \"../../../containers/container\";\nimport Loading from \"../../../loading/Loading\";\nimport InputError from \"../../../inputs/InputError\";\n\nconst SettingsAccountItem = (props) => {\n  return (\n    <RelativePositionContainer>\n      <AccountItemContainer>\n        <AccountItemHeading>{props.heading}</AccountItemHeading>\n        <div> {props.text}</div>\n      </AccountItemContainer>\n      <FilledButton\n        warning={props.warning}\n        buttonText={props.btnText}\n        onClick={props.onClick}\n      />\n      <InputError error={props.error} />\n\n      {/* <Loading loading={props.loading} /> */}\n    </RelativePositionContainer>\n  );\n};\n\nexport default SettingsAccountItem;\n","import React, { useState } from \"react\";\nimport axios from \"../../../../axios\";\nimport SettingsAccountItem from \"./SettingsAccountItem\";\nimport { getAuthHeaderWithData } from \"../../../../services/auth_header_services\";\n\nconst SendVerificationEmail = (props) => {\n  const [emailVerificationError, setEmailVerificationError] = useState(\"\");\n  const [emailVerificationLoading, setEmailVerificationLoading] = useState(\n    false\n  );\n\n  const sendVerificationEmail = async () => {\n    try {\n      setEmailVerificationLoading(true);\n      const {\n        data: { success },\n      } = await axios.get(\n        \"/users/send_verify_account_email\",\n        getAuthHeaderWithData({ hideToken: true })\n      );\n      if (success) {\n        props.setEmailVerificationEmailSent(true);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      setEmailVerificationError(\n        \"Something went wrong. Please try again later.\"\n      );\n    } finally {\n      setEmailVerificationLoading(false);\n    }\n  };\n\n  return (\n    <SettingsAccountItem\n      onClick={sendVerificationEmail}\n      btnText=\"Verify Account\"\n      error={emailVerificationError}\n      heading=\"Resend Verification Email\"\n      loading={emailVerificationLoading}\n      text=\"Your account has not been verified. To verify your account, please confirm your email address via a verification email.\"\n    />\n  );\n};\n\nexport default SendVerificationEmail;\n","import React, { useState } from \"react\";\n\nimport FilledButton from \"../buttons/FilledButton\";\nimport HollowButton from \"../buttons/HollowButton\";\nimport Loading from \"../loading/Loading\";\nimport InputError from \"../inputs/InputError\";\nimport TextInput from \"../inputs/TextInput\";\nimport { ModalHeading, ModalText } from \"./styles/modal_styles\";\nimport { FlexContainer } from \"../containers/container\";\nimport { Form, Field } from \"react-final-form\";\nimport { ConfirmAlertWithTextFieldContainer } from \"./styles/modal_styles\";\nimport { getInitialFormValues } from \"../forms/form_helpers\";\n\nimport { RelativeForm } from \"../forms/form_styles\";\n\nconst ConfirmAlertWithText = (props) => {\n  const validConfirm = (value) => {\n    return value && value === \"confirm\" ? undefined : \"invalid\";\n  };\n\n  return (\n    <Form\n      onSubmit={props.action}\n      initialValues={getInitialFormValues({ confirm: \"confirm\" })}\n      render={({ handleSubmit, submitting, invalid, submitError }) => (\n        <RelativeForm onSubmit={handleSubmit} id=\"confirmAlert\">\n          {submitting && <Loading loading={submitting} />}\n\n          <ModalHeading>{props.heading}</ModalHeading>\n          <ModalText>{props.text}</ModalText>\n          <ConfirmAlertWithTextFieldContainer>\n            <Field\n              name=\"confirm\"\n              customWidth={\"50%\"}\n              component={TextInput}\n              validate={validConfirm}\n              label='Please type \"confirm\"'\n            />\n          </ConfirmAlertWithTextFieldContainer>\n          <FlexContainer>\n            <HollowButton\n              buttonText=\"Cancel\"\n              rightMargin\n              onClick={props.closeAlert}\n            />\n            <FilledButton\n              buttonText=\"Submit\"\n              warning\n              type=\"submit\"\n              disabled={invalid}\n            />\n          </FlexContainer>\n          {submitError && <InputError error={submitError} />}\n        </RelativeForm>\n      )}\n    />\n  );\n};\n\nexport default ConfirmAlertWithText;\n","import React from \"react\";\nimport {\n  ModalBackgroundColor,\n  ModalContainerTag,\n  ModalHeading,\n  ModalInnerContainer,\n  ModalText,\n  ModalDimensions,\n} from \"../modals/styles/modal_styles\";\nimport FilledButton from \"../buttons/FilledButton\";\nimport { Center } from \"../alignment/Center\";\n\nconst Notice = (props) => {\n  return (\n    <div>\n      <ModalHeading>{props.heading}</ModalHeading>\n      <ModalText>{props.text}</ModalText>\n      <FilledButton\n        buttonText={props.buttonText}\n        onClick={props.handleNoticeConfirm}\n      />\n    </div>\n  );\n};\n\nexport default Notice;\n","import SettingsAccountItem from \"./SettingsAccountItem\";\nimport React, { useState } from \"react\";\nimport axios from \"../../../../axios\";\nimport { getAuthHeader } from \"../../../../services/auth_header_services\";\nimport ConfirmAlertWithText from \"../../../modals/ConfirmAlertWithText\";\nimport { FORM_ERROR } from \"final-form\";\nimport Notice from \"../../../notices/Notice\";\nimport { logoutUser } from \"../../../../services/logout\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"../../../modals/Modal\";\n\nconst SettingsDeleteAccount = (props) => {\n  const [deleteAccountAlertOpen, setDeleteAccountAlertOpen] = useState(false);\n  const [\n    accountDeletedConfirmationOpen,\n    setAccountDeletedConfirmationOpen,\n  ] = useState(false);\n\n  const history = useHistory();\n\n  const deleteAccount = async () => {\n    try {\n      const {\n        data: { success },\n      } = await axios.delete(\"/users\", getAuthHeader());\n\n      if (success) {\n        setDeleteAccountAlertOpen(false);\n        setAccountDeletedConfirmationOpen(true);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      return { [FORM_ERROR]: \"Something went wrong\" };\n    }\n  };\n\n  const handleDeleteNoticeConfirm = () => {\n    setAccountDeletedConfirmationOpen(false);\n    logoutUser(history);\n  };\n\n  const closeDeleteAccountAlertOpen = () => {\n    setDeleteAccountAlertOpen(false);\n  };\n\n  return (\n    <div>\n      <SettingsAccountItem\n        onClick={() => setDeleteAccountAlertOpen(true)}\n        btnText=\"Delete Account\"\n        heading=\"Delete Account\"\n        text=\"If you delete your account, all your profile information, posts, messages, and user data will be permanently deleted.\"\n        warning\n      />\n\n      {deleteAccountAlertOpen && (\n        <Modal closeModal={closeDeleteAccountAlertOpen}>\n          <ConfirmAlertWithText\n            type=\"confirmAlert\"\n            heading=\"Delete Account\"\n            text=\"Are you sure you want to delete your account? This can't be undone.\"\n            btnText=\"Delete Account\"\n            action={deleteAccount}\n            closeAlert={closeDeleteAccountAlertOpen}\n          />\n        </Modal>\n      )}\n      {accountDeletedConfirmationOpen && (\n        <Modal>\n          <Notice\n            heading=\"Account Deleted\"\n            btnText=\"Got it\"\n            handleNoticeConfirm={handleDeleteNoticeConfirm}\n            text=\"Your account and all your user data have been permanently deleted. Thank you for using Spekkly and we hope that you will join again in the future.\"\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default SettingsDeleteAccount;\n","import styled from \"styled-components\";\nimport is, { isNot } from \"styled-is\";\n\nexport const BlockedUsersContainer = styled.div`\n  grid-row-gap: 2rem;\n  height: 40rem;\n\n  ${isNot(\"loading\")`\n    height: 100%\n    max-height: 40rem;\n    overflow: auto;\n  `};\n`;\n\nexport const LoadingError = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const BlockedUserImage = styled.img`\n  width: 4.6rem;\n  border-radius: 100px;\n`;\n\nexport const BlockedUserContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const BlockedUserName = styled.div`\n  margin-left: 1rem;\n  font-size: 1.7rem;\n`;\n\nexport const ItemsContainer = styled.div`\n  display: grid;\n  grid-row-gap: 2rem;\n`;\n\nexport const BlockButtonContainer = styled.div`\n  margin-left: auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport removeItems from \"remove-array-items\";\nimport axios from \"../../../../axios\";\n\nimport { BlockButtonContainer } from \"./blocked_user_styles\";\nimport {\n  BlockedUsersContainer,\n  LoadingError,\n  BlockedUserImage,\n  BlockedUserContainer,\n  BlockedUserName,\n  ItemsContainer,\n} from \"./blocked_user_styles\";\nimport Loading from \"../../../loading/Loading\";\nimport { getAuthHeader } from \"../../../../services/auth_header_services\";\nimport FilledButton from \"../../../buttons/FilledButton\";\nimport { userDataDispatch } from \"../../../../redux/actions/user_actions\";\nimport LoadingButtonSpinner from \"../../../loading/LoadingButtonSpinner\";\n\nconst BlockedUsersDetails = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [blockedUsers, setBlockedUsers] = useState([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [removeLoadingIndex, setRemoveLoadingIndex] = useState(-1);\n  const [unblockLoadingIndices, setUnblockLoadingIndices] = useState([]);\n\n  const unblockUser = async (blockedUserId, index) => {\n    try {\n      setUnblockLoadingIndices([...unblockLoadingIndices, index]);\n      const payload = {\n        blockedUserId,\n        blockUser: false,\n      };\n\n      const {\n        data: { success },\n      } = await axios.patch(\"/users/blocked_users\", payload, getAuthHeader());\n\n      if (success) {\n        const index = blockedUsers.findIndex(\n          (element) => element.id === blockedUserId\n        );\n        removeItems(blockedUsers, index, 1);\n\n        if (blockedUsers.length === 0) {\n          props.userData(\n            Object.assign({}, props.userDataProp, { blockedUsers: null })\n          );\n          props.setBlockedUserListVisible(false);\n        } else {\n          setBlockedUsers([...blockedUsers]);\n        }\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      props.setUnblockUserError(\n        \"Something went wrong. Please try again later.\"\n      );\n    } finally {\n      setRemoveLoadingIndex(index);\n    }\n  };\n\n  useEffect(() => {\n    if (removeLoadingIndex !== -1) {\n      const indexToRemove = unblockLoadingIndices.findIndex(\n        (element) => element === removeLoadingIndex\n      );\n      removeItems(unblockLoadingIndices, indexToRemove, 1);\n      setUnblockLoadingIndices([...unblockLoadingIndices]);\n      setRemoveLoadingIndex(-1);\n    }\n  }, [removeLoadingIndex]);\n\n  useEffect(() => {\n    fetchBlockedUsers();\n  }, []);\n\n  const fetchBlockedUsers = async () => {\n    try {\n      const {\n        data: { success, blockedUsers },\n      } = await axios.get(\"/users/blocked_users\", getAuthHeader());\n      if (success) {\n        setBlockedUsers(blockedUsers);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      setLoadingError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <BlockedUsersContainer loading={loading ? 1 : 0}>\n      <Loading loading={loading} solidBackground />\n\n      {loadingError && (\n        <LoadingError>Blocked users could not be loaded</LoadingError>\n      )}\n\n      {!loadingError && (\n        <ItemsContainer>\n          {blockedUsers.map((user, index) => (\n            <BlockedUserContainer key={user.id}>\n              <BlockedUserImage\n                src={user.profileImage}\n                alt=\"Blocked user's profile image\"\n              />\n              <BlockedUserName>{user.name}</BlockedUserName>\n              <BlockButtonContainer>\n                <FilledButton\n                  buttonText=\"Unblock\"\n                  warning\n                  leftSideLoading\n                  loading={unblockLoadingIndices.includes(index)}\n                  disabled={unblockLoadingIndices.includes(index)}\n                  onClick={() => unblockUser(user.id, index)}\n                  small\n                />\n              </BlockButtonContainer>\n            </BlockedUserContainer>\n          ))}\n        </ItemsContainer>\n      )}\n    </BlockedUsersContainer>\n  );\n};\n\nconst mapStateToProps = ({ userState }) => ({\n  blockedUsers: userState.blockedUsers,\n  userDataProp: userState.userData,\n});\n\nconst mapDispatchToProps = () => ({\n  userDataDispatch,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps()\n)(BlockedUsersDetails);\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { InputBox } from \"../../../containers/container\";\nimport { AccountItemOuterContainer } from \"./settings_account_styles\";\nimport SuccessMessage from \"../../../alerts/SuccessMessage\";\nimport SendVerificationEmail from \"./SendVerificationEmail\";\nimport SettingsDeleteAccount from \"./SettingsDeleteAccount\";\nimport SettingsAccountItem from \"./SettingsAccountItem\";\nimport BlockedUsersDetails from \"./BlockedUsersDetails\";\nimport HollowButton from \"../../../buttons/HollowButton\";\nimport InputError from \"../../../inputs/InputError\";\n\nconst SettingsAccount = () => {\n  const emailVerified = useSelector(\n    ({ userState: { emailVerified } }) => emailVerified\n  );\n  const blockedUsers = useSelector(\n    ({ userState: { blockedUsers } }) => blockedUsers\n  );\n\n  const [emailVerificationEmailSent, setEmailVerificationEmailSent] = useState(\n    false\n  );\n  const [blockedUserListVisible, setBlockedUserListVisible] = useState(false);\n  const [unblockUserError, setUnblockUserError] = useState(\"\");\n\n  return (\n    <div>\n      <InputBox borderBottom>\n        <AccountItemOuterContainer>\n          {blockedUsers && !blockedUserListVisible && (\n            <SettingsAccountItem\n              onClick={() => setBlockedUserListVisible(true)}\n              btnText=\"Edit\"\n              heading=\"Blocked Users\"\n              text=\"Manage users that you've previously blocked.\"\n            />\n          )}\n\n          {blockedUserListVisible && (\n            <BlockedUsersDetails\n              closeShowBlockedUsers={() => setBlockedUserListVisible(false)}\n              setUnblockUserError={setUnblockUserError}\n              setBlockedUserListVisible={setBlockedUserListVisible}\n            />\n          )}\n\n          {emailVerificationEmailSent && !blockedUserListVisible && (\n            <SuccessMessage message=\"Verification email has been sent\" />\n          )}\n\n          {!emailVerified &&\n            !emailVerificationEmailSent &&\n            !blockedUserListVisible && (\n              <SendVerificationEmail\n                setEmailVerificationEmailSent={setEmailVerificationEmailSent}\n              />\n            )}\n\n          {!blockedUserListVisible && <SettingsDeleteAccount />}\n        </AccountItemOuterContainer>\n      </InputBox>\n      {blockedUserListVisible && (\n        <InputBox>\n          <HollowButton\n            buttonText=\"Cancel\"\n            space=\"right\"\n            onClick={() => setBlockedUserListVisible(false)}\n          />\n          <InputError error={unblockUserError} />\n        </InputBox>\n      )}\n    </div>\n  );\n};\n\nexport default SettingsAccount;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Media from \"react-media\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\n\nimport {\n  StandardContainer,\n  SideNavContainer,\n  ContentSection,\n} from \"../../containers/container\";\nimport SettingsSecurity from \"./settings_security/SettingsSecurity\";\nimport SettingsNav from \"./SettingsNav\";\nimport IconHeadingBox from \"../../headings/IconHeadingBox\";\nimport SettingsInfo from \"./settings_info/SettingsInfo\";\nimport SettingsNotifications from \"./settings_notifications/SettingsNotifications\";\nimport UpdateSuccessful from \"./UpdateSuccessful\";\nimport { getUserInfo } from \"../../../services/load_data_services\";\nimport { userDataDispatch } from \"../../../redux/actions/user_actions\";\nimport SettingsAccount from \"./settings_account/SettingsAccount\";\nimport {\n  tabLandUp,\n  tabPortDown,\n  createMediaQuery,\n} from \"../../media/media_helpers\";\n\nconst Settings = () => {\n  const navTitles = [\n    \"Profile\",\n    \"Password & Security\",\n    \"Notifications\",\n    \"Account\",\n  ];\n\n  const [editActive, setEditActive] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [editCompleteText, setEditCompleteText] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleEditClick = () => {\n    setEditActive(!editActive);\n  };\n\n  const getUpdatedUserData = async () => {\n    dispatch(userDataDispatch(await getUserInfo()));\n  };\n\n  return (\n    <StandardContainer>\n      <SideNavContainer>\n        <Media query={tabLandUp}>\n          {(matches) =>\n            matches && (\n              <SettingsNav\n                navTitles={navTitles}\n                activeIndex={activeIndex}\n                setEditActive={setEditActive}\n                setActiveIndex={setActiveIndex}\n              />\n            )\n          }\n        </Media>\n        <ContentSection>\n          <IconHeadingBox\n            heading={navTitles[activeIndex]}\n            activeIndex={activeIndex}\n            handleClick={handleEditClick}\n          />\n\n          {activeIndex === 0 && (\n            <SettingsInfo\n              editActive={editActive}\n              setEditCompleteText={setEditCompleteText}\n              getUpdatedUserData={getUpdatedUserData}\n              setEditActive={setEditActive}\n            />\n          )}\n\n          {activeIndex === 1 && (\n            <SettingsSecurity\n              editActive={editActive}\n              getUpdatedUserData={getUpdatedUserData}\n              setEditActive={setEditActive}\n              setEditCompleteText={setEditCompleteText}\n            />\n          )}\n          {activeIndex === 2 && (\n            <SettingsNotifications\n              editActive={editActive}\n              getUpdatedUserData={getUpdatedUserData}\n              setEditActive={setEditActive}\n              setEditCompleteText={setEditCompleteText}\n            />\n          )}\n          {activeIndex === 3 && <SettingsAccount />}\n          {editCompleteText && <UpdateSuccessful message={editCompleteText} />}\n        </ContentSection>\n      </SideNavContainer>\n    </StandardContainer>\n  );\n};\n\nexport default Settings;\n","import styled from \"styled-components\"\nimport is, {isNot} from 'styled-is'\nimport {ReactSVG} from 'react-svg'\n\n\nexport const ConversationOptionContainer = styled.div`\n\n  position: fixed;\n  top: calc(${props => props.conversationOptionsIconBounds.top}px + 2.6rem);\n  z-index: 10;\n  left: calc(${props => props.conversationOptionsIconBounds.left}px + ${props => props.conversationOptionsBounds.width}px);\n\n  ${isNot('conversationOptionsAreVisible')`\n      top: calc(${props => props.conversationOptionsIconBounds.top}px - .4rem - ${props => props.conversationOptionsBounds.height}px);\n  `};\n`\n\nexport const MuteIcon = styled(ReactSVG)`\n  transform: translateY(.2rem);\n`\n\nexport const ConversationListContainer = styled.div`\n  background-color: white;\n  position: relative;\n  height: calc(100vh - ${props => props.conversationSearchContainerHeight}px - var(--messages-navbar-offset) - ${props => props.navbarHeight}px);\n  overflow: scroll;\n`\n\nexport const NoConversationsText = styled.div`\n  font-size: 1.3rem;\n  \n  ${is('marginBottom')`\n      margin-bottom: ${props => props.marginBottom}px;\n  `};\n`\n\nexport const ConversationContainer = styled.div`\n  background-color: var(--background-color);\n  height: 100%;\n  overflow: scroll;\n`\n\nexport const ConversationSearchContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  background-color: white;\n`\n\nexport const ConversationSearchInput = styled.input`\n  background-color: #f5f5f5;\n  width: 100%;\n  padding: 1.4rem 1.6rem;\n  border: none;\n  font-size: 1.4rem;\n  \n  &::placeholder {\n    color: #999999;\n  }\n`","import diff from \"datetime-diff\";\nimport dateFormat from \"dateformat\";\n\nexport const formatMessageTimeStamp = (messageTimeStamp) => {\n  const dateFromMessage = new Date(messageTimeStamp);\n  const days = getDaysDiff(Date.now(), dateFromMessage);\n  const hourMinute = \"h:MM TT\";\n  if (days > 365) {\n    return dateFormat(dateFromMessage, `d/m/yy, ${hourMinute}`);\n  } else if (days > 7) {\n    return dateFormat(dateFromMessage, `mmm dd, yyyy, ${hourMinute}`);\n  } else if (days > 1) {\n    return dateFormat(dateFromMessage, `ddd ${hourMinute}`);\n  } else {\n    return dateFormat(dateFromMessage, `${hourMinute}`);\n  }\n};\n\nexport const getDaysDiff = (firstTimestamp, secondTimestamp) =>\n  diff(new Date(firstTimestamp), new Date(secondTimestamp)).days;\n","import styled, { css } from \"styled-components\";\nimport is, { isNot } from \"styled-is\";\n\nconst optionsArrow = css`\n  &:after,\n  &:before {\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-bottom: 8px solid white;\n    top: -8px;\n    content: \"\";\n    position: absolute;\n\n    ${is(\"bottomArrow\")`\n         top: initial;\n         left: 0;\n         bottom: -8px;\n         transform: rotate(180deg);\n    `}\n  }\n\n  &:before {\n    border-left: 9px solid transparent;\n    border-right: 9px solid transparent;\n    border-bottom: 9px solid #cecece;\n\n    ${is(\"bottomArrow\")`\n         top: initial;\n         bottom: -8px;\n         transform: translateY(1px) rotate(180deg);\n    `}\n\n    ${isNot(\"bottomArrow\")`\n         transform: translateY(-1px);\n    `}\n     \n    margin-left: -1px;\n  }\n`;\n\nexport const OptionsContainer = styled.div`\n  position: absolute;\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);\n  background-color: white;\n  border-radius: 4px;\n  right: 1.2rem;\n  padding: 0.4rem 0;\n  z-index: 100;\n  transition: top linear 0.1s;\n\n  ${is(\"profileOptions\")`\n    top: 2.8rem;\n  `};\n\n  ${is(\"conversationOptions\")`\n         ${optionsArrow}\n      \n     &:after,\n     &:before {\n        left: 13%;\n     }\n  `};\n\n  ${is(\"emojiContainer\")`\n      ${optionsArrow}\n      padding: 0;\n      right: -2rem\n      top: calc(-2rem - ${(props) => props.height}px);\n     \n      \n      &:after,\n      &:before {\n        left: 88%;\n      }\n   `};\n\n  ${is(\"messageOptions\")`\n    ${optionsArrow}\n    right: -1.4rem;\n    top: -3.4rem;\n    \n     &:after,\n     &:before {\n        left: 64%;\n     }\n  `};\n\n  ${is(\"fixed\")`\n    position: fixed;\n  `};\n`;\n\nexport const Option = styled.div`\n  white-space: nowrap;\n  font-size: 1.4rem;\n  padding: 0.8rem 2rem;\n  cursor: pointer;\n  transition: background-color 0.1s linear;\n\n  &:hover {\n    background-color: #e6e6e6;\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport FilledButton from \"../buttons/FilledButton\";\nimport HollowButton from \"../buttons/HollowButton\";\nimport InputError from \"../inputs/InputError\";\nimport { ModalHeading, ModalText } from \"./styles/modal_styles\";\nimport { FlexContainer } from \"../containers/container\";\n\nconst ConfirmAlert = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleAction = () => {\n    console.log(\"I am here\");\n\n    // try {\n    //   setLoading(true);\n    //   await props.action();\n\n    //   if (props.closeAlert) {\n    //     props.closeAlert();\n    //   }\n\n    //   if (props.hideOptions) {\n    //     props.hideOptions();\n    //   }\n    // } catch (e) {\n    //   setError(\"Something went wrong\");\n    // } finally {\n    //   setLoading(false);\n    // }\n  };\n\n  return (\n    <div>\n      <ModalHeading>{props.heading}</ModalHeading>\n      <ModalText>{props.text}</ModalText>\n\n      <FlexContainer>\n        <HollowButton\n          buttonText=\"Back\"\n          rightMargin\n          onClick={props.closeAlert}\n        />\n        <FilledButton\n          buttonText={props.buttonText}\n          warning\n          rightSideLoading\n          loading={loading}\n          onClick={handleAction}\n        />\n      </FlexContainer>\n\n      <InputError error={error} />\n    </div>\n  );\n};\n\nexport default ConfirmAlert;\n","import React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport ConfirmAlert from \"./ConfirmAlert\";\nimport Notice from \"../notices/Notice\";\nimport axios from \"../../axios\";\nimport { getAuthHeader } from \"../../services/auth_header_services\";\nimport { useHistory } from \"react-router-dom\";\n\nconst BlockUserModal = (props) => {\n  const user = props.user;\n  const [showBlockConfirmation, setShowBlockConfirmation] = useState(false);\n\n  const blockUser = async () => {\n    const payload = {\n      blockedUserId: user.id,\n      blockUser: true,\n    };\n    const {\n      data: { success },\n    } = await axios.patch(\"/users/blocked_users\", payload, getAuthHeader());\n\n    if (!success) {\n      throw new Error();\n    }\n\n    setShowBlockConfirmation(true);\n  };\n\n  return (\n    <Modal\n      closeModal={props.closeModal}\n      outsideClickIgnoreClass={props.outsideClickIgnoreClass}\n    >\n      {!showBlockConfirmation && (\n        <ConfirmAlert\n          heading={`Block ${user.name}`}\n          action={blockUser}\n          text={`Are you sure you want to block ${user.name}? This person will no longer be visible or able to communicate with you on Spekkly.`}\n          buttonText=\"Block\"\n        />\n      )}\n\n      {showBlockConfirmation && (\n        <Notice\n          heading=\"Success\"\n          buttonText=\"Got it\"\n          handleNoticeConfirm={props.handleBlockedUserConfirmation}\n          text={`${user.name} has been blocked and will no longer be able to communicate with you on Spekkly? You can unblock ${user.name} in your account settings`}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default BlockUserModal;\n","import React, { useEffect, useState } from \"react\";\nimport { Portal } from \"react-portal\";\nimport Measure from \"react-measure\";\nimport onClickOutside from \"react-onclickoutside\";\n\nimport { ConversationOptionContainer } from \"./styles/conversation_list_styles\";\nimport { Option, OptionsContainer } from \"../../../options/option_styles\";\nimport axios from \"../../../../axios\";\nimport {\n  getAuthHeader,\n  getAuthHeaderWithData,\n} from \"../../../../services/auth_header_services\";\nimport BlockUserModal from \"../../../modals/BlockUserModal\";\n\nconst ConversationItemOptions = (props) => {\n  const conversation = props.conversation;\n  const [conversationOptionsBounds, setConversationOptionsBounds] = useState(\n    {}\n  );\n  const [showBlockUserModal, setShowBlockUserModal] = useState(false);\n  const [\n    conversationOptionsAreVisible,\n    setConversationOptionsAreVisible,\n  ] = useState(true);\n\n  const user = {\n    id: conversation.recipientId,\n    name: conversation.recipientName,\n  };\n\n  ConversationItemOptions.handleClickOutside = () => props.hideOptions();\n\n  const handleMute = async () => {\n    const payload = {\n      conversationId: conversation.id,\n      mute: !conversation.muted,\n    };\n\n    const {\n      data: { success },\n    } = await axios.patch(\"/conversations/mute\", payload, getAuthHeader());\n\n    if (success) {\n      props.toggleMuteIcon(conversation.id);\n    }\n  };\n\n  const deleteConversation = async () => {\n    const data = {\n      conversationId: conversation.id,\n    };\n    const {\n      data: { success },\n    } = await axios.delete(\"/conversations\", getAuthHeaderWithData(data));\n    if (success) {\n      props.removeConversation(conversation.id);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.windowBounds.windowHeight -\n        props.conversationOptionsIconBounds.bottom <\n      conversationOptionsBounds.height\n    ) {\n      setConversationOptionsAreVisible(false);\n    } else {\n      setConversationOptionsAreVisible(true);\n    }\n  }, [props.windowBounds.windowHeight]);\n\n  const handleBlockedUserConfirmation = () => {\n    props.hideOptions();\n    props.removeConversation(conversation.id);\n  };\n\n  return (\n    <Portal node={document && document.getElementById(\"conversation-options\")}>\n      <Measure\n        bounds\n        onResize={({ bounds }) => setConversationOptionsBounds(bounds)}\n      >\n        {({ measureRef }) => (\n          <div>\n            <ConversationOptionContainer\n              conversationOptionsIconBounds={\n                props.conversationOptionsIconBounds\n              }\n              conversationOptionsAreVisible={conversationOptionsAreVisible}\n              conversationOptionsBounds={conversationOptionsBounds}\n            >\n              <OptionsContainer ref={measureRef} conversationOptions>\n                <Option onClick={handleMute}>\n                  {props.conversation.muted ? \"Unmute\" : \"Mute\"}\n                </Option>\n                <Option onClick={deleteConversation}>Delete</Option>\n                <Option onClick={() => setShowBlockUserModal(true)}>\n                  Block\n                </Option>\n              </OptionsContainer>\n            </ConversationOptionContainer>\n          </div>\n        )}\n      </Measure>\n\n      {showBlockUserModal && (\n        <BlockUserModal\n          user={user}\n          handleBlockedUserConfirmation={handleBlockedUserConfirmation}\n          outsideClickIgnoreClass={props.outsideClickIgnoreClass}\n          closeModal={() => setShowBlockUserModal(false)}\n        />\n      )}\n    </Portal>\n  );\n};\n\nConversationItemOptions.prototype = {};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => ConversationItemOptions.handleClickOutside,\n};\n\nexport default onClickOutside(ConversationItemOptions, clickOutsideConfig);\n","import styled from \"styled-components\";\n\nexport const IconContainer = styled.div`\n  height: ${(props) =>\n    props.svgContainerHeight > 0\n      ? `calc(${props.svgContainerHeight}px - 4px)`\n      : `100%`};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport { IconContainer } from \"./icon_styles\";\nimport Measure from \"react-measure\";\n\nconst Icon = (props) => {\n  const [svgIconHeight, setSvgIconHeight] = useState(0);\n  const [svgContainerHeight, setSvgContainerHeight] = useState(0);\n\n  useEffect(() => {\n    if (svgIconHeight > 0 && svgContainerHeight === 0) {\n      setSvgContainerHeight(svgIconHeight);\n    }\n  }, [svgIconHeight]);\n\n  return (\n    <Measure\n      bounds\n      onResize={({ bounds: { height } }) => setSvgIconHeight(height)}\n    >\n      {({ measureRef }) => (\n        <IconContainer ref={measureRef} svgContainerHeight={svgContainerHeight}>\n          <ReactSVG\n            src={props.src}\n            beforeInjection={(svg) => {\n              props.svgClasses.forEach((svgClass) =>\n                svg.classList.add(svgClass)\n              );\n            }}\n          />\n        </IconContainer>\n      )}\n    </Measure>\n  );\n};\n\nexport default Icon;\n","import styled from \"styled-components\";\n\nexport const ConversationOptionsContainer = styled.div`\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n`","import React from \"react\";\nimport Icon from \"../../../icons/Icon\";\nimport Measure from \"react-measure\";\nimport { useSelector } from \"react-redux\";\n\nimport { ConversationOptionsContainer } from \"./styles/conversation_options_styles\";\n\nconst ConversationOptionsIcon = (props) => {\n  const OPTIONS_ICON = useSelector(\n    ({ assetState: { OPTIONS_ICON } }) => OPTIONS_ICON\n  );\n\n  return (\n    <Measure\n      bounds\n      onResize={({ bounds }) => props.setConversationOptionsIconBounds(bounds)}\n    >\n      {({ measureRef }) => (\n        <ConversationOptionsContainer ref={measureRef}>\n          <div\n            ref={props.conversationOptionsIconRef}\n            onClick={() => props.setShowOptions(!props.showOptions)}\n            className={`messages-ignore-outside-click-${props.conversation.id}`}\n          >\n            <Icon\n              src={OPTIONS_ICON}\n              svgClasses={[\"standard-icon\", \"mute-icon\"]}\n            />\n          </div>\n        </ConversationOptionsContainer>\n      )}\n    </Measure>\n  );\n};\n\nexport default ConversationOptionsIcon;\n","import styled from \"styled-components\"\nimport is from 'styled-is'\nimport Truncate from \"react-truncate\";\n\nconst selectedColor = '#F5F5F5'\n\nexport const ConversationDate = styled.div`\n  margin-left: auto;\n  color: #a0a0a0;\n  font-size: 1.3rem;\n`\n\nexport const ConversationItemInnerContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const ConversationOnlineIndicator = styled.div`\n  width: 2rem;\n  height: 2rem;\n  background-color: #27C589;\n  position: absolute;\n  right: 0;\n  bottom: -4px;\n  border-radius: 100px;\n  border: .3rem solid white;\n  \n   ${is('selected')`\n     border: .3rem solid ${selectedColor};\n  `};\n   \n   ${is('headingIndicator')`\n     right: 9px;\n  `};\n\n\n\n`\n\nexport const ConversationThumbnail = styled.img`\n  width: 6rem;\n  border-radius: 100px;\n`\n\nexport const ConversationPreviewText = styled.div`\n  width: 100%;\n  \n  span {\n    color: #a0a0a0;\n    font-size: 1.3rem;\n    margin-top: .3rem;\n    \n    ${is('unreadMessages')`\n     color: black;\n     font-family: \"Bold\";\n  `};\n  }\n`\n\nexport const ConversationRecipientContainer = styled.div`\n  margin-left: 1rem;\n  width: 100%;\n`\n\nexport const ConversationItemContainer = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background-color: white;\n  \n  ${is('selected')`\n    background-color: ${selectedColor};\n  `};\n`\n\nexport const ConversationNameText = styled.div`\n   ${is('unreadMessages')`\n     font-family: \"Bold\";\n  `};\n`\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WindowSizeListener from \"react-window-size-listener\";\nimport { useSwipeable } from \"react-swipeable\";\n\nimport {\n  currentConversationDispatch,\n  mobileActiveConversationDispatch,\n} from \"../../../../redux/actions/message_actions\";\nimport { formatMessageTimeStamp } from \"../helpers/timestamp_helpers\";\nimport \"../../../icons/icon_styles.scss\";\nimport ConversationItemOptions from \"./ConversationItemOptions\";\n\nimport { MuteIcon } from \"./styles/conversation_list_styles\";\nimport ConversationOptionsIcon from \"./ConversationOptionsIcon\";\nimport {\n  ConversationDate,\n  ConversationThumbnail,\n  ConversationOnlineIndicator,\n  ConversationItemInnerContainer,\n  ConversationPreviewText,\n  ConversationRecipientContainer,\n  ConversationItemContainer,\n  ConversationNameText,\n} from \"./styles/conversation_item_styles\";\n\nimport { ConversationOptionsContainer } from \"./styles/conversation_options_styles\";\nimport Truncate from \"react-truncate\";\nimport { RelativePositionContainer } from \"../../../containers/container\";\n\nconst ConversationListItem = (props) => {\n  const [showOptionIcon, setShowOptionIcon] = useState(false);\n  const [windowBounds, setWindowBounds] = useState({});\n\n  const [\n    conversationOptionsIconBounds,\n    setConversationOptionsIconBounds,\n  ] = useState({});\n  const assetState = useSelector(({ assetState }) => assetState);\n  const { currentConversation } = useSelector(\n    ({ messageState }) => messageState\n  );\n  const [showOptions, setShowOptions] = useState(false);\n  const conversationOptionsIconRef = useRef({});\n  const conversation = props.conversation;\n  const selected = conversation.id === currentConversation.id;\n\n  const handleShowOptions = () => {\n    setShowOptionIcon(true);\n  };\n\n  const handleHideOptions = () => {\n    if (!showOptions) {\n      setShowOptionIcon(false);\n    }\n  };\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: handleShowOptions,\n    onSwipedRight: handleHideOptions,\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (showOptionIcon) {\n      setConversationOptionsIconBounds(\n        conversationOptionsIconRef.current.getBoundingClientRect()\n      );\n    }\n  }, [showOptionIcon]);\n\n  const hideOptions = () => {\n    setShowOptions(false);\n    setShowOptionIcon(false);\n  };\n\n  const handleConversationItemClick = () => {\n    dispatch(currentConversationDispatch(conversation));\n    dispatch(mobileActiveConversationDispatch(true));\n  };\n\n  return (\n    <WindowSizeListener onResize={(window) => setWindowBounds(window)}>\n      {currentConversation && (\n        <ConversationItemContainer\n          onMouseEnter={handleShowOptions}\n          onMouseLeave={handleHideOptions}\n          {...swipeHandlers}\n          selected={selected}\n          onClick={handleConversationItemClick}\n        >\n          <RelativePositionContainer>\n            <ConversationThumbnail\n              src={conversation.recipientProfileImage}\n              alt=\"Conversation recipient photo\"\n            />\n            {conversation.recipientIsOnline && (\n              <ConversationOnlineIndicator selected={selected} />\n            )}\n          </RelativePositionContainer>\n\n          <ConversationRecipientContainer>\n            <ConversationItemInnerContainer>\n              <ConversationNameText unreadMessages={conversation.unread}>\n                {conversation.recipientName}\n              </ConversationNameText>\n              <ConversationDate>\n                {formatMessageTimeStamp(conversation.lastMessageTimeStamp)}\n              </ConversationDate>\n            </ConversationItemInnerContainer>\n\n            <ConversationItemInnerContainer>\n              <ConversationPreviewText unreadMessages={conversation.unread}>\n                <Truncate trimWhitespace>\n                  {conversation.latestMessageText ||\n                    `Send your first first message to ${conversation.recipientName}`}\n                </Truncate>\n              </ConversationPreviewText>\n\n              {showOptionIcon && (\n                <ConversationOptionsIcon\n                  setConversationOptionsIconBounds={\n                    setConversationOptionsIconBounds\n                  }\n                  conversation={conversation}\n                  showOptions={showOptions}\n                  setShowOptions={setShowOptions}\n                  conversationOptionsIconRef={conversationOptionsIconRef}\n                />\n              )}\n\n              {!showOptionIcon && conversation.muted && (\n                <ConversationOptionsContainer>\n                  <MuteIcon\n                    src={assetState.MUTE_CONVERSATION_ICON}\n                    beforeInjection={(svg) => {\n                      svg.classList.add(\"standard-icon\");\n                      svg.classList.add(\"three-dots-options-small\");\n                    }}\n                  />\n                </ConversationOptionsContainer>\n              )}\n            </ConversationItemInnerContainer>\n          </ConversationRecipientContainer>\n          {showOptions && (\n            <ConversationItemOptions\n              hideOptions={hideOptions}\n              outsideClickIgnoreClass={`conversation-ignore-outside-click`}\n              toggleMuteIcon={props.toggleMuteIcon}\n              windowBounds={windowBounds}\n              removeConversation={props.removeConversation}\n              conversationOptionsIconBounds={conversationOptionsIconBounds}\n              conversation={conversation}\n            />\n          )}\n        </ConversationItemContainer>\n      )}\n    </WindowSizeListener>\n  );\n};\n\nexport default ConversationListItem;\n","import imageDataURI from \"image-data-uri\";\nimport axios from \"../../../../axios\";\nimport Jimp from \"jimp/es\";\nimport isURL from \"validator/es/lib/isURL\";\nimport { getAuthHeader } from \"../../../../services/auth_header_services\";\n\nexport const formatText = (text, images) => {\n  if (text) {\n    return text;\n  } else {\n    return `You sent ${images.length} photo${images.length === 1 ? \"\" : \"s\"}`;\n  }\n};\n\nexport const compressImages = async (attachedImages) => {\n  let compressedImages = [];\n\n  for (const image of attachedImages) {\n    const { dataBuffer } = imageDataURI.decode(\n      isURL(image) ? await imageDataURI.encodeFromURL(image) : image\n    );\n    const jimpImage = await Jimp.read(dataBuffer);\n    jimpImage.quality(60);\n    if (jimpImage.bitmap.width > 1000 || jimpImage.bitmap.height > 1000) {\n      compressedImages.push(\n        await (await jimpImage.scaleToFit(1000, 1000)).getBufferAsync(\n          Jimp.MIME_JPEG\n        )\n      );\n    } else {\n      compressedImages.push(await jimpImage.getBufferAsync(Jimp.MIME_JPEG));\n    }\n  }\n\n  return compressedImages;\n};\n\nexport const postImages = async (uploadReadyImages) => {\n  const writeUrls = await Promise.all(\n    uploadReadyImages.map(() =>\n      axios.get(\"/conversations/signed_write_url\", getAuthHeader())\n    )\n  );\n\n  await Promise.all(\n    writeUrls.map(({ data }, index) =>\n      axios.put(data.url, uploadReadyImages[index], {\n        headers: { \"Content-Type\": Jimp.MIME_JPEG },\n      })\n    )\n  );\n\n  return writeUrls.map((item) => item.data.fileName);\n};\n","import {\n  currentConversationDispatch,\n  newCurrentConversationMessagesDispatch,\n  newMessagesDispatch,\n  recipientOnlineChangesDispatch,\n  updateConversationOnMessageDeleteDispatch,\n} from \"../../../../../redux/actions/message_actions\";\nimport axios from \"../../../../../axios\";\nimport {\n  getAuthHeader,\n  getAuthHeaderWithData,\n} from \"../../../../../services/auth_header_services\";\nimport { userDataDispatch } from \"../../../../../redux/actions/user_actions\";\nimport { formatText } from \"../../helpers/conversation_submit_images_helpers\";\nimport arrayMove from \"array-move\";\n\nconst updateConversation = async (\n  conversationIndex,\n  conversations,\n  newMessage,\n  setConversations\n) => {\n  if (conversationIndex !== -1) {\n    const conversation = conversations[conversationIndex];\n\n    newMessage.text\n      ? (conversation.latestMessageText = newMessage.text)\n      : (conversation.latestMessageText = formatText(\n          newMessage.text,\n          newMessage.images\n        ));\n\n    conversation.lastMessageTimeStamp = newMessage.createdAt;\n    setConversations(arrayMove(conversations, conversationIndex, 0));\n  } else {\n    const {\n      data: { conversation },\n    } = await axios.get(\n      \"/conversations\",\n      getAuthHeaderWithData({ conversation: newMessage.conversationId })\n    );\n    setConversations([conversation, ...conversations]);\n  }\n};\n\nexport const handleNewMessage = async ({\n  conversations,\n  setConversations,\n  dispatch,\n  state,\n}) => {\n  const { userId } = state.userState;\n  const {\n    newMessages,\n    currentConversation,\n    newCurrentConversationMessages,\n  } = state.messageState;\n\n  const newMessage = newMessages.shift();\n  const conversationIndex = conversations.findIndex(\n    (conversation) => conversation.id === newMessage.conversationId\n  );\n\n  await updateConversation(\n    conversationIndex,\n    conversations,\n    newMessage,\n    setConversations\n  );\n\n  if (newMessage.authoredUserId === userId) {\n    dispatch(currentConversationDispatch(conversations[conversationIndex]));\n  }\n\n  if (newMessage.conversationId === currentConversation.id) {\n    dispatch(\n      newCurrentConversationMessagesDispatch([\n        ...newCurrentConversationMessages,\n        newMessage,\n      ])\n    );\n  }\n\n  dispatch(newMessagesDispatch([...newMessages]));\n};\n\nexport const updateConversationUnread = async ({\n  conversations,\n  setConversations,\n  dispatch,\n  state,\n}) => {\n  const { currentConversation } = state.messageState;\n  const { userState } = state;\n\n  const conversationIndex = conversations.findIndex(\n    (conversation) => conversation.id === currentConversation.id\n  );\n\n  conversations[conversationIndex].unread = false;\n  setConversations([...conversations]);\n\n  try {\n    await axios.patch(\n      `/conversations/${currentConversation.id}`,\n      { readBy: userState.userId },\n      getAuthHeader()\n    );\n    const unreadConversations = conversations.find(\n      (conversation) => conversation.unread\n    );\n    if (!unreadConversations) {\n      dispatch(userDataDispatch({ ...userState, hasUnreadMessages: false }));\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const updateConversationAfterLastMessageDelete = async ({\n  conversations,\n  setConversations,\n  dispatch,\n  state,\n}) => {\n  const { updateConversationOnMessageDelete } = state.messageState;\n\n  const conversationId = updateConversationOnMessageDelete.shift();\n  const {\n    data: { conversation },\n  } = await axios.get(`/conversations/${conversationId}`, getAuthHeader());\n\n  const conversationIndex = conversations.findIndex(\n    (conversation) => conversation.id === conversationId\n  );\n  conversations[conversationIndex] = conversation;\n  setConversations([...conversations]);\n  dispatch(\n    updateConversationOnMessageDeleteDispatch([\n      ...updateConversationOnMessageDelete,\n    ])\n  );\n};\n\nexport const handleConversationOnlineStatusChange = ({\n  conversations,\n  setConversations,\n  dispatch,\n  state,\n}) => {\n  const { recipientOnlineChanges, currentConversation } = state.messageState;\n  const recipientOnlineChange = recipientOnlineChanges.shift();\n\n  const conversationIndex = conversations.findIndex(\n    (conversation) =>\n      conversation.recipientId === recipientOnlineChange.recipientUserId\n  );\n\n  conversations[conversationIndex].recipientIsOnline =\n    recipientOnlineChange.isOnline;\n  conversations[conversationIndex].recipientLastSignIn =\n    recipientOnlineChange.recipientLastSignIn;\n\n  setConversations([...conversations]);\n\n  if (\n    currentConversation.recipientId === recipientOnlineChange.recipientUserId\n  ) {\n    currentConversation.recipientIsOnline = recipientOnlineChange.isOnline;\n    currentConversation.recipientLastSignIn =\n      recipientOnlineChange.recipientLastSignIn;\n  }\n\n  dispatch(recipientOnlineChangesDispatch([...recipientOnlineChanges]));\n  dispatch(currentConversationDispatch({ ...currentConversation }));\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"../../../../axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { currentConversationDispatch } from \"../../../../redux/actions/message_actions\";\nimport Loading from \"../../../loading/Loading\";\nimport {\n  ConversationListContainer,\n  NoConversationsText,\n} from \"./styles/conversation_list_styles\";\nimport BottomScrollListener from \"react-bottom-scroll-listener\";\nimport ConversationListItem from \"./ConversationListItem\";\nimport { getAuthHeaderWithData } from \"../../../../services/auth_header_services\";\nimport { setNextPage } from \"../../../../services/load_data_services\";\nimport { Center } from \"../../../alignment/Center\";\nimport { GreyText } from \"../../../text/text\";\nimport {\n  handleNewMessage,\n  updateConversationUnread,\n  updateConversationAfterLastMessageDelete,\n  handleConversationOnlineStatusChange,\n} from \"./helpers/conversation_list_items_update_helper\";\n\nimport {\n  toggleMuteIcon,\n  removeConversation,\n} from \"./helpers/conversation_list_items_conversation_ui_helpers\";\n\nconst ConversationListItems = ({ conversationSearchContainerHeight }) => {\n  const [loading, setLoading] = useState(false);\n  const [conversations, setConversations] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [conversationsLoadedError, setConversationsLoadedError] = useState(\"\");\n\n  const messageState = useSelector(({ messageState }) => messageState);\n  const navbarHeight = useSelector(\n    ({ navbarState: { navbarHeight } }) => navbarHeight\n  );\n\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const options = {\n    conversations,\n    setConversations,\n    dispatch,\n    state,\n  };\n\n  const {\n    newMessages,\n    currentConversation,\n    updateConversationOnMessageDelete,\n    recipientOnlineChanges,\n  } = messageState;\n\n  const getConversations = async () => {\n    try {\n      setLoading(true);\n      const { data } = await axios.get(\n        \"/conversations\",\n        getAuthHeaderWithData({ page })\n      );\n      setConversations([...conversations, ...data.conversations]);\n      // console.log(data.conversations);\n      setHasNextPage(data.hasNextPage);\n      if (page === 1) {\n        dispatch(currentConversationDispatch({ ...data.conversations[0] }));\n      }\n    } catch (e) {\n      setConversationsLoadedError(\"Conversations could not be loaded\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (recipientOnlineChanges.length > 0) {\n      handleConversationOnlineStatusChange(options);\n    }\n  }, [recipientOnlineChanges.length]);\n\n  useEffect(() => {\n    if (updateConversationOnMessageDelete.length > 0) {\n      updateConversationAfterLastMessageDelete(options);\n    }\n  }, [updateConversationOnMessageDelete.length]);\n\n  useEffect(() => {\n    if (newMessages.length > 0) {\n      handleNewMessage(options);\n    }\n  }, [newMessages.length]);\n\n  useEffect(() => {\n    getConversations();\n  }, []);\n\n  useEffect(() => {\n    if (\n      currentConversation.id &&\n      currentConversation.unread &&\n      conversations.length > 0\n    ) {\n      updateConversationUnread(options);\n    }\n  }, [conversations.length, currentConversation.id]);\n\n  return (\n    <BottomScrollListener\n      onBottom={() => setNextPage(hasNextPage, loading, setPage, page)}\n    >\n      <ConversationListContainer\n        conversationSearchContainerHeight={conversationSearchContainerHeight}\n        navbarHeight={navbarHeight}\n      >\n        {loading && (\n          <Loading\n            solidBackground\n            marginBottom={conversationSearchContainerHeight}\n          />\n        )}\n\n        {conversations.length > 0 && (\n          <div>\n            {conversations.map((conversation, index) => (\n              <ConversationListItem\n                key={index}\n                removeConversation={() =>\n                  removeConversation(conversation.id, options)\n                }\n                toggleMuteIcon={() => toggleMuteIcon(conversation.id, options)}\n                conversation={conversation}\n              />\n            ))}\n          </div>\n        )}\n\n        {conversations.length === 0 && (\n          <Center vertical h100>\n            <GreyText>{conversationsLoadedError}</GreyText>\n          </Center>\n        )}\n\n        {!loading && conversationsLoadedError && (\n          <Center h100 vertical>\n            <NoConversationsText\n              marginBottom={conversationSearchContainerHeight}\n            >\n              {conversationsLoadedError}\n            </NoConversationsText>\n          </Center>\n        )}\n      </ConversationListContainer>\n    </BottomScrollListener>\n  );\n};\n\nexport default ConversationListItems;\n","import removeItems from \"remove-array-items\";\n\nexport const toggleMuteIcon = (\n  conversationIdToToggleMute,\n  { conversations, setConversations }\n) => {\n  const index = conversations.findIndex(\n    (conversation) => conversation.id === conversationIdToToggleMute\n  );\n  conversations[index].muted = !conversations[index].muted;\n  setConversations([...conversations]);\n};\n\nexport const removeConversation = (\n  conversationId,\n  { conversations, setConversations }\n) => {\n  const index = conversations.findIndex(\n    (conversation) => conversation.id === conversationId\n  );\n  removeItems(conversations, index, 1);\n  setConversations([...conversations]);\n};\n","import React, { useState } from \"react\";\nimport Measure from \"react-measure\";\n\nimport {\n  ConversationContainer,\n  ConversationSearchContainer,\n  ConversationSearchInput,\n} from \"./styles/conversation_list_styles\";\n\nimport ConversationListItems from \"./ConversationListItems\";\nimport { RelativePositionContainer } from \"../../../containers/container\";\n\nconst ConversationsList = () => {\n  const [\n    conversationSearchContainerHeight,\n    setConversationSearchContainerHeight,\n  ] = useState(0);\n\n  return (\n    <RelativePositionContainer>\n      <div id=\"conversation-options\" />\n      <ConversationContainer>\n        <Measure\n          bounds\n          onResize={({ bounds: { height } }) => {\n            setConversationSearchContainerHeight(height);\n          }}\n        >\n          {({ measureRef }) => (\n            <ConversationSearchContainer ref={measureRef}>\n              <ConversationSearchInput placeholder=\"Search Conversations\" />\n            </ConversationSearchContainer>\n          )}\n        </Measure>\n        <ConversationListItems\n          conversationSearchContainerHeight={conversationSearchContainerHeight}\n        />\n      </ConversationContainer>\n    </RelativePositionContainer>\n  );\n};\n\nexport default ConversationsList;\n","import React from \"react\";\nimport Scroll from \"react-scroll\";\n\nexport const onMessageContainerScroll = async (\n  e,\n  hasNextPage,\n  messageListContainerRef,\n  getMessages\n) => {\n  if (e.target.scrollTop === 0 && hasNextPage) {\n    const originalScrollHeight = messageListContainerRef.current.scrollHeight;\n    await getMessages();\n    const newScrollHeight = messageListContainerRef.current.scrollHeight;\n    messageListContainerRef.current.scrollTop =\n      newScrollHeight - originalScrollHeight;\n  }\n};\n\nexport const onMessageContainerScrollNew = async (\n  e,\n  hasNextPage,\n  messageListContainerRef,\n  page,\n  setPage\n) => {\n  // console.log(\"I m here\");\n  if (e.target.scrollTop === 0 && hasNextPage) {\n    const originalScrollHeight = messageListContainerRef.current.scrollHeight;\n\n    const newScrollHeight = messageListContainerRef.current.scrollHeight;\n    messageListContainerRef.current.scrollTop =\n      newScrollHeight - originalScrollHeight;\n\n    setPage(page + 1);\n  }\n};\n\nexport const scrollToBottom = (setScrolledToBottom) => {\n  const scroller = Scroll.scroller;\n\n  setTimeout(() => {\n    scroller.scrollTo(\"lastMessagePosition\", {\n      containerId: \"messageListContainer\",\n    });\n\n    setScrolledToBottom(true);\n  }, 0);\n};\n\nexport const isUserAtBottom = (messageListContainerRef) => {\n  const element = messageListContainerRef.current;\n  return element.scrollTop + element.clientHeight === element.scrollHeight;\n};\n","import styled from \"styled-components\"\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport is, {isNot} from 'styled-is'\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const ConversationButtonIcon = styled.img`\n  width: 2.5rem;\n  cursor: pointer;\n`\n\nexport const AttachedImagePreview = styled.div`\n  width: 10rem;\n  height: 10rem;\n`\n\nexport const AttachedImageContainer = styled.div`\n  display: flex;\n`\n\nexport const SubmitMessageForm = styled.form`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr auto auto;\n  grid-column-gap: 2rem;\n  width: 100%;\n  \n  ${is('alignCenter')`\n     align-items: center;\n  `}\n  \n  ${isNot('alignCenter')`\n     align-items: end;\n  `}\n`\n\nexport const RemoveAttachedImageIcon = styled.img`\n  width: 1.8rem;\n  position: absolute;\n  right: .6rem;\n  top: .6rem;\n  cursor: pointer;\n  display: none;\n`\n\nexport const AttachedImagePreviewItem = styled.img`\n  object-fit: cover;\n  object-position: center;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n`\n\nexport const AttachedImageItemContainer = styled.div`\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  position: relative;\n`\n\nexport const InputArea = styled(TextareaAutosize)`\n  padding: 1.2rem;\n  height: auto;\n  font-size: 1.6rem;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  width: 100%;\n`\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  AttachedImagePreview,\n  AttachedImagePreviewItem,\n  RemoveAttachedImageIcon,\n  AttachedImageItemContainer,\n} from \"./styles/conversation_button_styles\";\n\nconst MessageInputAttachedImages = (props) => {\n  const closeIcon = useSelector(\n    ({ assetState: { WHITE_CLOSE_CIRCLE } }) => WHITE_CLOSE_CIRCLE\n  );\n\n  const onMouseEnterLeaveThumbnail = (displaySetting, event) => {\n    if (event.target.parentElement.previousSibling) {\n      event.target.parentElement.previousSibling.style.display = displaySetting;\n    }\n  };\n\n  return (\n    <AttachedImageItemContainer\n      onMouseEnter={(e) => onMouseEnterLeaveThumbnail(\"block\", e)}\n      onMouseLeave={(e) => onMouseEnterLeaveThumbnail(\"none\", e)}\n    >\n      <RemoveAttachedImageIcon\n        src={closeIcon}\n        alt=\"Remove attached image\"\n        onClick={() => props.removeAttachedImage(props.index)}\n      />\n      <AttachedImagePreview>\n        <AttachedImagePreviewItem src={props.src} alt=\"Attached image\" />\n      </AttachedImagePreview>\n    </AttachedImageItemContainer>\n  );\n};\n\nexport default MessageInputAttachedImages;\n","import styled from \"styled-components\";\nimport is from 'styled-is'\n\nexport const EmojiSelectorContainer = styled.div`\n  padding: 1rem;\n  background-color: white;\n`\n\nexport const EmojiSelectorItems = styled.div`\n  display: flex;\n`\n\nexport const EmojiItemsContainer = styled.div`\n  overflow: scroll;\n  max-height: 38rem;\n  display: grid;\n  padding: 1.4rem;\n  grid-template-columns: repeat(6, 1fr);\n`\n\nexport const EmojiOuterContainer = styled.div`\n  min-width: 30rem;\n  min-height: 40rem;\n  transition: all linear .1s;\n  position: relative;\n`\n\nexport const EmojiItem = styled.div`\n  font-size: 3.2rem;\n  max-width: 3.2rem;\n  cursor: pointer;\n`\n\nexport const EmojiSelectorItem = styled.div`\n  padding: .2rem 1rem;\n  display: flex;\n  font-size: 2.1rem;\n  cursor: pointer;\n  width: 4.1rem;\n\n  ${is('active')`\n    background-color: #e9e9e9;\n  `}\n`\n\n","import React, { useState, useEffect } from \"react\";\nimport Measure from \"react-measure\";\nimport axios from \"../../../../axios\";\nimport { useSelector } from \"react-redux\";\nimport onClickOutside from \"react-onclickoutside\";\n\nimport { OptionsContainer } from \"../../../options/option_styles\";\nimport {\n  EmojiItem,\n  EmojiItemsContainer,\n  EmojiSelectorContainer,\n  EmojiSelectorItems,\n  EmojiSelectorItem,\n  EmojiOuterContainer,\n} from \"./styles/emoji_option_styles\";\nimport { Center } from \"../../../alignment/Center\";\nimport Loading from \"../../../loading/Loading\";\n\nconst EmojiContainer = (props) => {\n  const assetState = useSelector(({ assetState }) => assetState);\n  const [emojis, setEmojis] = useState([]);\n  const [height, setHeight] = useState(0);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const getEmojis = async () => {\n    const { data } = await axios.get(assetState.EMOJIS_NESTED_LIST);\n    setEmojis([...data]);\n  };\n\n  EmojiContainer.handleClickOutside = () => props.hideOptions();\n\n  useEffect(() => {\n    getEmojis();\n  }, []);\n\n  return (\n    <Measure bounds onResize={({ bounds: { height } }) => setHeight(height)}>\n      {({ measureRef }) => (\n        <OptionsContainer\n          ref={measureRef}\n          bottomArrow\n          height={height}\n          emojiContainer\n        >\n          <EmojiOuterContainer>\n            {emojis.length === 0 && <Loading solidBackground />}\n\n            <EmojiItemsContainer>\n              {emojis.length > 0 &&\n                emojis[activeIndex].subgroups.map((subgroup) =>\n                  subgroup.emojis.map((emoji) => (\n                    <Center vertical key={emoji.codes}>\n                      <EmojiItem onClick={() => props.addEmoji(emoji.char)}>\n                        {emoji.char}\n                      </EmojiItem>\n                    </Center>\n                  ))\n                )}\n            </EmojiItemsContainer>\n            <EmojiSelectorContainer>\n              <EmojiSelectorItems>\n                {emojis.length > 0 &&\n                  emojis.map((group, index) => (\n                    <Center\n                      key={group.subgroups[0].emojis[0].codes}\n                      onClick={() => setActiveIndex(index)}\n                      vertical\n                    >\n                      <EmojiSelectorItem active={index === activeIndex}>\n                        {group.subgroups[0].emojis[0].char}\n                      </EmojiSelectorItem>\n                    </Center>\n                  ))}\n              </EmojiSelectorItems>\n            </EmojiSelectorContainer>\n          </EmojiOuterContainer>\n        </OptionsContainer>\n      )}\n    </Measure>\n  );\n};\n\nEmojiContainer.prototype = {};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => EmojiContainer.handleClickOutside,\n};\n\nexport default onClickOutside(EmojiContainer, clickOutsideConfig);\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport removeItems from \"remove-array-items\";\nimport uniqid from \"uniqid\";\nimport axios from \"../../../../axios\";\nimport Measure from \"react-measure\";\n\nimport { notBlank } from \"../../../../services/validators/validators\";\nimport FilledButton from \"../../../buttons/FilledButton\";\nimport {\n  InputBox,\n  RelativePositionContainer,\n} from \"../../../containers/container\";\nimport {\n  messageDelivered,\n  messageNotDelivered,\n} from \"../../../../config/constants\";\n\nimport {\n  ButtonContainer,\n  ConversationButtonIcon,\n  SubmitMessageForm,\n  AttachedImageContainer,\n  InputArea,\n} from \"./styles/conversation_button_styles\";\n\nimport MessageInputAttachedImages from \"./MessageInputAttachedImages\";\nimport { handleFileChange } from \"../../../../helpers/image_helpers\";\nimport InputError from \"../../../inputs/InputError\";\nimport {\n  compressImages,\n  postImages,\n} from \"../helpers/conversation_submit_images_helpers\";\nimport { getAuthHeader } from \"../../../../services/auth_header_services\";\nimport {\n  newMessagesDispatch,\n  lastMessageStatusDispatch,\n} from \"../../../../redux/actions/message_actions\";\nimport EmojiContainer from \"./EmojiContainer\";\nimport { tabLandUp } from \"../../../media/media_helpers\";\nimport Media from \"react-media\";\n\nconst ConversationButtons = ({ handleNewMessage }) => {\n  const [attachedImages, setAttachedImages] = useState([]);\n  const [attachedImageError, setAttachedImageError] = useState(\"\");\n  const [emojiOptionsOpen, setEmojiOptionsOpen] = useState(false);\n  const [initialTextAreaHeight, setInitialTextAreaHeight] = useState(null);\n  const [alignButtonsCenter, setAlignButtonsCenter] = useState(true);\n\n  const assetState = useSelector(({ assetState }) => assetState);\n  const userId = useSelector(({ userState: { userId } }) => userId);\n  const currentConversation = useSelector(\n    ({ messageState: { currentConversation } }) => currentConversation\n  );\n  const newMessages = useSelector(\n    ({ messageState: { newMessages } }) => newMessages\n  );\n\n  const dispatch = useDispatch();\n\n  let disabled = true;\n\n  const uploadImageOptions = {\n    operation: \"add\",\n    attachedImages,\n  };\n\n  const removeAttachedImage = (index) => {\n    removeItems(attachedImages, index, 1);\n    setAttachedImages([...attachedImages]);\n  };\n\n  const createNewTempMessage = (text, images, id) => ({\n    text,\n    createdAt: Date.now(),\n    id,\n    realTimeMessage: true,\n    images,\n    authoredUserId: userId,\n    conversationId: currentConversation.id,\n    tempMessage: true,\n  });\n\n  const handleMessageUpdate = (\n    messageText,\n    attachedImages,\n    messageTextTempId,\n    messageImageTempId\n  ) => {\n    const tempMessages = [];\n\n    if (messageText) {\n      tempMessages.push(\n        createNewTempMessage(messageText, [], messageTextTempId)\n      );\n    }\n\n    if (attachedImages.length > 0) {\n      tempMessages.push(\n        createNewTempMessage(null, attachedImages, messageImageTempId)\n      );\n    }\n\n    dispatch(lastMessageStatusDispatch(\"\"));\n    dispatch(newMessagesDispatch([...newMessages, ...tempMessages]));\n  };\n\n  const submitMessage = ({ messageText }, form) => {\n    let imageFileNames = [];\n\n    const messageTextTempId = uniqid();\n    const messageImageTempId = uniqid();\n\n    const messageTextFromForm = messageText;\n    const attachedImagesFromForm = [...attachedImages];\n\n    if (form) {\n      form.change({ messageText: \"\" });\n    }\n\n    // handleMessageUpdate(\n    //   messageTextFromForm,\n    //   attachedImagesFromForm,\n    //   messageTextTempId,\n    //   messageImageTempId\n    // );\n\n    setAttachedImages([]);\n\n    setTimeout(async () => {\n      try {\n        if (attachedImages.length > 0) {\n          const compressedImages = await compressImages(attachedImagesFromForm);\n          imageFileNames = await postImages(compressedImages);\n        }\n\n        const payload = {\n          text: messageTextFromForm,\n          recipientId: currentConversation.recipientId,\n          conversationId: currentConversation.id,\n          images: imageFileNames,\n          messageTextTempId,\n          messageImageTempId,\n        };\n        const {\n          data: { success },\n        } = await axios.post(\n          \"/conversations/messages\",\n          payload,\n          getAuthHeader()\n        );\n\n        if (success) {\n          dispatch(lastMessageStatusDispatch(messageDelivered));\n        } else {\n          throw new Error();\n        }\n      } catch (e) {\n        dispatch(lastMessageStatusDispatch(messageNotDelivered));\n      }\n    }, 100);\n  };\n\n  const addEmoji = ([value], state, utils) => {\n    utils.changeValue(state, \"messageText\", (prevValue) =>\n      prevValue ? prevValue + value : value\n    );\n  };\n\n  const handleTextAreaHeightChange = (height) => {\n    if (initialTextAreaHeight === null) {\n      setInitialTextAreaHeight(height);\n    }\n\n    if (initialTextAreaHeight) {\n      if (height === initialTextAreaHeight) {\n        setAlignButtonsCenter(true);\n      } else {\n        setAlignButtonsCenter(false);\n      }\n    }\n  };\n\n  return (\n    <InputBox>\n      <AttachedImageContainer>\n        {attachedImages.map((image, index) => (\n          <MessageInputAttachedImages\n            key={index}\n            src={image}\n            index={index}\n            removeAttachedImage={removeAttachedImage}\n          />\n        ))}\n      </AttachedImageContainer>\n      <ButtonContainer>\n        <Form\n          onSubmit={submitMessage}\n          mutators={{ addEmoji }}\n          render={({ form, handleSubmit, invalid, values }) => (\n            <SubmitMessageForm\n              onSubmit={handleSubmit}\n              alignCenter={alignButtonsCenter}\n            >\n              <Field\n                name=\"messageText\"\n                render={(props) => (\n                  <InputArea\n                    onHeightChange={handleTextAreaHeightChange}\n                    maxRows={8}\n                    {...props.input}\n                  />\n                )}\n                validate={notBlank}\n              />\n\n              <FileReaderInput\n                onChange={(e, results) =>\n                  handleFileChange(\n                    e,\n                    results,\n                    setAttachedImages,\n                    setAttachedImageError,\n                    uploadImageOptions\n                  )\n                }\n              >\n                <ConversationButtonIcon\n                  src={assetState.ADD_IMAGE_ICON}\n                  alt=\"Add image icon\"\n                />\n              </FileReaderInput>\n\n              <Media query={tabLandUp}>\n                {(matches) =>\n                  matches && (\n                    <RelativePositionContainer>\n                      <ConversationButtonIcon\n                        onClick={() => setEmojiOptionsOpen(!emojiOptionsOpen)}\n                        className={`conversation-emoji-button-ignore-outside-click`}\n                        src={assetState.EMOJI_ICON}\n                        alt=\"Add emoji icon\"\n                      />\n\n                      {emojiOptionsOpen && (\n                        <EmojiContainer\n                          addEmoji={form.mutators.addEmoji}\n                          outsideClickIgnoreClass={`conversation-emoji-button-ignore-outside-click`}\n                          hideOptions={() => setEmojiOptionsOpen(false)}\n                        />\n                      )}\n                    </RelativePositionContainer>\n                  )\n                }\n              </Media>\n\n              {(disabled = invalid && attachedImages.length === 0)}\n\n              <Media query={tabLandUp}>\n                {(matches) => (\n                  <>\n                    {matches && (\n                      <FilledButton\n                        buttonText=\"Send\"\n                        mlAuto\n                        disabled={disabled}\n                        disabledColor={disabled}\n                        // onClick={handleNewMessage}\n                        type=\"submit\"\n                      />\n                    )}\n\n                    {!matches && (\n                      <button type=\"submit\">\n                        <ConversationButtonIcon\n                          src={assetState.SEND_MESSAGE_ICON}\n                          alt=\"send message icon\"\n                        />\n                      </button>\n                    )}\n                  </>\n                )}\n              </Media>\n            </SubmitMessageForm>\n          )}\n        />\n      </ButtonContainer>\n      {attachedImageError && <InputError error={attachedImageError} />}\n    </InputBox>\n  );\n};\n\nexport default ConversationButtons;\n","import styled from \"styled-components\"\nimport is, {isNot} from 'styled-is'\nimport {InputBoxBase} from \"../../../../containers/container\";\nimport {createMediaQuery, mediaQueries} from \"../../../../media/media_helpers\";\n\nconst messageProfileImage = \"3.2rem\"\nconst messageProfileImageRightMargin = \"1rem\"\n\nexport const MessageListContainer = styled.div`\n  ${InputBoxBase};\n  height: calc(100vh - ${props => props.offsetHeight}px - var(--messages-navbar-offset) - ${props => props.navbarHeight}px);\n  overflow: scroll;\n`\n\nexport const EmptyConversationContainer = styled.div`\n   display: flex;\n   align-items: center;\n   flex-direction: column;\n   height: 100%;\n   \n   ${is('noConversation')`\n     justify-content: center;\n  `};\n`\n\nexport const MessageContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: .2rem;\n  \n  ${is('isLastMessageInSeries')`\n      margin-bottom: 2rem;\n  `};\n  \n  ${is('isLastMessage')`\n      margin-bottom: 0;\n  `};\n`\n\nexport const MessageProfileImage = styled.img`\n  width: ${messageProfileImage};\n  border-radius: 100px;\n  margin-right: ${messageProfileImageRightMargin};\n`\n\nexport const MessagesInnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  \n   ${isNot('authored', 'isLastMessageInSeries')`\n      margin-left: calc(${messageProfileImage} + ${messageProfileImageRightMargin});\n  `};\n  \n  ${is('authored')`\n      margin-left: auto;\n      margin-right: 1.8rem;\n  `};\n  \n  ${is('images')`\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n  `};\n  \n   ${isNot('authored', 'isLastMessageInSeries')`\n      margin-left: calc(${messageProfileImage} + ${messageProfileImageRightMargin});\n  `};\n   \n   ${props => !props.authored && props.isLastMessageInSeries ? 'margin-bottom: 0' : ''}\n   \n`\n\nexport const MessagesOuterContainer = styled.div`\n  display: grid;\n  grid-column-gap: 2rem;\n  grid-template-columns: .4fr 1fr;\n  height: 100%;\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n     grid-template-columns: 1fr;\n  }\n`\n\nexport const MessagesContainer = styled.div`\n  width: calc(100% + var(--standard-scroll-bar-width));\n  \n   ${isNot('scrolledToBottom')`\n     visibility: hidden;\n  `};\n`\n","import styled from \"styled-components\"\nimport is, {isNot} from 'styled-is'\n\nexport const NewConversationText = styled.div`\n  font-size: 1.3rem;\n  margin-top: 1.2rem;\n`\n\nexport const MessageStatus = styled.div`\n  font-size: 1.2rem;\n  color: grey;\n  margin-top: .2rem;\n  margin-left: auto;\n`\n\nexport const MessageTimestamp = styled.div`\n  color: var(--black-trash-icon);\n  font-size: 1.2rem;\n`\n\nexport const MessageIconContainer = styled.div`\n ${is('authored')`\n     margin-left: auto;\n  `};\n`\n\nexport const MessageOptionsContainer = styled.div`\n\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  ${is('authored')`\n      order: -1;\n      margin-right: 2rem;\n  `};\n  \n  ${isNot('authored')`\n      margin-left: 2rem;\n  `};\n`\n\nconst smallBorderRadius = \"4px\"\nconst initialBorderRadius = '26px'\n\nexport const MessageText = styled.div`\n  padding: 1.5rem;\n  border-radius: 26px;\n  font-size: 1.4rem;\n  max-width: 40rem;\n  display: inline-block;\n  \n  ${is('authored', 'previousMessageIsSameAuthor')`\n     border-top-right-radius: ${smallBorderRadius};\n  `};\n  \n  ${props => !props.authored && props.previousMessageIsSameAuthor && `border-top-left-radius: ${smallBorderRadius};`}\n  \n  ${is('authored', 'previousMessageIsSameAuthor', 'timeStampBefore')`\n     border-top-right-radius: ${initialBorderRadius};\n  `};\n  \n  ${props => !props.authored && props.previousMessageIsSameAuthor && props.timeStampBefore && `border-top-left-radius: ${initialBorderRadius};`}\n  \n  ${is('authored', 'nextMessageIsSameAuthor')`\n     border-bottom-right-radius: ${smallBorderRadius};\n  `};\n  \n  ${props => !props.authored && props.nextMessageIsSameAuthor && `border-bottom-left-radius: ${smallBorderRadius};`}\n  \n  ${is('authored', 'nextMessageIsSameAuthor', 'timeStampAfter')`\n     border-bottom-right-radius: ${initialBorderRadius};\n  `};\n   \n  ${props => !props.authored && props.nextMessageIsSameAuthor && props.timeStampAfter && `border-top-left-radius: ${initialBorderRadius};`}\n  \n  ${isNot('authored')`\n    background-color: #F1F0F0;\n  `};\n  \n  ${is('authored')`\n     background-color: var(--primary-color);\n     color: white;\n     margin-left: auto;\n  `};\n`\n\nexport const TimeStamp = styled.div`\n  text-align: center;\n  color: var(--messages-grey-color);\n  font-size: 1.3rem;\n  margin-bottom: 2rem;\n  margin-top: 2rem;\n\n   ${is('firstMessage')`\n     margin-top: 0rem;\n  `};\n`\n","import styled from \"styled-components\";\nimport is from 'styled-is'\nimport ImageFadeIn from 'react-image-fade-in'\n\nconst getImagesColumns = length => {\n    if (length === 1) {\n        return 1\n    } else if (length % 2 === 0) {\n        return 2\n    } else {\n        return 3\n    }\n}\n\nexport const NewConversationProfileImage = styled.img`\n  width: 3.4rem;\n  border-radius: 100px;\n`\n\nexport const MessageImageContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => getImagesColumns(props.imagesLength)}, 1fr);\n  grid-gap: .6rem;\n  \n  ${is('messagePresent')`\n    margin-bottom: .8rem;\n  `};\n`\n\nexport const MessageImageInnerContainer = styled.div`\n \n  img {\n   width: 40rem;\n   border-radius: 10px;\n   cursor: pointer;\n    \n   ${props => getImagesColumns(props.imagesLength) === 2 && \"width: 30rem\"}\n   ${props => getImagesColumns(props.imagesLength) === 3 && \"width: 25rem\"}\n  }\n`","import React from \"react\";\nimport {\n  NewConversationText,\n  TimeStamp,\n} from \"../conversation_message_components/Message/styles/message_styles\";\n\nimport { EmptyConversationContainer } from \"../conversation_message_components/styles/message_container_styles\";\n\nimport { formatMessageTimeStamp } from \"../helpers/timestamp_helpers\";\n\nimport { NewConversationProfileImage } from \"../conversation_message_components/Message/styles/message_image_styles\";\nimport { useSelector } from \"react-redux\";\n\nconst NewConversationGreeting = () => {\n  const currentConversation = useSelector(\n    ({ messageState: { currentConversation } }) => currentConversation\n  );\n\n  return (\n    <div>\n      {currentConversation.createdAt && (\n        <EmptyConversationContainer>\n          <TimeStamp first newMessage>\n            {formatMessageTimeStamp(currentConversation.createdAt)}\n          </TimeStamp>\n          <NewConversationProfileImage\n            src={currentConversation.recipientProfileImage}\n          />\n          <NewConversationText>\n            {\" \"}\n            Say hi to {currentConversation.recipientName}{\" \"}\n          </NewConversationText>\n        </EmptyConversationContainer>\n      )}\n    </div>\n  );\n};\n\nexport default NewConversationGreeting;\n","import React, { useState } from \"react\";\nimport axios from \"../../../../../axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Option, OptionsContainer } from \"../../../../options/option_styles\";\nimport onClickOutside from \"react-onclickoutside\";\nimport Modal from \"../../../../modals/Modal\";\nimport ConfirmAlert from \"../../../../modals/ConfirmAlert\";\nimport { getAuthHeader } from \"../../../../../services/auth_header_services\";\nimport { deleteMessagesDispatch } from \"../../../../../redux/actions/message_actions\";\n\nconst MessageOptionsBox = (props) => {\n  const [showDeleteMessageModal, setShowDeleteMessageModal] = useState(false);\n  const deleteMessages = useSelector(\n    ({ messageState: { deleteMessages } }) => deleteMessages\n  );\n\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    const messageId = props.message.id;\n\n    const { data } = await axios.delete(\n      `/conversations/messages/${messageId}`,\n      getAuthHeader()\n    );\n\n    if (data.success) {\n      dispatch(deleteMessagesDispatch([...deleteMessages, messageId]));\n    } else {\n      throw new Error();\n    }\n  };\n\n  MessageOptionsBox.handleClickOutside = () => props.hideOptions();\n\n  return (\n    <>\n      <OptionsContainer bottomArrow messageOptions>\n        <Option onClick={() => setShowDeleteMessageModal(true)}>Delete</Option>\n      </OptionsContainer>\n\n      {showDeleteMessageModal && (\n        <Modal\n          closeModal={props.hideOptions}\n          outsideClickIgnoreClass={props.outsideClickIgnoreClass}\n        >\n          <ConfirmAlert\n            text=\"Are you sure you want to delete your message?\"\n            buttonText=\"Delete\"\n            closeAlert={props.hideOptions}\n            action={handleDelete}\n            heading=\"Delete Message\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nMessageOptionsBox.prototype = {};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => MessageOptionsBox.handleClickOutside,\n};\n\nexport default onClickOutside(MessageOptionsBox, clickOutsideConfig);\n","import {\n  MessageIconContainer,\n  MessageOptionsContainer,\n  MessageTimestamp,\n} from \"./styles/message_styles\";\nimport { formatMessageTimeStamp } from \"../../helpers/timestamp_helpers\";\nimport Icon from \"../../../../icons/Icon\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport MessageOptionsBox from \"./MessageOptionsBox\";\n\nconst MessageOptions = ({\n  authored,\n  setOpenOptions,\n  openOptions,\n  message,\n  hideMessageOptions,\n}) => {\n  const messageOptionsIcon = useSelector(\n    ({ assetState: { OPTIONS_ICON } }) => OPTIONS_ICON\n  );\n\n  const hideOptions = () => {\n    hideMessageOptions();\n    setOpenOptions(false);\n  };\n\n  return (\n    <MessageOptionsContainer authored={authored}>\n      <MessageTimestamp>\n        {formatMessageTimeStamp(message.createdAt)}\n      </MessageTimestamp>\n\n      {authored && (\n        <MessageIconContainer\n          authored={authored}\n          onClick={() => setOpenOptions(true)}\n          className={`message-options-ignore-click`}\n        >\n          <Icon\n            svgClasses={[\"standard-icon\", \"three-dots-options-small\"]}\n            src={messageOptionsIcon}\n          />\n        </MessageIconContainer>\n      )}\n\n      {authored && openOptions && (\n        <MessageOptionsBox\n          message={message}\n          hideOptions={hideOptions}\n          outsideClickIgnoreClass={`message-options-ignore-click`}\n        />\n      )}\n    </MessageOptionsContainer>\n  );\n};\n\nexport default MessageOptions;\n","import {\n  MessageImageContainer,\n  MessageImageInnerContainer,\n} from \"./styles/message_image_styles\";\nimport ImageFadeIn from \"react-image-fade-in\";\nimport { messageImagesLoadedDispatch } from \"../../../../../redux/actions/message_actions\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst MessageImages = ({ message, nextMessage }) => {\n  const dispatch = useDispatch();\n  const messageImagesLoaded = useSelector(\n    ({ messageState: { messageImagesLoaded } }) => messageImagesLoaded\n  );\n  return (\n    <MessageImageContainer\n      messagePresent={message.text && nextMessage}\n      imagesLength={message.images.length}\n    >\n      {message.images.map((image, index) => (\n        <MessageImageInnerContainer\n          key={index}\n          imagesLength={message.images.length}\n          multipleImages={message.images.length > 0}\n        >\n          <ImageFadeIn\n            src={image}\n            onLoad={() =>\n              dispatch(messageImagesLoadedDispatch(messageImagesLoaded + 1))\n            }\n            alt=\"Message image\"\n          />\n        </MessageImageInnerContainer>\n      ))}\n    </MessageImageContainer>\n  );\n};\n\nexport default MessageImages;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { MessageStatus, MessageText } from \"./styles/message_styles\";\n\nimport {\n  MessageContainer,\n  MessagesInnerContainer,\n  MessageProfileImage,\n} from \"../styles/message_container_styles\";\n\nimport { getDaysDiff } from \"../../helpers/timestamp_helpers\";\nimport { FlexContainer } from \"../../../../containers/container\";\nimport MessageOptions from \"./MessageOptions\";\nimport MessageImages from \"./MessageImages\";\n\nconst Message = ({\n  message,\n  nextMessage,\n  previousMessage,\n  timeStampBefore,\n  timeStampAfter,\n}) => {\n  // console.log(message);\n  // console.log(\"EXT >>>\", nextMessage);\n  const [showOptions, setShowOptions] = useState(false);\n  const [openOptions, setOpenOptions] = useState(false);\n\n  const userId = useSelector(({ userState: { userId } }) => userId);\n  const messageState = useSelector(({ messageState }) => messageState);\n\n  const { lastMessageStatus, currentConversation } = messageState;\n  const authored = userId === message.authoredUserId;\n  const previousMessageIsSameAuthor =\n    previousMessage &&\n    message.authoredUserId === previousMessage.authoredUserId;\n  const nextMessageIsSameAuthor =\n    nextMessage && message.authoredUserId === nextMessage.authoredUserId;\n\n  const isLastMessageInSeries = (message, nextMessage) => {\n    if (!nextMessage) {\n      return true;\n    } else if (message.authoredUserId !== nextMessage.authoredUserId) {\n      return true;\n    } else {\n      return 1 < getDaysDiff(message.createdAt, nextMessage.createdAt);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!openOptions) {\n      setShowOptions(false);\n    }\n  };\n\n  return (\n    <MessageContainer\n      key={message.id}\n      isLastMessageInSeries={isLastMessageInSeries(message, nextMessage)}\n      isLastMessage={!nextMessage}\n      image={!message.text}\n    >\n      {isLastMessageInSeries(message, nextMessage) && !authored && (\n        <MessageProfileImage\n          src={currentConversation.recipientProfileImage}\n          alt=\"Message profile image\"\n        />\n      )}\n\n      <MessagesInnerContainer\n        authored={authored}\n        isLastMessageInSeries={isLastMessageInSeries(message, nextMessage)}\n        images={message.images.length > 0}\n      >\n        <FlexContainer\n          alignCenter\n          onMouseLeave={handleMouseLeave}\n          onMouseEnter={() => setShowOptions(true)}\n        >\n          {message.images.length > 0 && (\n            <MessageImages message={message} nextMessage={nextMessage} />\n          )}\n\n          {message.text && (\n            <MessageText\n              authored={authored}\n              timeStampAfter={timeStampAfter}\n              timeStampBefore={timeStampBefore}\n              previousMessageIsSameAuthor={previousMessageIsSameAuthor}\n              nextMessageIsSameAuthor={nextMessageIsSameAuthor}\n            >\n              {message.text}\n            </MessageText>\n          )}\n\n          {showOptions && (\n            <MessageOptions\n              authored={authored}\n              hideMessageOptions={() => setShowOptions(false)}\n              message={message}\n              openOptions={openOptions}\n              setOpenOptions={setOpenOptions}\n            />\n          )}\n        </FlexContainer>\n\n        {!nextMessage && authored && (\n          <MessageStatus> {lastMessageStatus} </MessageStatus>\n        )}\n      </MessagesInnerContainer>\n    </MessageContainer>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport uniqid from \"uniqid\";\n\nimport {\n  formatMessageTimeStamp,\n  getDaysDiff,\n} from \"../helpers/timestamp_helpers\";\nimport { TimeStamp } from \"./Message/styles/message_styles\";\nimport Message from \"./Message/Message\";\n\nconst ConversationRenderMessage = ({\n  message,\n  index,\n  nextMessage,\n  previousMessage,\n}) => {\n  // console.log(message);\n  const timeStampAfter =\n    nextMessage && 1 < getDaysDiff(message.createdAt, nextMessage.createdAt);\n  const timeStampBefore =\n    previousMessage &&\n    1 < getDaysDiff(message.createdAt, previousMessage.createdAt);\n\n  return (\n    <>\n      {index === 0 && (\n        <TimeStamp key={uniqid()} firstMessage>\n          {formatMessageTimeStamp(message.createdAt)}\n        </TimeStamp>\n      )}\n\n      <Message\n        key={message.id}\n        previousMessage={previousMessage}\n        message={message}\n        timeStampBefore={timeStampBefore}\n        timeStampAfter={timeStampAfter}\n        nextMessage={nextMessage}\n      />\n\n      {timeStampAfter && (\n        <TimeStamp key={uniqid()}>\n          {\" \"}\n          {formatMessageTimeStamp(nextMessage.createdAt)}{\" \"}\n        </TimeStamp>\n      )}\n    </>\n  );\n};\n\nexport default ConversationRenderMessage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Scroll from \"react-scroll\";\nimport axios from \"../../../../axios\";\nimport removeItems from \"remove-array-items\";\n\nimport {\n  MessageListContainer,\n  MessagesContainer,\n} from \"./styles/message_container_styles\";\n\nimport {\n  lastMessageStatusDispatch,\n  newCurrentConversationMessagesDispatch,\n  updateConversationOnMessageDeleteDispatch,\n} from \"../../../../redux/actions/message_actions\";\n\nimport { messageDelivered } from \"../../../../config/constants\";\nimport {\n  onMessageContainerScroll,\n  scrollToBottom,\n  isUserAtBottom,\n  onMessageContainerScrollNew,\n} from \"./helpers/conversation_message_display_helpers\";\n\nimport NewConversationGreeting from \"../conversation_list_components/NewConversationGreeting\";\nimport { getAuthHeaderWithData } from \"../../../../services/auth_header_services\";\nimport { Center } from \"../../../alignment/Center\";\nimport ConversationRenderMessage from \"./ConversationRenderMessage\";\nimport Loading from \"../../../loading/Loading\";\nimport { GreyText } from \"../../../text/text\";\n\nconst ConversationMessageDisplay = (props) => {\n  const Element = Scroll.Element;\n\n  const messageListContainerRef = useRef(null);\n\n  const messageState = useSelector(({ messageState }) => messageState);\n  const navbarHeight = useSelector(\n    ({ navbarState: { navbarHeight } }) => navbarHeight\n  );\n  const userId = useSelector(({ userState: { userId } }) => userId);\n\n  const {\n    currentConversation,\n    newCurrentConversationMessages,\n    lastMessageStatus,\n    messageImagesLoaded,\n    deleteMessages,\n    updateConversationOnMessageDelete,\n  } = messageState;\n\n  const [postsLoadingError, setPostsLoadingError] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const getMessages = async (pageP, conversationIdP) => {\n    try {\n      setLoading(true);\n      setPostsLoadingError(\"\");\n\n      let tmpPage = pageP ? pageP : page;\n      let tmpConId = conversationIdP ? conversationIdP : currentConversation.id;\n\n      const payload = {\n        page: tmpPage,\n        conversationId: tmpConId,\n      };\n\n      const { data } = await axios.get(\n        \"/conversations/messages\",\n        getAuthHeaderWithData(payload)\n      );\n\n      if (data.success) {\n        setHasNextPage(hasNextPage);\n\n        if (tmpPage === 1) {\n          props.setMessages(data.messages);\n          dispatch(lastMessageStatusDispatch(messageDelivered));\n        } else {\n          props.setMessages([...data.messages, ...props.messages]);\n        }\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      setPostsLoadingError(\"Messages could not loaded\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleNewMessage = () => {\n    console.log(newCurrentConversationMessages);\n    const newCurrentConversationMessage = newCurrentConversationMessages.shift();\n\n    if (\n      props.messages.findIndex(\n        (message) => message.tempId === newCurrentConversationMessage.tempId\n      ) === -1\n    ) {\n      const messageAuthoredByUser =\n        newCurrentConversationMessage.authoredUserId === userId;\n      props.setMessages([...props.messages, newCurrentConversationMessage]);\n      dispatch(\n        newCurrentConversationMessagesDispatch(newCurrentConversationMessages)\n      );\n      props.setNewMessageAdded(true);\n\n      if (\n        messageAuthoredByUser ||\n        (!messageAuthoredByUser && isUserAtBottom(messageListContainerRef))\n      ) {\n        scrollToBottom(props.setScrolledToBottom);\n      }\n    }\n  };\n\n  const handleDeleteMessage = () => {\n    const deleteMessageId = deleteMessages.shift();\n    const deleteMessageIndex = props.messages.findIndex(\n      (message) => message.id === deleteMessageId\n    );\n\n    if (props.messages.length === deleteMessageIndex + 1) {\n      const newConversationUpdate = [\n        ...updateConversationOnMessageDelete,\n        props.messages[deleteMessageIndex].conversationId,\n      ];\n      dispatch(\n        updateConversationOnMessageDeleteDispatch(newConversationUpdate)\n      );\n    }\n\n    removeItems(props.messages, deleteMessageIndex, 1);\n    props.setMessages([...props.messages]);\n  };\n\n  useEffect(() => {\n    if (deleteMessages.length > 0) {\n      handleDeleteMessage();\n    }\n  }, [deleteMessages.length]);\n\n  useEffect(() => {\n    if (newCurrentConversationMessages.length > 0) {\n      handleNewMessage();\n    }\n  }, [newCurrentConversationMessages.length]);\n\n  useEffect(() => {\n    if (currentConversation.id) {\n      if (page === 1) {\n        getMessages(1, currentConversation.id);\n        setPage(1);\n      } else {\n        props.setMessages([]);\n        setPage(1);\n      }\n    }\n  }, [currentConversation.id]);\n\n  useEffect(() => {\n    if (\n      page === 2 &&\n      props.messages.length > 0 &&\n      lastMessageStatus &&\n      !props.newMessageAdded\n    ) {\n      scrollToBottom(props.setScrolledToBottom);\n    }\n  }, [page, props.messages.length, lastMessageStatus, messageImagesLoaded]);\n\n  useEffect(() => {\n    if (currentConversation.id) {\n      getMessages(page, currentConversation.id);\n    }\n  }, [page]);\n\n  return (\n    <MessageListContainer\n      borderBottom\n      navbarHeight={navbarHeight}\n      offsetHeight={props.offsetHeight}\n      ref={messageListContainerRef}\n      onScroll={(e) =>\n        onMessageContainerScrollNew(\n          e,\n          hasNextPage,\n          messageListContainerRef,\n          page,\n          setPage\n        )\n      }\n      id=\"messageListContainer\"\n    >\n      {loading && page === 1 && <Loading solidBackground />}\n\n      {postsLoadingError && (\n        <Center vertical h100>\n          <GreyText>{postsLoadingError}</GreyText>\n        </Center>\n      )}\n\n      {!postsLoadingError && props.messages.length > 0 && (\n        <div scrolledToBottom={props.scrolledToBottom}>\n          {props.messages.map((message, index) => (\n            <ConversationRenderMessage\n              message={message}\n              key={index}\n              previousMessage={props.messages[index - 1]}\n              nextMessage={props.messages[index + 1]}\n              index={index}\n            />\n          ))}\n        </div>\n      )}\n\n      <Element name=\"lastMessagePosition\" />\n\n      {!postsLoadingError && props.messages.length === 0 && (\n        <NewConversationGreeting />\n      )}\n    </MessageListContainer>\n  );\n};\n\nexport default ConversationMessageDisplay;\n","import styled from \"styled-components\";\n\nexport const ConversationHeadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const ConversationImage = styled.img`\n  border-radius: 100px;\n  width: 5.2rem;\n  margin-right: 1.2rem;\n`\n\nexport const ConversationHeadingText = styled.div`\n  font-size: 1.9rem;\n  font-family: \"Bold\";\n  margin-bottom: .2rem;\n`\n\nexport const ConversationActiveText = styled.div`\n  color: var(--messages-grey-color);\n  font-size: 1.3rem;\n`\n\nexport const MobileBackButton = styled.img`\n  width: 1.4rem;\n  margin-right: 2.2rem;\n`\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport isObjectEmpty from \"is-object-empty\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport addSubtractDate from \"add-subtract-date\";\nimport humanInterval from \"human-interval\";\nimport { canonical } from \"javascript-time-ago/gradation\";\nimport sleep from \"sleep-promise\";\n\nimport {\n  ConversationHeadingContainer,\n  ConversationImage,\n  ConversationHeadingText,\n  ConversationActiveText,\n  MobileBackButton,\n} from \"./styles/conversation_heading_styles\";\n\nimport {\n  InputBox,\n  RelativePositionContainer,\n} from \"../../../containers/container\";\nimport { ConversationOnlineIndicator } from \"../conversation_list_components/styles/conversation_item_styles\";\nimport Media from \"react-media\";\nimport { tabPortDown } from \"../../../media/media_helpers\";\nimport { mobileActiveConversationDispatch } from \"../../../../redux/actions/message_actions\";\n\nTimeAgo.addLocale(en);\n\nconst ConversationHeading = () => {\n  const timeAgo = new TimeAgo(\"en-US\");\n  const currentConversation = useSelector(\n    ({ messageState: { currentConversation } }) => currentConversation\n  );\n  const assetState = useSelector(({ assetState }) => assetState);\n\n  const dispatch = useDispatch();\n\n  const [update, setUpdate] = useState(0);\n\n  const handleUpdate = async () => {\n    await sleep(humanInterval(\"10 minutes\"));\n    setUpdate(update + 1);\n  };\n\n  useEffect(() => {\n    handleUpdate();\n  }, [update]);\n\n  let activeText;\n  if (currentConversation.recipientIsOnline) {\n    activeText = \"Online Now\";\n  } else {\n    const date = new Date(currentConversation.recipientLastSignIn);\n    if (currentConversation.recipientLastSignIn) {\n      activeText = timeAgo.format(\n        addSubtractDate.subtract(date, 1, \"seconds\"),\n        {\n          gradation: canonical,\n        }\n      );\n    }\n  }\n\n  return (\n    <InputBox\n      smallPadding\n      borderBottom\n      emptyConversation={isObjectEmpty(currentConversation)}\n    >\n      {currentConversation.recipientLastSignIn && (\n        <ConversationHeadingContainer>\n          <Media query={tabPortDown}>\n            {(matches) =>\n              matches && (\n                <MobileBackButton\n                  src={assetState.BACK_ICON}\n                  onClick={() => {\n                    dispatch(mobileActiveConversationDispatch(false));\n                  }}\n                />\n              )\n            }\n          </Media>\n          <RelativePositionContainer>\n            <ConversationImage\n              src={currentConversation.recipientProfileImage}\n            />\n            {currentConversation.recipientIsOnline && (\n              <ConversationOnlineIndicator headingIndicator />\n            )}\n          </RelativePositionContainer>\n          <div>\n            <ConversationHeadingText>\n              {currentConversation.recipientName}\n            </ConversationHeadingText>\n            <ConversationActiveText>{activeText}</ConversationActiveText>\n          </div>\n        </ConversationHeadingContainer>\n      )}\n    </InputBox>\n  );\n};\n\nexport default ConversationHeading;\n","import React, { useState, useRef } from \"react\";\nimport {\n  onMessageContainerScroll,\n  scrollToBottom,\n  isUserAtBottom,\n  onMessageContainerScrollNew,\n} from \"./helpers/conversation_message_display_helpers\";\nimport {\n  lastMessageStatusDispatch,\n  newCurrentConversationMessagesDispatch,\n  updateConversationOnMessageDeleteDispatch,\n} from \"../../../../redux/actions/message_actions\";\nimport {\n  ContentSection,\n  FullHeightContainer,\n} from \"../../../containers/container\";\nimport ConversationButtons from \"./ConversationButtons\";\nimport Loading from \"../../../loading/Loading\";\nimport ConversationMessageDisplay from \"./ConversationMessageDisplay\";\nimport Measure from \"react-measure\";\nimport ConversationHeading from \"./ConversationHeading\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst ConversationDetails = () => {\n  const messageListContainerRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [headingBoxHeight, setHeadingBoxHeight] = useState(0);\n  const [buttonContainerHeight, setButtonContainerHeight] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const [scrolledToBottom, setScrolledToBottom] = useState(false);\n  const [newMessageAdded, setNewMessageAdded] = useState(false);\n  const dispatch = useDispatch();\n  const messageState = useSelector(({ messageState }) => messageState);\n  const navbarHeight = useSelector(\n    ({ navbarState: { navbarHeight } }) => navbarHeight\n  );\n  const userId = useSelector(({ userState: { userId } }) => userId);\n  const {\n    currentConversation,\n    newCurrentConversationMessages,\n    lastMessageStatus,\n    messageImagesLoaded,\n    deleteMessages,\n    updateConversationOnMessageDelete,\n  } = messageState;\n\n  const handleNewMessage = () => {\n    const newCurrentConversationMessage = newCurrentConversationMessages.shift();\n\n    if (\n      messages.findIndex(\n        (message) => message.tempId === newCurrentConversationMessage.tempId\n      ) === -1\n    ) {\n      console.log(\"I m \");\n      const messageAuthoredByUser =\n        newCurrentConversationMessage.authoredUserId === userId;\n      setMessages([...messages, newCurrentConversationMessage]);\n      dispatch(\n        newCurrentConversationMessagesDispatch(newCurrentConversationMessages)\n      );\n      setNewMessageAdded(true);\n\n      if (\n        messageAuthoredByUser ||\n        (!messageAuthoredByUser && isUserAtBottom(messageListContainerRef))\n      ) {\n        scrollToBottom(setScrolledToBottom);\n      }\n    }\n  };\n\n  return (\n    <ContentSection>\n      {loading && <Loading loadingText=\"Loading Messages\" solidBackground />}\n\n      <FullHeightContainer>\n        <Measure\n          bounds\n          onResize={({ bounds: { height } }) => setHeadingBoxHeight(height)}\n        >\n          {({ measureRef }) => (\n            <div ref={measureRef}>\n              <ConversationHeading />\n            </div>\n          )}\n        </Measure>\n\n        <ConversationMessageDisplay\n          offsetHeight={headingBoxHeight + buttonContainerHeight}\n          setMessages={setMessages}\n          messages={messages}\n          newMessageAdded={newMessageAdded}\n          setScrolledToBottom={setScrolledToBottom}\n          scrolledToBottom={scrolledToBottom}\n          setNewMessageAdded={setNewMessageAdded}\n        />\n\n        <Measure\n          bounds\n          onResize={({ bounds: { height } }) =>\n            setButtonContainerHeight(height)\n          }\n        >\n          {({ measureRef }) => (\n            <div ref={measureRef}>\n              <ConversationButtons handleNewMessage={handleNewMessage} />\n            </div>\n          )}\n        </Measure>\n      </FullHeightContainer>\n    </ContentSection>\n  );\n};\n\nexport default ConversationDetails;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../axios\";\n\nimport ConversationsList from \"./conversation_list_components/ConversationsList\";\nimport ConversationDetails from \"./conversation_message_components/ConversationDetails\";\nimport VerifyEmailNotice from \"../../notices/VerifyEmailNotice\";\n\nimport { MessagesOuterContainer } from \"./conversation_message_components/styles/message_container_styles\";\nimport { StandardContainer } from \"../../containers/container\";\nimport { useDisableScroll } from \"../../modals/helpers/modal_helpers\";\nimport { getAuthHeader } from \"../../../services/auth_header_services\";\nimport { tabLandUp } from \"../../media/media_helpers\";\nimport Media from \"react-media\";\nimport { SearchSpacer } from \"../home/styles/search_styles\";\nimport InputLocation from \"../../inputs/location/InputLocation\";\n\nimport ToggleDisplay from \"react-toggle-display\";\n\nconst Messages = () => {\n  const emailVerified = useSelector(\n    ({ userState: { emailVerified } }) => emailVerified\n  );\n  const navbarHeight = useSelector(\n    ({ navbarState: { navbarHeight } }) => navbarHeight\n  );\n\n  const { mobileActiveConversation } = useSelector(\n    ({ messageState }) => messageState\n  );\n\n  useDisableScroll();\n\n  const clearActiveConversation = async () => {\n    try {\n      await axios.delete(\n        \"/conversations/loaded_conversations\",\n        getAuthHeader()\n      );\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    return () => {\n      clearActiveConversation();\n    };\n  }, []);\n\n  return (\n    <div>\n      {emailVerified && (\n        <StandardContainer messages navbarHeight={navbarHeight}>\n          <MessagesOuterContainer>\n            <Media query={tabLandUp}>\n              {(matches) => (\n                <>\n                  {matches && (\n                    <>\n                      <ConversationsList />\n                      <ConversationDetails />\n                    </>\n                  )}\n\n                  {!matches && (\n                    <>\n                      <ToggleDisplay show={!mobileActiveConversation}>\n                        <ConversationsList />\n                      </ToggleDisplay>\n                      <ToggleDisplay show={mobileActiveConversation}>\n                        <ConversationDetails />\n                      </ToggleDisplay>\n                    </>\n                  )}\n                </>\n              )}\n            </Media>\n          </MessagesOuterContainer>\n        </StandardContainer>\n      )}\n\n      {emailVerified === false && <VerifyEmailNotice />}\n    </div>\n  );\n};\n\nexport default Messages;\n","import styled from \"styled-components\"\nimport {createMediaQuery, mediaQueries} from \"../../media/media_helpers\";\n\nexport const PostDetailsContainer = styled.div`\n  background-color: white;\n  padding: 3rem;\n  position: relative;\n`\n\nexport const PostTitle = styled.h1`\n  font-size: 4rem;\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n    font-size: 3rem;\n  }\n`\n\nexport const PostTitleContainer = styled.div`\n  margin-bottom: 2rem;\n  display: flex;\n  align-items: center;\n`\n\nexport const PostOuterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1.2fr;\n  grid-column-gap: 9rem;\n  margin-top: 6rem;\n  margin-bottom: 6rem;\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n        grid-template-columns: 1fr;\n        grid-row-gap: 6rem;\n        margin-top: 2rem;\n        margin-bottom: 6rem;\n  }\n`\n\nexport const PostOptionsContainer = styled.div`\n  margin-left: auto;\n  margin-top: .2rem;\n  position: relative;\n`\n\nexport const PostDescriptionContainer = styled.div`\n  margin-bottom: 4rem;\n`\n\nexport const SectionTitle = styled.div`\n  margin-bottom: .6rem;\n`\n\nexport const PostDetailsSection = styled.div`\n  margin-bottom: 4rem;\n`\n\nexport const DateAuthorText = styled.div`\n  margin-bottom: 4rem;\n`","import React, { useState } from \"react\";\nimport axios from \"../../axios\";\nimport { Form } from \"react-final-form\";\nimport { sentenceCase } from \"sentence-case\";\n\nimport {\n  ModalHeading,\n  ModalText,\n  ModalFormContainer,\n} from \"./styles/modal_styles\";\n\nimport FilledButton from \"../buttons/FilledButton\";\nimport HollowButton from \"../buttons/HollowButton\";\nimport InputError from \"../inputs/InputError\";\nimport InputOptions from \"../inputs/InputOptions\";\nimport { reportOptions } from \"../../config/constants\";\nimport { getAuthHeader } from \"../../services/auth_header_services\";\nimport { FlexContainer } from \"../containers/container\";\nimport { setValue } from \"../forms/form_helpers\";\nimport { FORM_ERROR } from \"final-form\";\nimport { getInitialFormValues } from \"../forms/form_helpers\";\n\nconst ReportModal = (props) => {\n  const [formSubmitted, setFormSubmitted] = useState(false);\n\n  const submitReport = async (values) => {\n    try {\n      const payload = {\n        ...values,\n        reportedEntityId: props.reportedEntityId,\n        reportedEntityType: props.reportedEntityType,\n      };\n\n      const {\n        data: { success, error },\n      } = await axios.post(\"/report\", payload, getAuthHeader());\n      if (!success) {\n        return { [FORM_ERROR]: error };\n      }\n\n      setFormSubmitted(true);\n    } catch (e) {\n      return { [FORM_ERROR]: \"Something went wrong\" };\n    }\n  };\n\n  return (\n    <div>\n      <ModalHeading>\n        Report {sentenceCase(props.reportedEntityType)}\n      </ModalHeading>\n      {!formSubmitted && (\n        <div>\n          <ModalText>\n            We're sorry you had this experience. Please let us know which of the\n            following apply.\n          </ModalText>\n\n          <Form\n            onSubmit={submitReport}\n            mutators={{ setValue }}\n            initialValues={getInitialFormValues({ report: \"Hate Speech\" })}\n            render={({\n              handleSubmit,\n              form,\n              submitting,\n              submitError,\n              invalid,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <ModalFormContainer>\n                  <InputOptions\n                    label=\"Choose the following that apply\"\n                    options={reportOptions}\n                    type=\"radio\"\n                    setValue={form.mutators.setValue}\n                    name=\"type\"\n                  />\n                </ModalFormContainer>\n                <FlexContainer>\n                  <HollowButton\n                    buttonText=\"Back\"\n                    rightMargin\n                    onClick={props.closeModal}\n                  />\n\n                  <FilledButton\n                    buttonText=\"Report\"\n                    loading={submitting}\n                    rightSideLoading\n                    disabled={invalid}\n                    type=\"submit\"\n                    disabledColor={invalid}\n                  />\n                </FlexContainer>\n                <InputError error={submitError} />\n              </form>\n            )}\n          />\n        </div>\n      )}\n      {formSubmitted && (\n        <div>\n          <ModalText>\n            Thank you for submitting your report. We will review the information\n            you sent over and resolve this issue as quickly as possible.\n          </ModalText>\n          <HollowButton buttonText=\"Back\" onClick={props.closeModal} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ReportModal;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"../../axios\";\nimport nestedProperty from \"nested-property\";\nimport { useHistory } from \"react-router-dom\";\nimport onClickOutside from \"react-onclickoutside\";\n\nimport { getAuthHeaderWithData } from \"../../services/auth_header_services\";\nimport { editPostId } from \"../../redux/actions/create_post_actions\";\nimport { Option, OptionsContainer } from \"../options/option_styles\";\nimport ConfirmAlert from \"../modals/ConfirmAlert\";\nimport ReportModal from \"../modals/ReportModal\";\nimport Modal from \"../modals/Modal\";\n\nconst PostOptions = ({\n  post,\n  postSection,\n  outsideClickIgnoreClass,\n  reportedEntityType,\n  hideOptions,\n  postDeleted,\n}) => {\n  const [showReportModal, setShowReportModal] = useState(false);\n  const [showDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n  const userId = useSelector(({ userState: { userId } }) => userId);\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  PostOptions.handleClickOutside = () => {\n    hideOptions();\n  };\n\n  const handleDelete = async () => {\n    const {\n      data: { success },\n    } = await axios.delete(\n      `/posts/${post.id}`,\n      getAuthHeaderWithData({ postId: post.id })\n    );\n    if (!success) {\n      // console.log(success);\n      // throw new Error();\n    } else {\n      postDeleted();\n    }\n\n    if (postSection === \"home\") {\n      history.push(\"/\");\n    }\n  };\n\n  const showEditComponent = () => {\n    dispatch(editPostId(post.id));\n    history.push(`/posts/edit/${post.id}`);\n  };\n\n  const postBelongsToUser = () => {\n    if (post.belongsToUser.id == userId) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const closeModal = () => {\n    setShowDeleteConfirmModal(false);\n    setShowReportModal(false);\n    hideOptions();\n  };\n\n  return (\n    <OptionsContainer>\n      {!postBelongsToUser() && (\n        <Option onClick={() => setShowReportModal(true)}>Report</Option>\n      )}\n\n      {postBelongsToUser() && (\n        <div>\n          <Option onClick={showEditComponent}>Edit Post</Option>\n          <Option\n            onClick={() => {\n              handleDelete(post);\n            }}\n          >\n            Delete Post\n          </Option>\n        </div>\n      )}\n\n      {showDeleteConfirmModal && (\n        <Modal closeModal={closeModal}>\n          {/* <ConfirmAlert\n            text=\"Are you sure you want to delete your post?\"\n            buttonText=\"Delete\"\n            closeAlert={closeModal}\n            action={handleDelete}\n            heading=\"Delete Post\"\n          /> */}\n        </Modal>\n      )}\n\n      {showReportModal && (\n        <Modal\n          closeModal={closeModal}\n          outsideClickIgnoreClass={outsideClickIgnoreClass}\n        >\n          <ReportModal\n            reportedEntityId={post.id}\n            closeModal={closeModal}\n            reportedEntityType=\"post\"\n          />\n        </Modal>\n      )}\n    </OptionsContainer>\n  );\n};\n\nPostOptions.prototype = {};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => PostOptions.handleClickOutside,\n};\n\nexport default onClickOutside(PostOptions, clickOutsideConfig);\n","import styled from \"styled-components\"\nimport is from 'styled-is'\nimport {createMediaQuery, mediaQueries} from \"../../media/media_helpers\";\n\nexport const RequirementSubHeading = styled.div`\n  font-family: \"Bold\";\n  margin-bottom: .6rem;\n`\nexport const RequirementsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-column-gap: 3rem;\n  grid-row-gap: 3rem;\n  \n  ${is('smallContainer')`\n       grid-template-columns: 1fr 1fr;\n  `};\n  \n   ${createMediaQuery(mediaQueries.tabPortDown)} {\n       grid-template-columns: 1fr;\n   }\n`","import React from \"react\";\nimport nestedProperty from \"nested-property\";\n\nimport {\n  RequirementSubHeading,\n  RequirementsContainer,\n} from \"./styles/requirements\";\n\nconst PostRequirements = ({ post, smallContainer }) => (\n  <div>\n    {post.space && post.cost && (\n      <RequirementsContainer smallContainer={smallContainer}>\n        <div>\n          <RequirementSubHeading>Space</RequirementSubHeading>\n          <div>\n            {post.space.min} to {post.space.max} sqft\n          </div>\n        </div>\n\n        <div>\n          <RequirementSubHeading>Cost</RequirementSubHeading>\n          <div>\n            ${post.cost.min} to ${post.cost.max} / month\n          </div>\n        </div>\n\n        <div>\n          <RequirementSubHeading>Type</RequirementSubHeading>\n          <div>{post.type}</div>\n        </div>\n\n        <div>\n          <RequirementSubHeading>Transit</RequirementSubHeading>\n          {post.transit &&\n            post.transit.map((item, index) => <div key={index}>{item}</div>)}\n        </div>\n      </RequirementsContainer>\n    )}\n  </div>\n);\n\nexport default PostRequirements;\n","import dateFormat from \"dateformat\";\n\nexport const formatAuthoredDate = (createdAt) =>\n  dateFormat(createdAt, \"mmm d, yyyy\");\n","import React, { useState } from \"react\";\nimport {\n  DateAuthorText,\n  PostDescriptionContainer,\n  PostDetailsContainer,\n  PostDetailsSection,\n  PostTitle,\n  PostTitleContainer,\n  PostOptionsContainer,\n} from \"./styles/postDetailsStyles\";\nimport \"../icons/icon_styles.scss\";\nimport PostOptions from \"./PostOptions\";\nimport PostRequirements from \"./PostRequirements\";\nimport { formatAuthoredDate } from \"./helpers/post_details_helpers\";\nimport { useSelector } from \"react-redux\";\nimport { ReactSVG } from \"react-svg\";\nimport { RequirementSubHeading } from \"./styles/requirements\";\n\nimport axios from \"../../axios\";\nimport { getAuthHeaderWithData } from \"../../services/auth_header_services\";\n\nconst PostDetailsItem = ({\n  post,\n  postSection,\n  anyChange,\n  setAnyChange,\n  smallContainer,\n}) => {\n  const [optionsActive, setOptionsActive] = useState(false);\n  const isLoggedIn = useSelector(({ sessionState }) => sessionState.isLoggedIn);\n  const optionsIcon = useSelector(\n    ({ assetState: { OPTIONS_ICON } }) => OPTIONS_ICON\n  );\n\n  function postDeleted() {\n    setAnyChange(true);\n  }\n\n  return (\n    <PostDetailsContainer>\n      {post.belongsToUser && (\n        <div>\n          <PostTitleContainer>\n            <PostTitle> {post.title} </PostTitle>\n            {isLoggedIn && (\n              <PostOptionsContainer>\n                <ReactSVG\n                  src={optionsIcon}\n                  onClick={() => setOptionsActive(!optionsActive)}\n                  className={`post-options-ignore-click-${post.id}`}\n                  beforeInjection={(svg) => {\n                    svg.classList.add(\"standard-icon\");\n                  }}\n                />\n\n                {optionsActive && (\n                  <PostOptions\n                    post={post}\n                    postSection={postSection}\n                    outsideClickIgnoreClass={`post-options-ignore-click-${post.id}`}\n                    reportedEntityType=\"post\"\n                    hideOptions={() => setOptionsActive(false)}\n                    postDeleted={postDeleted}\n                  />\n                )}\n              </PostOptionsContainer>\n            )}\n          </PostTitleContainer>\n\n          <DateAuthorText>\n            Posted {formatAuthoredDate(post.createdAt)} by{\" \"}\n            {post.belongsToUser.name}\n          </DateAuthorText>\n\n          <PostDetailsSection>\n            <RequirementSubHeading>Details</RequirementSubHeading>\n            <PostDescriptionContainer>\n              {post.description}\n            </PostDescriptionContainer>\n          </PostDetailsSection>\n\n          <PostDetailsSection>\n            <RequirementSubHeading>Location</RequirementSubHeading>\n            <div>{post.location}</div>\n          </PostDetailsSection>\n          <PostRequirements post={post} smallContainer={smallContainer} />\n        </div>\n      )}\n    </PostDetailsContainer>\n  );\n};\n\nexport default PostDetailsItem;\n","import styled from \"styled-components\"\n\n\nexport const PostsContainer = styled.div`\n  margin-top: 6rem;\n  padding-bottom: 6rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 4rem;\n  grid-row-gap: 6rem;\n`\n\nexport const NoPostsHeading = styled.h1`\n  font-size: 2.6rem;\n  font-family: Bold;\n  margin-bottom: 1.6rem;\n`\n\nexport const NoPostsParagraph = styled.p`\n  margin-bottom: 3rem;\n`\n\nexport const NoPostsWidth = styled.div`\n  width: 60%;\n`\n\n\n\n","import React from \"react\";\nimport { NoPostsHeading, NoPostsParagraph } from \"./styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport FilledButton from \"../../buttons/FilledButton\";\nimport FullScreenBox from \"../../containers/FullScreenBox\";\n\nconst NoPosts = () => (\n  <FullScreenBox>\n    <NoPostsHeading>You Don't Have Any Posts</NoPostsHeading>\n    <NoPostsParagraph>\n      It looks like you haven't created any posts yet. Click the button below to\n      create your first one.\n    </NoPostsParagraph>\n    <Link to=\"/post\">\n      <FilledButton buttonText=\"Create Post\" />\n    </Link>\n  </FullScreenBox>\n);\n\nexport default NoPosts;\n","import React, { useState, useEffect } from \"react\";\nimport { StandardContainer } from \"../../containers/container\";\nimport PostDetailsItem from \"../../post/PostDetailsItem\";\nimport axios from \"../../../axios\";\nimport { getAuthHeaderWithData } from \"../../../services/auth_header_services\";\nimport { PostsContainer } from \"./styles/styles\";\nimport BottomScrollListener from \"react-bottom-scroll-listener\";\nimport NoPosts from \"./NoPosts\";\nimport Loading from \"../../loading/Loading\";\nimport FullScreenBox from \"../../containers/FullScreenBox\";\n\nconst UserPosts = () => {\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loadingError, setLoadingError] = useState(\"\");\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [anyChange, setAnyChange] = useState(false);\n\n  const getPosts = async () => {\n    try {\n      setLoading(true);\n      const { data } = await axios.get(\n        \"/users/posts\",\n        getAuthHeaderWithData({ page })\n      );\n      if (data.success) {\n        if (page === 1) {\n          setPosts(data.posts);\n        } else {\n          setPosts([...posts, ...data.posts]);\n        }\n        setHasNextPage(data.hasNextPage);\n\n        // console.log(data.posts);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      setLoadingError(\n        \"Posts could not be loaded right now. Please try again later\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setNextPage = () => {\n    if (hasNextPage && !loading) {\n      setPage(page + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      getPosts();\n    } else {\n      if (hasNextPage) {\n        getPosts();\n      }\n    }\n  }, [page]);\n\n  useEffect(() => {\n    if (anyChange) {\n      if (page === 1) {\n        getPosts();\n      } else {\n        setAnyChange(false);\n        setPage(1);\n      }\n    } else {\n    }\n  }, [anyChange]);\n\n  return (\n    <div>\n      {!loadingError && posts.length > 0 && (\n        <StandardContainer userPosts>\n          <BottomScrollListener onBottom={setNextPage}>\n            <PostsContainer>\n              {posts.map((post, index) => (\n                <PostDetailsItem\n                  post={post}\n                  smallContainer\n                  key={index}\n                  setAnyChange={setAnyChange}\n                />\n              ))}\n            </PostsContainer>\n          </BottomScrollListener>\n        </StandardContainer>\n      )}\n\n      {!loadingError && !loading && posts.length === 0 && <NoPosts />}\n\n      {loadingError && (\n        <FullScreenBox clearBackground>\n          <div>Posts could not be loaded</div>\n        </FullScreenBox>\n      )}\n\n      {!loadingError && loading && posts.length === 0 && (\n        <Loading fillPage clearBackground />\n      )}\n    </div>\n  );\n};\n\nexport default UserPosts;\n","import styled from \"styled-components\"\nimport is from 'styled-is'\nimport {ReactSVG} from 'react-svg'\nimport {createMediaQuery, mediaQueries} from \"../../media/media_helpers\";\n\n\nexport const ProfileImage = styled.img`\n  border-radius: 100px;\n  width: 3.8rem;\n  margin-right: 1rem;\n  \n  ${is('profileModal')`\n    width: 11rem;\n    margin-right: 2rem\n  `}\n`\n\nexport const ProfileName = styled.div`\n  font-family: \"Bold\";\n  \n   ${is('profileModal')`\n    font-size: 2.4rem\n    margin-bottom: .6rem\n  `}\n`\n\nexport const ProfileDetailsContainer = styled.div`\n  display: grid;\n  grid-row-gap: 3rem;\n`\n\nexport const ProfileNameContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 2rem;\n  \n  ${is('profileModal')`\n    margin-top: 4rem;\n    margin-bottom: 5rem;\n  `}\n`\n\nexport const SideProfileOptionsContainer = styled(ReactSVG)`\n  margin-left: auto;\n  align-items: center;\n  display: flex;\n`\n\nexport const BioContainer = styled.div`\n  margin-bottom: 2rem;\n`\n\nexport const SideProfileContainer = styled.div`\n  ${createMediaQuery(mediaQueries.tabLandUp)} {\n    margin-top: 10rem;\n    position: sticky;\n  }\n`\n\nexport const ReadMoreText = styled.div`\n  color: grey;\n  font-size: 1.4rem;\n  margin-top: 1rem;\n  cursor: pointer;\n`\n","import React, { useState } from \"react\";\nimport onClickOutside from \"react-onclickoutside\";\n\nimport { Option, OptionsContainer } from \"../options/option_styles\";\nimport Modal from \"../modals/Modal\";\nimport ReportModal from \"../modals/ReportModal\";\nimport BlockUserModal from \"../modals/BlockUserModal\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserOptions = (props) => {\n  const [showBlockUserModal, setShowBlockUserModal] = useState(false);\n  const [showReportModal, setShowReportModal] = useState(false);\n\n  const history = useHistory();\n\n  const closeModal = () => {\n    setShowBlockUserModal(false);\n    setShowReportModal(false);\n    props.hideOptions();\n  };\n\n  UserOptions.handleClickOutside = () => {\n    props.hideOptions();\n  };\n\n  const handleBlockedUserConfirmation = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <OptionsContainer profileOptions>\n      <Option onClick={() => setShowBlockUserModal(true)}>Block</Option>\n      <Option onClick={() => setShowReportModal(true)}>Report</Option>\n\n      {showReportModal && (\n        <Modal\n          closeModal={closeModal}\n          outsideClickIgnoreClass={props.outsideClickIgnoreClass}\n        >\n          <ReportModal\n            reportedEntityId={props.user.id}\n            closeModal={closeModal}\n            reportedEntityType=\"user\"\n          />\n        </Modal>\n      )}\n\n      {showBlockUserModal && (\n        <BlockUserModal\n          user={props.user}\n          handleBlockedUserConfirmation={handleBlockedUserConfirmation}\n          outsideClickIgnoreClass={props.outsideClickIgnoreClass}\n          closeModal={closeModal}\n        />\n      )}\n    </OptionsContainer>\n  );\n};\n\nUserOptions.prototype = {};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => UserOptions.handleClickOutside,\n};\n\nexport default onClickOutside(UserOptions, clickOutsideConfig);\n","import React, { useState } from \"react\";\nimport {\n  SideProfileOptionsContainer,\n  ProfileImage,\n  ProfileNameContainer,\n} from \"./styles/side_profile_styles\";\nimport { BoldText } from \"../text/text\";\nimport { ReactSvgInjector } from \"react-svg-injector\";\nimport UserOptions from \"./UserOptions\";\nimport { useSelector } from \"react-redux\";\nimport { ReactSVG } from \"react-svg\";\n\nconst PostProfileInfo = ({\n  profile,\n  postAuthoredByCurrentUser,\n  setShowPostProfileInfoModal,\n}) => {\n  const [optionsActive, setOptionsActive] = useState(false);\n  const isLoggedIn = useSelector(({ sessionState }) => sessionState.isLoggedIn);\n  const optionsIcon = useSelector(\n    ({ assetState: { OPTIONS_ICON } }) => OPTIONS_ICON\n  );\n\n  return (\n    <ProfileNameContainer>\n      <ProfileImage src={profile.profileImage} alt=\"Author's profile picture\" />\n      <BoldText clickable onClick={() => setShowPostProfileInfoModal(true)}>\n        {profile.name}\n      </BoldText>\n      {!postAuthoredByCurrentUser && isLoggedIn && (\n        <SideProfileOptionsContainer\n          onClick={() => setOptionsActive(true)}\n          className=\"post-profile-options-ignore-click\"\n          src={optionsIcon}\n          beforeInjection={(svg) => {\n            svg.classList.add(\"standard-icon\");\n            svg.classList.add(\"three-dots-options-small\");\n          }}\n        />\n      )}\n\n      {optionsActive && (\n        <UserOptions\n          user={profile}\n          outsideClickIgnoreClass=\"post-profile-options-ignore-click\"\n          hideOptions={() => setOptionsActive(false)}\n        />\n      )}\n    </ProfileNameContainer>\n  );\n};\n\nexport default PostProfileInfo;\n","import React from \"react\";\nimport Truncate from \"react-truncate\";\nimport { BioContainer, ReadMoreText } from \"./styles/side_profile_styles\";\n\nconst PostProfileBio = ({ profile, setShowPostProfileInfoModal }) => {\n  return (\n    <BioContainer>\n      {profile.bio && (\n        <Truncate\n          lines={3}\n          ellipsis={\n            <span>\n              ... <br />\n              <ReadMoreText onClick={() => setShowPostProfileInfoModal(true)}>\n                {\" \"}\n                Read More\n              </ReadMoreText>{\" \"}\n            </span>\n          }\n        >\n          {profile.bio}\n        </Truncate>\n      )}\n\n      {!profile.bio && (\n        <div>\n          Do you have a property that {profile.name} would be interested in?\n        </div>\n      )}\n    </BioContainer>\n  );\n};\n\nexport default PostProfileBio;\n","import axios from \"../../../../axios\";\nimport { getAuthHeader } from \"../../../../services/auth_header_services\";\n\nexport const startNewConversation = async (\n  recipientUserId,\n  history,\n  setCreateNewConversationLoading\n) => {\n  try {\n    setCreateNewConversationLoading(true);\n    const { data } = await axios.post(\n      \"/conversations\",\n      { recipientUserId },\n      getAuthHeader()\n    );\n    if (data.success) {\n      history.push(\"/messages\");\n    }\n  } catch (e) {\n    //todo\n    // handle error\n  } finally {\n    setCreateNewConversationLoading(false);\n  }\n};\n","import React, { useState } from \"react\";\nimport {\n  ProfileImage,\n  ProfileNameContainer,\n  ProfileName,\n  ProfileDetailsContainer,\n} from \"./styles/side_profile_styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FilledButton from \"../buttons/FilledButton\";\nimport { startNewConversation } from \"../pages/home/helpers/home_profile_helpers\";\nimport { useHistory } from \"react-router-dom\";\nimport { LineSpaceText } from \"../text/text\";\nimport { SectionTitle } from \"./styles/postDetailsStyles\";\n\nconst PostProfileInfoModal = ({ profile }) => {\n  const currentUserId = useSelector(({ userState }) => userState.userId);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <ProfileNameContainer profileModal>\n        <ProfileImage\n          src={profile.profileImage}\n          profileModal\n          alt=\"Author's profile picture\"\n        />\n        <ProfileName profileModal>{profile.name}</ProfileName>\n\n        {currentUserId && currentUserId !== profile.id && (\n          <FilledButton\n            buttonText={\"Message\"}\n            mlAuto\n            onClick={() => startNewConversation(profile.id, dispatch, history)}\n            small\n          />\n        )}\n      </ProfileNameContainer>\n      <ProfileDetailsContainer>\n        <div>\n          <SectionTitle>Job Title</SectionTitle>\n          <div>{profile.jobTitle}</div>\n        </div>\n\n        <div>\n          <SectionTitle>Bio</SectionTitle>\n          <LineSpaceText>{profile.bio}</LineSpaceText>\n        </div>\n      </ProfileDetailsContainer>\n    </div>\n  );\n};\n\nexport default PostProfileInfoModal;\n","import React, { useState } from \"react\";\nimport FilledButton from \"../buttons/FilledButton\";\nimport \"../icons/icon_styles.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { SideProfileContainer } from \"./styles/side_profile_styles\";\nimport PostProfileInfo from \"./PostProfileInfo\";\nimport { useSelector } from \"react-redux\";\nimport PostProfileBio from \"./PostProfileBio\";\nimport { startNewConversation } from \"../pages/home/helpers/home_profile_helpers\";\nimport Modal from \"../modals/Modal\";\nimport PostProfileInfoModal from \"./PostProfileInfoModal\";\n\nconst SideProfileInfo = ({ post: { belongsToUser } }) => {\n  const profile = belongsToUser;\n  const currentUserId = useSelector(({ userState }) => userState.userId);\n  const [showPostProfileInfoModal, setShowPostProfileInfoModal] = useState(\n    false\n  );\n  const [\n    createNewConversationLoading,\n    setCreateNewConversationLoading,\n  ] = useState(false);\n\n  const history = useHistory();\n\n  const postAuthoredByCurrentUser = () => profile.id === currentUserId;\n  const closeModal = () => setShowPostProfileInfoModal(false);\n\n  return (\n    <SideProfileContainer>\n      {profile && (\n        <div>\n          <PostProfileInfo\n            profile={profile}\n            setShowPostProfileInfoModal={setShowPostProfileInfoModal}\n            postAuthoredByCurrentUser={postAuthoredByCurrentUser()}\n          />\n\n          <PostProfileBio\n            profile={profile}\n            setShowPostProfileInfoModal={setShowPostProfileInfoModal}\n          />\n\n          {profile && currentUserId && !postAuthoredByCurrentUser() && (\n            <FilledButton\n              buttonText=\"Message\"\n              rightSideLoading\n              loading={createNewConversationLoading}\n              onClick={() =>\n                startNewConversation(\n                  profile.id,\n                  history,\n                  setCreateNewConversationLoading\n                )\n              }\n              small\n            />\n          )}\n\n          {profile && showPostProfileInfoModal && (\n            <Modal closeModal={closeModal}>\n              <PostProfileInfoModal closeModal={closeModal} profile={profile} />\n            </Modal>\n          )}\n        </div>\n      )}\n    </SideProfileContainer>\n  );\n};\n\nexport default SideProfileInfo;\n","import React, { useState, useEffect } from \"react\";\nimport { StandardContainer } from \"../containers/container\";\nimport axios from \"../../axios\";\nimport SideProfileInfo from \"./SideProfileInfo\";\nimport { PostOuterContainer } from \"./styles/postDetailsStyles\";\nimport PostDetailsItem from \"./PostDetailsItem\";\nimport Loading from \"../loading/Loading\";\nimport FullScreenBox from \"../containers/FullScreenBox\";\n\nconst PostDetails = (props) => {\n  const [post, setPost] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  // console.log(props.params);\n  // const [anyChange, setAnyChange] = useState(true);\n\n  const fetchPost = async () => {\n    try {\n      setLoading(true);\n      const {\n        data: { post },\n      } = await axios.get(`/posts/${props.params.match.params.id}`);\n      setPost(post);\n    } catch (e) {\n      setLoadingError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPost();\n    // setAnyChange(false);\n  }, []);\n\n  return (\n    <div>\n      {loading && <Loading fillPage clearBackground />}\n\n      {!loadingError && !loading && (\n        <StandardContainer post>\n          <PostOuterContainer>\n            <PostDetailsItem post={post} postSection={props.postSection} />\n            <SideProfileInfo post={post} />\n          </PostOuterContainer>\n        </StandardContainer>\n      )}\n\n      {loadingError && (\n        <FullScreenBox clearBackground>\n          <div>This post could not be loaded right now</div>\n        </FullScreenBox>\n      )}\n    </div>\n  );\n};\n\nexport default PostDetails;\n","import styled from \"styled-components\";\nimport is from 'styled-is';\n\nexport const TermsPrivacyTitle = styled.h1`\n  font-size: 2.4rem;\n  text-align: center;\n  width: 70%;\n`\n\nexport const TermsPrivacyDate = styled.div`\n  font-family: \"Bold\";\n  margin-bottom: 3rem;\n`\n\nexport const SectionHeading = styled.h4`\n  font-size: 1.7rem;\n  font-family: \"Bold\";\n  margin-bottom: .6rem;\n  \n  ${is('larger')`\n      font-size: 2rem;\n      margin-bottom: 2rem;\n  `};\n`\n\nexport const TermsPrivacyLink = styled.a`\n  color: #2A5DB0;\n`\n","import React from \"react\";\nimport {\n  StandardContainer,\n  TextContainerInner,\n} from \"../../containers/container\";\nimport { CenteredHeading } from \"../../text/text\";\n\nimport { TermsPrivacyDate, SectionHeading } from \"./terms_privacy_styles\";\n\nconst TermsOfService = () => (\n  <StandardContainer text>\n    <TextContainerInner>\n      <CenteredHeading>Terms of Service</CenteredHeading>\n\n      <TermsPrivacyDate>Last updated: January 31, 2020</TermsPrivacyDate>\n\n      <p>\n        Please read these Terms and Conditions carefully before using the\n        Spekkly application operated by Spekkly, LLC.\n      </p>\n\n      <br />\n\n      <p>\n        Your access to and use of the Service is conditioned upon your\n        acceptance of and compliance with these Terms. These Terms apply to all\n        visitors, users and others who wish to access or use the Service.\n      </p>\n\n      <br />\n\n      <p>\n        By accessing or using the Service you agree to be bound by these Terms.\n        If you disagree with any part of the terms then you do not have\n        permission to access the Service.\n      </p>\n      <br />\n      <br />\n\n      <SectionHeading>Communications</SectionHeading>\n\n      <p>\n        By creating an Account on our service, you agree to subscribe to\n        newsletters, marketing or promotional materials and other information we\n        may send. However, you may opt out of receiving any, or all, of these\n        communications from us by following the unsubscribe link or instructions\n        provided in any email we send.\n      </p>\n      <br />\n      <br />\n\n      <SectionHeading>Content</SectionHeading>\n\n      <p>\n        Our Service allows you to post, link, store, share and otherwise make\n        available certain information, text, graphics, videos, or other\n        material. You are responsible for the Content that you post on or\n        through the Service, including its legality, reliability, and\n        appropriateness.\n      </p>\n\n      <br />\n\n      <p>\n        By posting Content on or through the Service, You represent and warrant\n        that (i) the Content is yours (you own it) and/or you have the right to\n        use it and the right to grant us the rights and license as provided in\n        these Terms (ii) that the posting of your Content on or through the\n        Service does not violate the privacy rights, publicity rights,\n        copyrights, contract rights or any other rights of any person or entity.\n        <br />\n        <br />\n        We reserve the right to terminate the account of anyone found to be\n        infringing on a copyright.\n      </p>\n\n      <br />\n\n      <p>\n        You retain any and all of your rights to any Content you submit, post or\n        display on or through the Service and you are responsible for protecting\n        those rights. We take no responsibility and assume no liability for\n        Content you or any third party posts on or through the Service.\n        <br />\n        <br />\n        However, by posting Content using the Service you grant us the right and\n        license to use, modify, publicly perform, publicly display, reproduce,\n        and distribute such Content on and through the Service. You agree that\n        this license includes the right for us to make your Content available to\n        other users of the Service, who may also use your Content subject to\n        these Terms.\n      </p>\n      <br />\n\n      <p>\n        Spekkly, LLC has the right but not the obligation to monitor and edit\n        all Content provided by users.\n      </p>\n      <br />\n\n      <p>\n        In addition, Content found on or through this Service are the property\n        of Spekkly, LLC or used with permission. You may not distribute, modify,\n        transmit, reuse, download, repost, copy, or use said Content, whether in\n        whole or in part, for commercial purposes or for personal gain, without\n        express advance written permission from us.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Accounts</SectionHeading>\n\n      <p>\n        When you create an account with us, you guarantee that you are above the\n        age of 18, and that the information you provide us is accurate,\n        complete, and current at all times. Inaccurate, incomplete, or obsolete\n        information may result in the immediate termination of your account on\n        the Service.\n      </p>\n\n      <br />\n\n      <p>\n        You are responsible for maintaining the confidentiality of your account\n        and password, including but not limited to the restriction of access to\n        your computer and/or account. You agree to accept responsibility for any\n        and all activities or actions that occur under your account and/or\n        password, whether your password is with our Service or a third-party\n        service. You must notify us immediately upon becoming aware of any\n        breach of security or unauthorized use of your account.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Intellectual Property</SectionHeading>\n\n      <p>\n        The Service and its original content (excluding Content provided by\n        users), features and functionality are and will remain the exclusive\n        property of Spekkly, LLC and its licensors. The Service is protected by\n        copyright, trademark, and other laws of both the United States and\n        foreign countries. Our trademarks and trade dress may not be used in\n        connection with any product or service without the prior written consent\n        of Spekkly, LLC.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Links To Other Web Sites</SectionHeading>\n\n      <p>\n        Our Service may contain links to third party web sites or services that\n        are not owned or controlled by Spekkly, LLC\n      </p>\n\n      <br />\n\n      <p>\n        Spekkly, LLC has no control over, and assumes no responsibility for the\n        content, privacy policies, or practices of any third party web sites or\n        services. We do not warrant the offerings of any of these\n        entities/individuals or their websites.\n      </p>\n\n      <br />\n\n      <p>\n        You acknowledge and agree that Spekkly, LLC shall not be responsible or\n        liable, directly or indirectly, for any damage or loss caused or alleged\n        to be caused by or in connection with use of or reliance on any such\n        content, goods or services available on or through any such third party\n        web sites or services.\n      </p>\n\n      <br />\n\n      <p>\n        We strongly advise you to read the terms and conditions and privacy\n        policies of any third party web sites or services that you visit.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Termination</SectionHeading>\n\n      <p>\n        We may terminate or suspend your account and bar access to the Service\n        immediately, without prior notice or liability, under our sole\n        discretion, for any reason whatsoever and without limitation, including\n        but not limited to a breach of the Terms.\n      </p>\n\n      <br />\n\n      <p>\n        If you wish to terminate your account, you may simply discontinue using\n        the Service.\n      </p>\n\n      <br />\n\n      <p>\n        All provisions of the Terms which by their nature should survive\n        termination shall survive termination, including, without limitation,\n        ownership provisions, warranty disclaimers, indemnity and limitations of\n        liability.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Indemnification</SectionHeading>\n\n      <p>\n        You agree to defend, indemnify and hold harmless Spekkly, LLC and its\n        licensee and licensors, and their employees, contractors, agents,\n        officers and directors, from and against any and all claims, damages,\n        obligations, losses, liabilities, costs or debt, and expenses (including\n        but not limited to attorney's fees), resulting from or arising out of a)\n        your use and access of the Service, by you or any person using your\n        account and password; b) a breach of these Terms, or c) Content posted\n        on the Service.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Limitation Of Liability</SectionHeading>\n\n      <p>\n        In no event shall Spekkly, LLC, nor its directors, employees, partners,\n        agents, suppliers, or affiliates, be liable for any indirect,\n        incidental, special, consequential or punitive damages, including\n        without limitation, loss of profits, data, use, goodwill, or other\n        intangible losses, resulting from (i) your access to or use of or\n        inability to access or use the Service; (ii) any conduct or content of\n        any third party on the Service; (iii) any content obtained from the\n        Service; and (iv) unauthorized access, use or alteration of your\n        transmissions or content, whether based on warranty, contract, tort\n        (including negligence) or any other legal theory, whether or not we have\n        been informed of the possibility of such damage, and even if a remedy\n        set forth herein is found to have failed of its essential purpose.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Disclaimer</SectionHeading>\n\n      <p>\n        Your use of the Service is at your sole risk. The Service is provided on\n        an \"AS IS\" and \"AS AVAILABLE\" basis. The Service is provided without\n        warranties of any kind, whether express or implied, including, but not\n        limited to, implied warranties of merchantability, fitness for a\n        particular purpose, non-infringement or course of performance.\n      </p>\n\n      <br />\n\n      <p>\n        Spekkly, LLC its subsidiaries, affiliates, and its licensors do not\n        warrant that a) the Service will function uninterrupted, secure or\n        available at any particular time or location; b) any errors or defects\n        will be corrected; c) the Service is free of viruses or other harmful\n        components; or d) the results of using the Service will meet your\n        requirements.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Exclusions</SectionHeading>\n\n      <p>\n        Some jurisdictions do not allow the exclusion of certain warranties or\n        the exclusion or limitation of liability for consequential or incidental\n        damages, so the limitations above may not apply to you.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Governing Law</SectionHeading>\n\n      <p>\n        These Terms shall be governed and construed in accordance with the laws\n        of California, United States, without regard to its conflict of law\n        provisions.\n      </p>\n\n      <br />\n\n      <p>\n        Our failure to enforce any right or provision of these Terms will not be\n        considered a waiver of those rights. If any provision of these Terms is\n        held to be invalid or unenforceable by a court, the remaining provisions\n        of these Terms will remain in effect. These Terms constitute the entire\n        agreement between us regarding our Service, and supersede and replace\n        any prior agreements we might have had between us regarding the Service.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Changes</SectionHeading>\n\n      <p>\n        We reserve the right, at our sole discretion, to modify or replace these\n        Terms at any time. If a revision is material we will provide at least 30\n        days notice prior to any new terms taking effect. What constitutes a\n        material change will be determined at our sole discretion.\n      </p>\n\n      <br />\n\n      <p>\n        By continuing to access or use our Service after any revisions become\n        effective, you agree to be bound by the revised terms. If you do not\n        agree to the new terms, you are no longer authorized to use the Service.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Contact Us</SectionHeading>\n\n      <p>If you have any questions about these Terms, please contact us.</p>\n    </TextContainerInner>\n  </StandardContainer>\n);\n\nexport default TermsOfService;\n","import React, { useEffect } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { useSelector } from \"react-redux\";\n\nimport FilledButton from \"../../buttons/FilledButton\";\nimport InputLocation from \"../../inputs/location/InputLocation\";\n\nimport {\n  SearchForm,\n  HomeSearchInput,\n  HomeSearchFormContainer,\n  SearchSpacer,\n} from \"./styles/search_styles\";\nimport { setValue } from \"../../forms/form_helpers\";\nimport Media from \"react-media\";\nimport { tabLandUp } from \"../../media/media_helpers\";\n\nconst HomeSearch = (props) => {\n  const clearFilter = useSelector(\n    ({ homeState: { clearFilters } }) => clearFilters\n  );\n  let resetForm = null;\n\n  useEffect(() => {\n    if (clearFilter > 0) {\n      resetForm();\n    }\n  }, [clearFilter]);\n\n  const setResetForm = (reset) => {\n    resetForm = reset;\n  };\n\n  return (\n    <HomeSearchFormContainer>\n      <Form\n        onSubmit={(values) => props.setFilters({ ...props.filters, ...values })}\n        // initialValues={getSearchBarInitialInput()}\n        mutators={{ setValue }}\n        render={({ handleSubmit, form, ...rest }) => (\n          <SearchForm onSubmit={handleSubmit}>\n            <Field name=\"keywords\" type=\"text\">\n              {({ input }) => (\n                <HomeSearchInput {...input} placeholder=\"Keywords\" />\n              )}\n            </Field>\n            <Media query={tabLandUp}>\n              {(matches) =>\n                matches && (\n                  <>\n                    <SearchSpacer />\n                    <InputLocation\n                      homeSearch\n                      setLocation={form.mutators.setValue}\n                    />\n                  </>\n                )\n              }\n            </Media>\n\n            <FilledButton\n              type=\"submit\"\n              homeSearch\n              noStretch={true}\n              buttonText={\"Submit\"}\n            />\n\n            {setResetForm(form.reset)}\n          </SearchForm>\n        )}\n      />\n    </HomeSearchFormContainer>\n  );\n};\n\nexport default HomeSearch;\n","import styled from \"styled-components\";\nimport {createMediaQuery, mediaQueries} from \"../../../media/media_helpers\";\nimport is from 'styled-is'\n\nexport const HomeMainContainer = styled.div`\n  display: grid;\n  grid-template-columns: .35fr 1fr;\n  grid-column-gap: 6rem;\n  margin-bottom: 6rem;\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n     grid-template-columns: 1fr;\n     grid-row-gap: 5rem;\n  }\n`\n\nexport const HomeSidePanelForm = styled.form`\n  display: grid;\n  grid-row-gap: 4rem;\n  \n   ${createMediaQuery(mediaQueries.tabLandUp)} {\n      position: sticky;\n      top: 20rem;\n  }\n`\n\nexport const ToggleFiltersButton = styled.div`\n  color: var(--primary-color);\n  \n    ${is('showFilters')`\n       margin-bottom: 4rem;\n  `};\n`\n","import React, { useEffect, useState } from \"react\";\nimport { Form, FormSpy } from \"react-final-form\";\nimport InputRange from \"../../inputs/InputRange\";\nimport InputOptions from \"../../inputs/InputOptions\";\nimport { transitOptions, typeOptions } from \"../../../config/constants\";\nimport { setValue, toggleCheckMark } from \"../../forms/form_helpers\";\nimport { useSelector } from \"react-redux\";\nimport sleep from \"sleep-promise\";\nimport { HomeSidePanelForm, ToggleFiltersButton } from \"./styles/home_styles\";\nimport Media from \"react-media\";\nimport { tabPortDown } from \"../../media/media_helpers\";\n\nconst HomeFilters = (props) => {\n  const [showFilters, setShowFilters] = useState(false);\n  const clearFilter = useSelector(\n    ({ homeState: { clearFilters } }) => clearFilters\n  );\n  let resetForm = null;\n\n  useEffect(() => {\n    if (clearFilter > 0) {\n      setResetForm();\n    }\n  }, [clearFilter]);\n\n  const setResetForm = (reset) => {\n    resetForm = reset;\n  };\n\n  return (\n    <div>\n      <Media\n        query={tabPortDown}\n        onChange={(matches) => {\n          matches ? setShowFilters(false) : setShowFilters(true);\n        }}\n      >\n        {(matches) =>\n          matches && (\n            <ToggleFiltersButton\n              showFilters={showFilters}\n              onClick={() => {\n                setShowFilters(!showFilters);\n              }}\n            >\n              {showFilters ? \"Hide\" : \"Show\"} Filters\n            </ToggleFiltersButton>\n          )\n        }\n      </Media>\n\n      {showFilters && (\n        <Form\n          onSubmit={() => {}}\n          // initialValues={getSideBarInitialInput()}\n          mutators={{ setValue, toggleCheckMark }}\n          render={({ handleSubmit, form }) => (\n            <HomeSidePanelForm onSubmit={handleSubmit}>\n              <InputRange\n                label=\"Space\"\n                inputLabel=\"sqft\"\n                name=\"space\"\n                stretch\n                validation={false}\n                borderNone\n              />\n\n              <InputRange\n                label=\"Cost\"\n                inputLabel=\"$/mo\"\n                name=\"cost\"\n                stretch\n                borderNone\n                errorName=\"price\"\n              />\n\n              <InputOptions\n                label=\"Type\"\n                options={typeOptions}\n                name=\"type\"\n                allowNull\n                whiteInput\n                setValue={form.mutators.setValue}\n                type=\"radio\"\n              />\n\n              <InputOptions\n                label=\"Transit\"\n                options={transitOptions}\n                whiteInput\n                name=\"transit\"\n                toggleCheckMark={form.mutators.toggleCheckMark}\n                type=\"checkbox\"\n              />\n\n              {setResetForm(form.reset)}\n\n              <FormSpy\n                onChange={async ({ values }) => {\n                  await sleep(0);\n                  props.setFilters(values);\n                }}\n              />\n            </HomeSidePanelForm>\n          )}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HomeFilters;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearFiltersDispatch } from \"../../../redux/actions/home_actions\";\n\nconst PostOptionsContainer = styled.div`\n  display: flex;\n  margin-bottom: 4rem;\n`;\n\nconst Heading = styled.div`\n  font-family: \"Bold\";\n  margin-bottom: 0.4rem;\n`;\n\nconst ClearFiltersButton = styled.span`\n  margin-left: auto;\n  color: var(--primary-color);\n  cursor: pointer;\n`;\n\nconst HomePostOptions = ({ postsLength }) => {\n  const clearFilter = useSelector(\n    ({ homeState: { clearFilters } }) => clearFilters\n  );\n  const dispatch = useDispatch();\n\n  const handleClearFilter = () => {\n    dispatch(clearFiltersDispatch(clearFilter + 1));\n  };\n\n  return (\n    <PostOptionsContainer>\n      <span>\n        <Heading>Showing:</Heading> {postsLength} filtered results\n      </span>\n      <ClearFiltersButton onClick={handleClearFilter}>\n        Clear Filters\n      </ClearFiltersButton>\n    </PostOptionsContainer>\n  );\n};\n\nexport default HomePostOptions;\n","import { CLEAR_FILTERS } from \"../constants/home_action_types\";\n\nexport const clearFiltersDispatch = (clearFilters) => ({\n  type: CLEAR_FILTERS,\n  clearFilters,\n});\n","import styled from \"styled-components\"\nimport {createMediaQuery, mediaQueries} from \"../../../media/media_helpers\";\n\nexport const PostsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 4rem;\n  grid-row-gap: 6rem;\n  \n  ${createMediaQuery(mediaQueries.tabPortDown)} {\n     grid-template-columns: 1fr;\n  }\n`\n\nexport const PostContainer = styled.div`\n  background-color: white;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const PostTitle = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 2.6rem;\n`\n\nexport const PostDate = styled.div`\n  margin-bottom: 3rem;\n`\n\n\nexport const RequirementsText = styled.div`\n  font-family: Bold;\n  margin-bottom: 1.6rem;\n`\n\nexport const DetailsText = styled.div`\n  font-family: Bold;\n  margin-bottom: .7rem;\n`\n\nexport const RequirementsList = styled.div`\n  display: grid;\n  grid-row-gap: 1.5rem;\n`\n\nexport const DescriptionText = styled.p`\n  margin-bottom: 3rem;\n`\n\nexport const RequirementsContainer = styled.div`\n  margin-bottom: 3.6rem;\n  margin-top: auto;\n`","import React from \"react\";\nimport {\n  DescriptionText,\n  PostContainer,\n  PostDate,\n  PostTitle,\n  RequirementsContainer,\n  RequirementsList,\n} from \"./styles/post_styles\";\nimport { formatAuthoredDate } from \"../../post/helpers/post_details_helpers\";\nimport FilledButton from \"../../buttons/FilledButton\";\nimport Truncate from \"react-truncate\";\nimport { RequirementSubHeading } from \"../../post/styles/requirements\";\n\nconst HomePostListItem = ({ post, handlePostClick }) => {\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>\n        Posted {formatAuthoredDate(post.createdAt)} by {post.belongsToUser.name}\n      </PostDate>\n      <DescriptionText>\n        <Truncate lines={3}>{post.description}</Truncate>\n      </DescriptionText>\n      <RequirementsContainer>\n        <RequirementsList>\n          <div>\n            <RequirementSubHeading>Location:</RequirementSubHeading>{\" \"}\n            {post.location}\n          </div>\n          <div>\n            <RequirementSubHeading>Space:</RequirementSubHeading>{\" \"}\n            {post.space.min} to {post.space.max} sqft\n          </div>\n          <div>\n            <RequirementSubHeading>Cost:</RequirementSubHeading> $\n            {post.cost.min} to ${post.cost.max} / mo\n          </div>\n          <div>\n            <RequirementSubHeading>Type:</RequirementSubHeading> {post.type}{\" \"}\n          </div>\n        </RequirementsList>\n      </RequirementsContainer>\n      <FilledButton onClick={handlePostClick} buttonText=\"Learn More\" stretch />\n    </PostContainer>\n  );\n};\n\nexport default HomePostListItem;\n","import React from \"react\";\nimport HomePostOptions from \"./HomePostOptions\";\nimport { useHistory } from \"react-router-dom\";\nimport BottomScrollListener from \"react-bottom-scroll-listener\";\nimport HomePostListItem from \"./HomePostListItem\";\nimport { Center } from \"../../alignment/Center\";\n\nimport { RelativePositionContainer } from \"../../containers/container\";\n\nimport { PostsContainer } from \"./styles/post_styles\";\nimport Loading from \"../../loading/Loading\";\n\nconst HomePostsList = (props) => {\n  const history = useHistory();\n\n  const handlePostClick = (postId) => {\n    history.push(`/posts/${postId}`);\n  };\n\n  const isValidPost = (post) => {\n    if (post.belongsToUser) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <RelativePositionContainer>\n      {props.loading && props.posts.length === 0 && <Loading clearBackground />}\n\n      {props.hasFilters && <HomePostOptions postsLength={props.totalDocs} />}\n\n      {props.postsLoadingError && (\n        <Center h100 vertical>\n          <div> {props.postsLoadingError} </div>\n        </Center>\n      )}\n\n      {props.posts.length > 0 && (\n        <BottomScrollListener onBottom={props.setNextPage}>\n          <PostsContainer>\n            {props.posts.map((post) => {\n              return (\n                <HomePostListItem\n                  post={post}\n                  key={post.id}\n                  handlePostClick={() => handlePostClick(post.id)}\n                />\n              );\n            })}\n          </PostsContainer>\n        </BottomScrollListener>\n      )}\n    </RelativePositionContainer>\n  );\n};\n\nexport default HomePostsList;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"../../../axios\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\nimport isObjectEmpty from \"is-object-empty\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport isEmptyObject from \"is-object-empty\";\n\nimport { StandardContainer } from \"../../containers/container\";\nimport HomeSearch from \"./HomeSearch\";\nimport HomeFilters from \"./HomeFilters\";\nimport HomePostsList from \"./HomePostsList\";\nimport {\n  isLoginOpen,\n  isResetPasswordOpen,\n} from \"../../../redux/actions/login_actions\";\nimport { setNextPage } from \"../../../services/load_data_services\";\nimport nestedProperty from \"nested-property\";\nimport { HomeMainContainer } from \"./styles/home_styles\";\n\nconst Home = (props) => {\n  const [filters, setFilters] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [filterPostsVersion, setFilterPostsVersion] = useState(0);\n\n  const [postsLoadingError, setPostsLoadingError] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [totalDocs, setTotalDocs] = useState(0);\n\n  const userId = useSelector(({ userState: { userId } }) => userId);\n  const dispatch = useDispatch();\n\n  const getPosts = async () => {\n    try {\n      setLoading(true);\n\n      const params = {\n        userId,\n        filters,\n        page,\n      };\n\n      const { data } = await axios.get(\"/posts\", { params });\n\n      setPosts([...posts, ...data.posts]);\n      setHasNextPage(data.hasNextPage);\n      setTotalDocs(data.totalDocs);\n      if (posts.length === 0 && data.posts.length === 0) {\n        if (isObjectEmpty(filters)) {\n          setPostsLoadingError(\"There are no posts yet on Spekkly\");\n        } else {\n          setPostsLoadingError(\"No posts matched your filters\");\n        }\n      } else {\n        setPostsLoadingError(\"\");\n      }\n    } catch (e) {\n      setPostsLoadingError(\n        \"Posts could not be loaded right now. Please try again later\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearFilter = useSelector(\n    ({ homeState: { clearFilters } }) => clearFilters\n  );\n\n  useEffect(() => {\n    if (props.resetPassword) {\n      dispatch(isResetPasswordOpen(true));\n      dispatch(isLoginOpen(true));\n    }\n  });\n\n  useEffect(() => {\n    if (clearFilter > 0) {\n      setFilters({});\n    }\n  }, [clearFilter]);\n\n  useEffect(() => {\n    if (hasNextPage) {\n      getPosts();\n    }\n  }, [page, filterPostsVersion]);\n\n  useDeepCompareEffect(() => {\n    setPage(1);\n    setHasNextPage(true);\n    setPosts([]);\n    setFilterPostsVersion(filterPostsVersion + 1);\n  }, [filters, nestedProperty.get(filters, \"transit.length\")]);\n\n  return (\n    <StandardContainer home>\n      <HomeSearch filters={filters} setFilters={setFilters} />\n      <HomeMainContainer>\n        <HomeFilters filters={filters} setFilters={setFilters} />\n        <HomePostsList\n          loading={loading}\n          posts={posts}\n          totalDocs={totalDocs}\n          hasFilters={!isEmptyObject(filters)}\n          setNextPage={() => setNextPage(hasNextPage, loading, setPage, page)}\n          postsLoadingError={postsLoadingError}\n        />\n      </HomeMainContainer>\n    </StandardContainer>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { StandardContainer } from \"../containers/container\";\nimport { InputBox } from \"../containers/container\";\nimport { Center } from \"../alignment/Center\";\nimport axios from \"../../axios\";\nimport queryString from \"query-string\";\nimport { connect } from \"react-redux\";\nimport FilledButton from \"../buttons/FilledButton\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { NoticeText, NoticeHeading } from \"../notices/notice_styles\";\nimport Loading from \"../loading/Loading\";\nimport { getUserInfo } from \"../../services/load_data_services\";\n\nclass VerifyEmail extends React.Component {\n  state = { validDate: false, loading: true };\n\n  async componentDidMount() {\n    const { emailVerificationToken } = queryString.parse(\n      window.location.search\n    );\n\n    // console.log(emailVerificationToken);\n    const { data } = await axios.post(\"/users/verify_email\", {\n      emailVerificationToken,\n    });\n    if (data.success) {\n      await getUserInfo();\n\n      this.setSuccessMessage();\n    } else {\n      this.setFailureMessage();\n    }\n\n    this.setState({ loading: false });\n\n    // console.log(this.state.loading);\n  }\n\n  setSuccessMessage() {\n    const heading = \"Email Verified\";\n    const text = \"Your email has been verified. You can close this page.\";\n    this.setState({ heading, text });\n  }\n\n  setFailureMessage() {\n    const heading = \"Something Went Wrong\";\n    const text = `We were unable to verify your email. Please try resending the link from your account settings. You can close this page.`;\n    this.setState({ heading, text });\n  }\n\n  closePage() {\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    return (\n      <StandardContainer>\n        <Center vertical navbarHeight={this.props.navbarHeight} fillPage>\n          <InputBox\n            center\n            navbarBottomMargin\n            navbarHeight={this.props.navbarHeight}\n            width=\"60%\"\n            height=\"22rem\"\n            customSize\n          >\n            <Center>\n              <NoticeHeading>{this.state.heading}</NoticeHeading>\n              <NoticeText smallBottomSpace> {this.state.text} </NoticeText>\n              <FilledButton\n                btnText=\"Close\"\n                onClick={this.closePage.bind(this)}\n              />\n              {this.state.loading && (\n                <Loading\n                  solidBackground\n                  loading={this.state.loading}\n                  loadingText=\"Verifying Email\"\n                />\n              )}\n            </Center>\n          </InputBox>\n        </Center>\n      </StandardContainer>\n    );\n  }\n}\n\nconst mapStateToProps = ({ navbarState }) => ({\n  navbarHeight: navbarState.navbarHeight,\n});\n\nexport default withRouter(connect(mapStateToProps)(VerifyEmail));\n","import styled from \"styled-components\";\n\nexport const StandardImage = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n`;\n","import styled from \"styled-components\";\nimport is from 'styled-is';\n\nexport const AboutMainImage = styled.div`\n  margin-bottom: 9rem;\n  \n   ${is('lastImage')`\n    margin-bottom: 0;\n  `};\n`\n\nexport const AboutParagraph = styled.p`\n  margin-bottom: 3.4rem;\n  line-height: 2.4rem;\n  \n   ${is('subParagraph')`\n    margin-bottom: 6rem;\n  `};\n   \n    ${is('lastParagraph')`\n    margin-bottom: 0;\n  `};\n   \n`\n\nexport const AboutHeading = styled.h2`\n  text-align: center;\n  font-size: 3rem;\n  margin-bottom: 3rem;\n`\n","import React from \"react\";\nimport {\n  StandardContainer,\n  TextContainerInner,\n} from \"../../containers/container\";\nimport { CenteredHeading } from \"../../text/text\";\nimport { StandardImage } from \"../../images/images\";\nimport { AboutMainImage, AboutParagraph, AboutHeading } from \"./about_styles\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <StandardContainer text>\n        <TextContainerInner>\n          <AboutHeading smallBottomMargin>Why Spekkly Exists</AboutHeading>\n          <AboutParagraph>\n            Quora’s mission is to share and grow the world’s knowledge. A vast\n            amount of the knowledge that would be valuable to many people is\n            currently only available to a few — either locked in people’s heads,\n            or only accessible to select groups. We want to connect the people\n            who have knowledge to the people who need it, to bring together\n            people with different perspectives so they can understand each other\n            better, and to empower everyone to share their knowledge for the\n            benefit of the rest of the world.\n          </AboutParagraph>\n          <AboutMainImage>\n            <StandardImage src=\"https://storage.cloud.google.com/spekkly_public/about_main_image.jpg?authuser=4\" />\n          </AboutMainImage>\n\n          <AboutHeading>Who Created Spekkly</AboutHeading>\n          <AboutParagraph>\n            The heart of Quora is questions — questions that affect the world,\n            questions that explain recent world events, questions that guide\n            important life decisions, and questions that provide insights into\n            why other people think differently. Quora is a place where you can\n            ask questions you care about and get answers that are amazing.\n          </AboutParagraph>\n\n          <AboutMainImage lastImage>\n            <StandardImage src=\"https://storage.cloud.google.com/spekkly_public/about_main_image.jpg?authuser=4\" />\n          </AboutMainImage>\n        </TextContainerInner>\n      </StandardContainer>\n    );\n  }\n}\n\nexport default About;\n","import styled from \"styled-components\";\nimport is from 'styled-is';\n\nexport const NoMatchMainTitle = styled.h1`\n    font-size: 10rem;\n    text-align: center;\n    color: #afafaf;\n    margin-bottom: 2.4rem;\n`\n\nexport const NoMatchText = styled.p`\n  font-size: 1.8rem;\n  text-align: center;\n  width: 80%;\n`\n\nexport const NoMatchLink = styled.div`\n   color: #2A5DB0;\n   \n    ${is('middleLink')`\n        margin-bottom: .7rem;\n        margin-top: .7rem;\n    `};\n`\n\nexport const NoMatchLinkContainer = styled.div`\n  margin-top: 4rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-content: center;\n  width: 80%;\n`\n","import React from \"react\";\nimport {\n  StandardContainer,\n  TextContainerInner,\n} from \"../../containers/container\";\nimport {\n  NoMatchMainTitle,\n  NoMatchText,\n  NoMatchLink,\n  NoMatchLinkContainer,\n} from \"./error_styles\";\n\nimport { BoldText } from \"../../text/text\";\n\nimport { Link } from \"react-router-dom\";\nimport { Center } from \"../../alignment/Center\";\n\nclass NoMatch extends React.Component {\n  render() {\n    return (\n      <StandardContainer text>\n        <TextContainerInner>\n          <NoMatchMainTitle>404</NoMatchMainTitle>\n          <Center>\n            <NoMatchText>\n              We're sorry but we could not find that page. Perhaps you're\n              looking for one of the pages below?\n            </NoMatchText>\n          </Center>\n          <Center>\n            <NoMatchLinkContainer>\n              <div>\n                <BoldText>Post</BoldText>\n                <Link to=\"/\">\n                  <NoMatchLink middleLink> View Public Posts </NoMatchLink>\n                </Link>\n                <Link to=\"/create-post\">\n                  <NoMatchLink> Create Post </NoMatchLink>\n                </Link>\n              </div>\n              <div>\n                <BoldText>Account</BoldText>\n                <Link to=\"/posts\">\n                  <NoMatchLink middleLink> My Posts </NoMatchLink>\n                </Link>\n                <Link to=\"/messages\">\n                  <NoMatchLink middleLink> Messages </NoMatchLink>\n                </Link>\n                <Link to=\"/settings\">\n                  <NoMatchLink> Settings </NoMatchLink>\n                </Link>\n              </div>\n              <div>\n                <BoldText>Company</BoldText>\n                <Link to=\"/about\">\n                  <NoMatchLink middleLink> About </NoMatchLink>\n                </Link>\n                <Link to=\"/terms-of-service\">\n                  <NoMatchLink middleLink> Terms of Service </NoMatchLink>\n                </Link>\n                <Link to=\"/privacy-policy\">\n                  <NoMatchLink> Privacy Policy </NoMatchLink>\n                </Link>\n              </div>\n            </NoMatchLinkContainer>\n          </Center>\n        </TextContainerInner>\n      </StandardContainer>\n    );\n  }\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport {\n  StandardContainer,\n  TextContainerInner,\n} from \"../../containers/container\";\nimport { CenteredHeading, BoldText } from \"../../text/text\";\nimport {\n  SectionHeading,\n  TermsPrivacyTitle,\n  TermsPrivacyDate,\n  TermsPrivacyLink,\n} from \"./terms_privacy_styles\";\nimport { Center } from \"../../alignment/Center\";\n\nconst PrivacyPolicy = () => (\n  <StandardContainer text>\n    <TextContainerInner>\n      <CenteredHeading> Privacy Policy</CenteredHeading>\n\n      <TermsPrivacyDate>Last updated: February 10, 2020</TermsPrivacyDate>\n\n      <p>\n        This Privacy Policy describes Our policies and procedures on the\n        collection, use and disclosure of Your information when You use the\n        Service and tells You about Your privacy rights and how the law protects\n        You.\n      </p>\n\n      <br />\n\n      <p>\n        We use Your Personal data to provide and improve the Service. By using\n        the Service, You agree to the collection and use of information in\n        accordance with this Privacy Policy.\n      </p>\n      <br />\n      <br />\n      <br />\n\n      <Center>\n        <TermsPrivacyTitle>Interpretation and Definitions</TermsPrivacyTitle>\n      </Center>\n      <br />\n\n      <SectionHeading>Interpretation</SectionHeading>\n      <p>\n        The words of which the initial letter is capitalized have meanings\n        defined under the following conditions. The following definitions shall\n        have the same meaning regardless of whether they appear in singular or\n        in plural.\n      </p>\n\n      <br />\n      <br />\n\n      <SectionHeading>Definitions</SectionHeading>\n      <p>For the purposes of this Privacy Policy:</p>\n\n      <br />\n      <ul>\n        <li>\n          <BoldText>You</BoldText> means the individual accessing or using the\n          Service, or the company, or other legal entity on behalf of which such\n          individual is accessing or using the Service, as applicable.\n        </li>\n        <br />\n        <li>\n          <BoldText>Company</BoldText> (referred to as either \"the Company\",\n          \"We\", \"Us\" or \"Our\" in this Agreement) refers to Spekkly, LLC, 1234\n          Mariposa Street, San Francisco, CA 94107.\n        </li>\n        <br />\n        <li>\n          <BoldText>Affiliate</BoldText> means an entity that controls, is\n          controlled by or is under common control with a party, where \"control\"\n          means ownership of 50% or more of the shares, equity interest or other\n          securities entitled to vote for election of directors or other\n          managing authority.\n        </li>\n        <br />\n        <li>\n          <BoldText>Account</BoldText> means a unique account created for You to\n          access our Service or parts of our Service.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Website</BoldText> refers to Spekkly, accessible from\n          spekkly.com\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Service</BoldText> refers to the Website.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Country</BoldText> refers to: California, United States\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Service Provider</BoldText> means any natural or legal\n          person who processes the data on behalf of the Company. It refers to\n          third- party companies or individuals employed by the Company to\n          facilitate the Service, to provide the Service on behalf of the\n          Company, to perform services related to the Service or to assist the\n          Company in analyzing how the Service is used.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Third-party Social Media Service</BoldText> refers to any\n          website or any social network website through which a User can log in\n          or create an account to use the Service.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Personal Data</BoldText> is any information that relates to\n          an identified or identifiable individual.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Cookies</BoldText> are small files that are placed on Your\n          computer, mobile device or any other device by a website, containing\n          the details of Your browsing history on that website among its many\n          uses.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>Usage Data</BoldText> refers to data collected\n          automatically, either generated by the use of the Service or from the\n          Service infrastructure itself (for example, the duration of a page\n          visit).\n        </li>\n      </ul>\n      <br />\n      <br />\n      <br />\n\n      <Center>\n        <TermsPrivacyTitle>\n          Collecting and Using Your Personal Data\n        </TermsPrivacyTitle>\n      </Center>\n      <br />\n      <br />\n\n      <SectionHeading larger>Types of Data Collected</SectionHeading>\n      <SectionHeading>Personal Data</SectionHeading>\n      <p>\n        While using Our Service, We may ask You to provide Us with certain\n        personally identifiable information that can be used to contact or\n        identify You. Personally identifiable information may include, but is\n        not limited to:\n      </p>\n      <br />\n\n      <ul>\n        <li>Email address</li>\n        <li>First name and last name</li>\n        <li>Address, State, Province, ZIP/Postal code, City</li>\n        <li>Usage Data</li>\n      </ul>\n\n      <br />\n      <br />\n\n      <SectionHeading>Usage Data</SectionHeading>\n      <p>Usage Data is collected automatically when using the Service.</p>\n      <br />\n      <p>\n        Usage Data may include information such as Your Device's Internet\n        Protocol address (e.g. IP address), browser type, browser version, the\n        pages of our Service that You visit, the time and date of Your visit,\n        the time spent on those pages, unique device identifiers and other\n        diagnostic data.\n      </p>\n      <br />\n\n      <p>\n        When You access the Service by or through a mobile device, We may\n        collect certain information automatically, including, but not limited\n        to, the type of mobile device You use, Your mobile device unique ID, the\n        IP address of Your mobile device, Your mobile operating system, the type\n        of mobile Internet browser You use, unique device identifiers and other\n        diagnostic data.\n      </p>\n\n      <br />\n\n      <p>\n        We may also collect information that Your browser sends whenever You\n        visit our Service or when You access the Service by or through a mobile\n        device.\n      </p>\n      <br />\n      <br />\n\n      <SectionHeading>Tracking Technologies and Cookies</SectionHeading>\n\n      <p>\n        We use Cookies and similar tracking technologies to track the activity\n        on Our Service and store certain information. Tracking technologies used\n        are beacons, tags, and scripts to collect and track information and to\n        improve and analyze Our Service.\n      </p>\n\n      <br />\n      <p>\n        You can instruct Your browser to refuse all Cookies or to indicate when\n        a Cookie is being sent. However, if You do not accept Cookies, You may\n        not be able to use some parts of our Service.\n      </p>\n\n      <br />\n      <p>\n        Cookies can be \"Persistent\" or \"Session\" Cookies. Persistent Cookies\n        remain on your personal computer or mobile device when You go offline,\n        while Session Cookies are deleted as soon as You close your web browser.\n      </p>\n\n      <br />\n      <p>\n        We use both session and persistent Cookies for the purposes set out\n        below:\n      </p>\n      <br />\n      <br />\n\n      <ul>\n        <li>\n          <BoldText> Necessary / Essential Cookies</BoldText>\n          <br />\n          <br />\n          <p>Type: Session Cookies</p>\n\n          <br />\n          <p>Administered by: Us</p>\n          <br />\n          <p>\n            Purpose: These Cookies are essential to provide You with services\n            available through the Website and to enable You to use some of its\n            features. They help to authenticate users and prevent fraudulent use\n            of user accounts. Without these Cookies, the services that You have\n            asked for cannot be provided, and We only use these Cookies to\n            provide You with those services.\n          </p>\n        </li>\n        <br />\n        <br />\n\n        <li>\n          <BoldText> Cookies Policy / Notice Acceptance Cookies</BoldText>\n          <br />\n          <br />\n          <p>Type: Persistent Cookies</p>\n\n          <br />\n          <p>Administered by: Us</p>\n          <br />\n          <p>\n            Purpose: These Cookies identify if users have accepted the use of\n            cookies on the Website.\n          </p>\n        </li>\n        <br />\n        <br />\n\n        <li>\n          <BoldText> Functionality Cookies</BoldText>\n          <br />\n          <br />\n          <p>Type: Persistent Cookies</p>\n\n          <br />\n          <p>Administered by: Us</p>\n          <br />\n          <p>\n            Purpose: These Cookies allow us to remember choices You make when\n            You use the Website, such as remembering your login details or\n            language preference. The purpose of these Cookies is to provide You\n            with a more personal experience and to avoid You having to re-enter\n            your preferences every time You use the Website.\n          </p>\n        </li>\n\n        <br />\n        <br />\n\n        <li>\n          <BoldText> Tracking and Performance Cookies</BoldText>\n          <br />\n          <br />\n          <p>Type: Persistent Cookies</p>\n\n          <br />\n          <p>Administered by: Third-Parties</p>\n          <br />\n          <p>\n            Purpose: These Cookies are used to track information about traffic\n            to the Website and how users use the Website. The information\n            gathered via these Cookies may directly or indirectly identify you\n            as an individual visitor. This is because the information collected\n            is typically linked to a pseudonymous identifier associated with the\n            device you use to access the Website. We may also use these Cookies\n            to test new advertisements, pages, features or new functionality of\n            the Website to see how our users react to them.\n          </p>\n        </li>\n      </ul>\n\n      <br />\n      <br />\n\n      <SectionHeading larger>Use of Your Personal Data</SectionHeading>\n      <p>The Company may use Personal Data for the following purposes:</p>\n      <br />\n      <ul>\n        <li>\n          <BoldText>To provide and maintain our Service</BoldText>, including to\n          monitor the usage of our Service.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>To manage Your Account:</BoldText> to manage Your\n          registration as a user of the Service. The Personal Data You provide\n          can give You access to different functionalities of the Service that\n          are available to You as a registered user.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>For the performance of a contract:</BoldText> the\n          development, compliance and undertaking of the purchase contract for\n          the products, items or services You have purchased or of any other\n          contract with Us through the Service.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>To contact You:</BoldText> To contact You by email,\n          telephone calls, SMS, or other equivalent forms of electronic\n          communication, such as a mobile application's push notifications\n          regarding updates or informative communications related to the\n          functionalities, products or contracted services, including the\n          security updates, when necessary or reasonable for their\n          implementation.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>To provide You</BoldText> with news, special offers and\n          general information about other goods, services and events which we\n          offer that are similar to those that you have already purchased or\n          enquired about unless You have opted not to receive such information.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>To manage Your requests:</BoldText> To attend and manage\n          Your requests to Us.\n        </li>\n      </ul>\n      <br />\n      <br />\n\n      <p>We may share your personal information in the following situations:</p>\n      <br />\n\n      <ul>\n        <li>\n          <BoldText>With Service Providers:</BoldText> We may share Your\n          personal information with Service Providers to monitor and analyze the\n          use of our Service, to show advertisements to You to help support and\n          maintain Our Service, to contact You, to advertise on third party\n          websites to You after You visited our Service or for payment\n          processing.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>For Business transfers:</BoldText> We may share or transfer\n          Your personal information in connection with, or during negotiations\n          of, any merger, sale of Company assets, financing, or acquisition of\n          all or a portion of our business to another company.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>With Affiliates:</BoldText> We may share Your information\n          with Our affiliates, in which case we will require those affiliates to\n          honor this Privacy Policy. Affiliates include Our parent company and\n          any other subsidiaries, joint venture partners or other companies that\n          We control or that are under common control with Us.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>With Business partners:</BoldText> We may share Your\n          information with Our business partners to offer You certain products,\n          services or promotions.\n        </li>\n\n        <br />\n        <li>\n          <BoldText>With other users:</BoldText> when You share personal\n          information or otherwise interact in the public areas with other\n          users, such information may be viewed by all users and may be publicly\n          distributed outside. If You interact with other users or register\n          through a Third-Party Social Media Service, Your contacts on the\n          Third-Party Social Media Service may see Your name, profile, pictures\n          and description of Your activity. Similarly, other users will be able\n          to view descriptions of Your activity, communicate with You and view\n          Your profile.\n        </li>\n      </ul>\n      <br />\n      <br />\n\n      <SectionHeading larger>Transfer of Your Personal Data</SectionHeading>\n      <p>\n        Your information, including Personal Data, is processed at the Company's\n        operating offices and in any other places where the parties involved in\n        the processing are located. It means that this information may be\n        transferred to — and maintained on — computers located outside of Your\n        state, province, country or other governmental jurisdiction where the\n        data protection laws may differ than those from Your jurisdiction.\n      </p>\n\n      <br />\n      <p>\n        Your consent to this Privacy Policy followed by Your submission of such\n        information represents Your agreement to that transfer.\n      </p>\n\n      <br />\n      <p>\n        The Company will take all steps reasonably necessary to ensure that Your\n        data is treated securely and in accordance with this Privacy Policy and\n        no transfer of Your Personal Data will take place to an organization or\n        a country unless there are adequate controls in place including the\n        security of Your data and other personal information.\n      </p>\n      <br />\n      <br />\n\n      <SectionHeading larger>Transfer of Your Personal Data</SectionHeading>\n      <SectionHeading>Business Transactions</SectionHeading>\n\n      <p>\n        If the Company is involved in a merger, acquisition or asset sale, Your\n        Personal Data may be transferred. We will provide notice before Your\n        Personal Data is transferred and becomes subject to a different Privacy\n        Policy.\n      </p>\n      <br />\n\n      <SectionHeading>Law enforcement</SectionHeading>\n      <p>\n        If the Company is involved in a merger, acquisition or asset sale, Your\n        Personal Data may be transferred. We will provide notice before Your\n        Personal Data is transferred and becomes subject to a different Privacy\n        Policy.\n      </p>\n      <br />\n\n      <SectionHeading>Other legal requirements</SectionHeading>\n      <p>\n        The Company may disclose Your Personal Data in the good faith belief\n        that such action is necessary to:\n      </p>\n\n      <br />\n      <ul>\n        <li>Comply with a legal obligation</li>\n        <li>Protect and defend the rights or property of the Company</li>\n        <li>\n          Prevent or investigate possible wrongdoing in connection with the\n          Service\n        </li>\n        <li>\n          Protect the personal safety of Users of the Service or the public\n        </li>\n        <li>Protect against legal liability</li>\n      </ul>\n\n      <br />\n      <br />\n      <SectionHeading>Security of Your Personal Data</SectionHeading>\n      <p>\n        The security of Your Personal Data is important to Us, but remember that\n        no method of transmission over the Internet, or method of electronic\n        storage is 100% secure. While We strive to use commercially acceptable\n        means to protect Your Personal Data, We cannot guarantee its absolute\n        security.\n      </p>\n\n      <br />\n      <br />\n\n      <Center>\n        <TermsPrivacyTitle>\n          Detailed Information on the Processing of Your Personal Data\n        </TermsPrivacyTitle>\n      </Center>\n\n      <br />\n\n      <p>\n        Service Providers have access to Your Personal Data only to perform\n        their tasks on Our behalf and are obligated not to disclose or use it\n        for any other purpose.\n      </p>\n      <br />\n\n      <SectionHeading>Analytics</SectionHeading>\n\n      <p>\n        We may use third-party Service providers to monitor and analyze the use\n        of our Service.\n      </p>\n\n      <br />\n      <ul>\n        <li>\n          <div>\n            <BoldText>Google Analytics:</BoldText> Google Analytics is a web\n            analytics service offered by Google that tracks and reports website\n            traffic. Google uses the data collected to track and monitor the use\n            of our Service. This data is shared with other Google services.\n            Google may use the collected data to contextualise and personalise\n            the ads of its own advertising network.\n          </div>\n          <br />\n\n          <p>\n            You can opt-out of having made your activity on the Service\n            available to Google Analytics by installing the Google Analytics\n            opt-out browser add-on. The add- on prevents the Google Analytics\n            JavaScript (ga.js, analytics.js and dc.js) from sharing information\n            with Google Analytics about visits activity.\n          </p>\n\n          <br />\n          <p>\n            {\" \"}\n            For more information on the privacy practices of Google, please\n            visit the Google Privacy & Terms web page:{\" \"}\n            <TermsPrivacyLink\n              target=\"_blank\"\n              href=\"https://policies.google.com/privacy?hl=en-US\"\n            >\n              {\" \"}\n              Google Analytics Privacy Policy{\" \"}\n            </TermsPrivacyLink>\n          </p>\n        </li>\n      </ul>\n      <br />\n      <br />\n\n      <SectionHeading>Children's Privacy</SectionHeading>\n      <p>\n        Our Service does not address anyone under the age of 13. We do not\n        knowingly collect personally identifiable information from anyone under\n        the age of 13. If You are a parent or guardian and You are aware that\n        Your child has provided Us with Personal Data, please contact Us. If We\n        become aware that We have collected Personal Data from anyone under the\n        age of 13 without verification of parental consent, We take steps to\n        remove that information from Our servers.\n      </p>\n\n      <br />\n      <p>\n        We also may limit how We collect, use, and store some of the information\n        of Users between 13 and 18 years old. In some cases, this means We will\n        be unable to provide certain functionality of the Service to these\n        users.\n      </p>\n\n      <br />\n      <p>\n        If We need to rely on consent as a legal basis for processing Your\n        information and Your country requires consent from a parent, We may\n        require Your parent's consent before We collect and use that\n        information.\n      </p>\n\n      <br />\n      <br />\n      <SectionHeading>Links to Other Websites</SectionHeading>\n      <p>\n        Our Service may contain links to other websites that are not operated by\n        Us. If You click on a third party link, You will be directed to that\n        third party's site. We strongly advise You to review the Privacy Policy\n        of every site You visit.\n      </p>\n      <br />\n\n      <p>\n        We have no control over and assume no responsibility for the content,\n        privacy policies or practices of any third party sites or services.\n      </p>\n\n      <br />\n      <br />\n      <SectionHeading>Changes to this Privacy Policy</SectionHeading>\n      <p>\n        We may update our Privacy Policy from time to time. We will notify You\n        of any changes by posting the new Privacy Policy on this page.\n      </p>\n\n      <br />\n      <p>\n        We will let You know via email and/or a prominent notice on Our Service,\n        prior to the change becoming effective and update the \"Last updated\"\n        date at the top of this Privacy Policy.\n      </p>\n\n      <br />\n      <p>\n        You are advised to review this Privacy Policy periodically for any\n        changes. Changes to this Privacy Policy are effective when they are\n        posted on this page.\n      </p>\n\n      <SectionHeading>Contact</SectionHeading>\n      <br />\n      <p>\n        If you have any questions about this Privacy Policy, You can contact us:\n      </p>\n\n      <ul>\n        <li>\n          By email:{\" \"}\n          <TermsPrivacyLink target=\"_blank\" href=\"mailto:support@spekkly.com\">\n            support@spekkly.com\n          </TermsPrivacyLink>\n        </li>\n      </ul>\n    </TextContainerInner>\n  </StandardContainer>\n);\n\nexport default PrivacyPolicy;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CreatePost from \"../pages/create_post/CreatePost\";\nimport Settings from \"../pages/settings/Settings\";\nimport Messages from \"../pages/messages/Messages\";\nimport UserPosts from \"../pages/user_posts/UserPosts\";\nimport PostDetails from \"../post/PostDetails\";\nimport TermsOfService from \"../pages/terms_privacy/TermsOfService\";\nimport Home from \"../pages/home/Home\";\nimport VerifyEmail from \"../errors/VerifyEmail\";\nimport About from \"../pages/about/About\";\nimport NoMatch from \"../pages/errors/NoMatch\";\nimport PrivacyPolicy from \"../pages/terms_privacy/PrivacyPolicy\";\n\nconst AppRouter = () => {\n  const isLoggedIn = useSelector(\n    ({ sessionState: { isLoggedIn } }) => isLoggedIn\n  );\n\n  return (\n    <Switch>\n      {isLoggedIn && (\n        <Route\n          exact\n          path=\"/post\"\n          render={() => (\n            <CreatePost title=\"Create Post\" formTypeProp=\"create\" />\n          )}\n        />\n      )}\n      {isLoggedIn && <Route exact path=\"/settings\" component={Settings} />}\n      {isLoggedIn && <Route exact path=\"/messages\" component={Messages} />}\n      {isLoggedIn && <Route exact path=\"/posts\" component={UserPosts} />}\n      <Route path=\"/terms-of-service\" exact component={TermsOfService} />\n      <Route path=\"/privacy-policy\" exact component={PrivacyPolicy} />\n      <Route\n        path=\"/posts/edit/:id\"\n        render={(params) => (\n          <CreatePost title=\"Edit Post\" formTypeProp=\"edit\" params={params} />\n        )}\n      />\n      <Route\n        path=\"/posts/:id\"\n        render={(params) => <PostDetails postSection=\"home\" params={params} />}\n      />\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/about\" exact component={About} />\n      <Route path=\"/users/verify-email\" exact component={VerifyEmail} />\n      <Route\n        path=\"/users/reset_password\"\n        render={(params) => <Home resetPassword params={params} />}\n      />\n      <Route path=\"*\">{isLoggedIn === false && <NoMatch />}</Route>\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Navbar from \"../navbar/Navbar\";\nimport \"./styles/App.scss\";\nimport { initApp } from \"./app_helper\";\nimport { isSignUpOpen, isLoginOpen } from \"../../redux/actions/login_actions\";\nimport LoginSignUp from \"../login_signup/LoginSignUp\";\nimport Favicon from \"react-favicon\";\nimport { AppContainer } from \"./styles/app_styles\";\nimport Modal from \"../modals/Modal\";\nimport AppRouter from \"../router/AppRouter\";\n\nconst App = () => {\n  // console.log(process.env.REACT_APP_NODE_ENV);\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const loginSignUpState = useSelector(\n    ({ loginSignUpState }) => loginSignUpState\n  );\n  const favicon = useSelector(({ assetState: { FAVICON } }) => FAVICON);\n  const blurBackground = useSelector(\n    ({ appState: { blurBackground } }) => blurBackground\n  );\n  const dispatch = useDispatch();\n\n  const closeLoginSignUpModal = () => {\n    dispatch(isSignUpOpen(false));\n    dispatch(isLoginOpen(false));\n  };\n\n  useEffect(() => {\n    initApp(setDataLoaded, dispatch);\n  }, [setDataLoaded]);\n\n  return (\n    <AppContainer blurBackground={blurBackground}>\n      <Favicon url={favicon} />\n      <Router>\n        <Navbar dataLoaded={dataLoaded} />\n        <AppRouter />\n        {(loginSignUpState.isSignUpOpen || loginSignUpState.isLoginOpen) && (\n          <Modal medium closeModal={closeLoginSignUpModal} showCloseButton>\n            <LoginSignUp />\n          </Modal>\n        )}\n      </Router>\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport App from \"./components/app/App\";\nimport store from \"./redux/store/store\";\n\nexport default class Index extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}